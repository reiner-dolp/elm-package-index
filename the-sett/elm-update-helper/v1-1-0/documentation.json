[
  {
    "name": "Update3",
    "comment": " Convenience function for lifting an update function for an inner model and\nmessages, that also returns an additional out parameters into a parent one.\n\n@docs lift\n@docs eval, evalMaybe, evalResult\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "eval",
        "comment": " Allows the output of an update function that returns type:\n\n    (model, Cmd msg, outmsg)\n\nTo have its model and out message evaluated in order to produce a new model,\nand to create more commands. The commands returned will be appended to those\npassed in using Cmd.batch.\n\n",
        "type": "(outmsg -> model -> ( model, Platform.Cmd.Cmd msg )) -> ( model, Platform.Cmd.Cmd msg, outmsg ) -> ( model, Platform.Cmd.Cmd msg )"
      },
      {
        "name": "evalMaybe",
        "comment": " Allows the output of an update function that returns type:\n\n    (model, Cmd msg, outmsg)\n\nTo have its model and out message evaluated in order to produce a new model,\nand to create more commands. The commands returned will be appended to those\npassed in using Cmd.batch.\n\n",
        "type": "(outMsg -> model -> ( model, Platform.Cmd.Cmd msg )) -> Platform.Cmd.Cmd msg -> ( model, Platform.Cmd.Cmd msg, Maybe.Maybe outMsg ) -> ( model, Platform.Cmd.Cmd msg )"
      },
      {
        "name": "evalResult",
        "comment": " Allows the output of an update function that returns type:\n\n       (model, Cmd msg, Maybe outmsg)\n\nTo have its model and out message evaluated in order to produce a new model,\nand to create more commands. The commands returned will be appended to those\npassed in using Cmd.batch.\n\n",
        "type": "(outMsg -> model -> ( model, Platform.Cmd.Cmd msg )) -> (error -> Platform.Cmd.Cmd msg) -> ( model, Platform.Cmd.Cmd msg, Result.Result error outMsg ) -> ( model, Platform.Cmd.Cmd msg )"
      },
      {
        "name": "lift",
        "comment": " Lifts an update function of type:\n\n    update : submsg -> submodel -> ( submodel, Cmd submsg, outmsg )\n\nInto one that returns:\n\n    (model, Cmd  msg, outmsg)\n\n",
        "type": "(model -> submodel) -> (submodel -> model -> model) -> (submsg -> msg) -> (submsg -> submodel -> ( submodel, Platform.Cmd.Cmd submsg, outmsg )) -> submsg -> model -> ( model, Platform.Cmd.Cmd msg, outmsg )"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Update2",
    "comment": " Convenience function for lifting an update function for an inner model\nand messages into a parent one.\n\n@docs eval, lift\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "eval",
        "comment": " Allows the output of an update function that returns type:\n\n    (model, Cmd msg)\n\nTo have its model evaluated in order to produce a new model, and to create more\ncommands. The commands returned will be appended to those passed in using\nCmd.batch.\n\nNote that this allows multiple invokations of the same update function to be\ninvoked recursively. Beware of causing infinite loops while doing this.\n\n",
        "type": "(model -> ( model, Platform.Cmd.Cmd msg )) -> ( model, Platform.Cmd.Cmd msg ) -> ( model, Platform.Cmd.Cmd msg )"
      },
      {
        "name": "lift",
        "comment": " Lifts an update function of type:\n\n    update : submsg -> submodel -> ( submodel, Cmd submsg )\n\nInto one that returns:\n\n    (model, Cmd  msg)\n\n",
        "type": "(model -> submodel) -> (submodel -> model -> model) -> (submsg -> msg) -> (submsg -> submodel -> ( submodel, Platform.Cmd.Cmd submsg )) -> submsg -> model -> ( model, Platform.Cmd.Cmd msg )"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Task.Extra",
    "comment": " Extra helper functions for working with Tasks.\n\n@docs message\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "message",
        "comment": " A command to pass a message to the Elm router and evaluate it in the next\nupdate cycle.\n",
        "type": "msg -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]