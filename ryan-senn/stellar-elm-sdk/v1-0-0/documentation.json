[
  {
    "name": "Stellar.Endpoints.OperationsForLedger",
    "comment": " Operations for Ledger Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OperationsForLedger.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForLedger.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.OperationsForAccount",
    "comment": " Operations for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OperationsForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForAccount.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.FindPaymentPaths",
    "comment": " Find Payment Paths Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure optional fields\n@docs setDestinationAssetCode, setDestinationAssetIssuer\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> Stellar.PublicKey.PublicKey -> Stellar.AssetType.AssetType -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.FindPaymentPaths.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setDestinationAssetCode",
        "comment": " Set the Destination Asset Code.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response"
      },
      {
        "name": "setDestinationAssetIssuer",
        "comment": " Set the Destination Asset Issuer.\n",
        "type": "Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.FindPaymentPaths.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllOperations",
    "comment": " All Operations Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllOperations.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllOperations.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.OperationDetails",
    "comment": " Operations Details Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationDetails.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OperationDetails.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationDetails.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.OperationsForTransaction",
    "comment": " Operations for Transaction Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Operation.Operation"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OperationsForTransaction.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OperationsForTransaction.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.PaymentsForAccount",
    "comment": " Payments for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Payment.Payment"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.PaymentsForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForAccount.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.PaymentsForTransaction",
    "comment": " Payments for Transaction Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Payment.Payment"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> String -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.PaymentsForTransaction.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForTransaction.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllPayments",
    "comment": " All Payments Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Payment.Payment"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllPayments.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllPayments.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.PaymentsForLedger",
    "comment": " Payments for Ledger Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Payment.Payment"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.PaymentsForLedger.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.PaymentsForLedger.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.EffectsForTransaction",
    "comment": " Effects for Transaction Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Effect.Effect"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> String -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.EffectsForTransaction.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForTransaction.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.EffectsForOperation",
    "comment": " Effects for Operation Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Effect.Effect"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.EffectsForOperation.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForOperation.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.EffectsForAccount",
    "comment": " Effects for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Effect.Effect"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.EffectsForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForAccount.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.EffectsForLedger",
    "comment": " Effects for Ledger Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Effect.Effect"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.EffectsForLedger.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.EffectsForLedger.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllEffects",
    "comment": " All Effects Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Effect.Effect"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllEffects.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllEffects.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operation",
    "comment": " Operation Resource\n\n# Union Type and decoder\n@docs Operation, decoder\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Operation",
        "comment": " Union Type of all possible Operations\n",
        "args": [],
        "cases": [
          [
            "CreateAccount",
            [
              "Stellar.Resources.Operations.CreateAccount.CreateAccount"
            ]
          ],
          [
            "Payment",
            [
              "Stellar.Resources.Operations.Payment.Payment"
            ]
          ],
          [
            "PathPayment",
            [
              "Stellar.Resources.Operations.PathPayment.PathPayment"
            ]
          ],
          [
            "ManageOffer",
            [
              "Stellar.Resources.Operations.ManageOffer.ManageOffer"
            ]
          ],
          [
            "CreatePassiveOffer",
            [
              "Stellar.Resources.Operations.CreatePassiveOffer.CreatePassiveOffer"
            ]
          ],
          [
            "SetOptions",
            [
              "Stellar.Resources.Operations.SetOptions.SetOptions"
            ]
          ],
          [
            "ChangeTrust",
            [
              "Stellar.Resources.Operations.ChangeTrust.ChangeTrust"
            ]
          ],
          [
            "AllowTrust",
            [
              "Stellar.Resources.Operations.AllowTrust.AllowTrust"
            ]
          ],
          [
            "AccountMerge",
            [
              "Stellar.Resources.Operations.AccountMerge.AccountMerge"
            ]
          ],
          [
            "Inflation",
            [
              "Stellar.Resources.Operations.Inflation.Inflation"
            ]
          ],
          [
            "ManageData",
            [
              "Stellar.Resources.Operations.ManageData.ManageData"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operation.Operation"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Payment",
    "comment": " Payment Resource\n\n# Type alias and decoder\n@docs Payment, decoder\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Payment",
        "comment": " Union Type of possible Payments\n",
        "args": [],
        "cases": [
          [
            "CreateAccount",
            [
              "Stellar.Resources.Operations.CreateAccount.CreateAccount"
            ]
          ],
          [
            "Payment_",
            [
              "Stellar.Resources.Operations.Payment.Payment"
            ]
          ],
          [
            "PathPayment",
            [
              "Stellar.Resources.Operations.PathPayment.PathPayment"
            ]
          ],
          [
            "AccountMerge",
            [
              "Stellar.Resources.Operations.AccountMerge.AccountMerge"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Payment.Payment"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effect",
    "comment": " Effect Resource\n\n# Union Type and decoder\n@docs Effect, decoder\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Effect",
        "comment": " Union Type of all possible Effects\n",
        "args": [],
        "cases": [
          [
            "AccountCreated",
            [
              "Stellar.Resources.Effects.AccountCreated.AccountCreated"
            ]
          ],
          [
            "AccountCredited",
            [
              "Stellar.Resources.Effects.AccountCredited.AccountCredited"
            ]
          ],
          [
            "AccountDebited",
            [
              "Stellar.Resources.Effects.AccountDebited.AccountDebited"
            ]
          ],
          [
            "AccountFlagsUpdated",
            [
              "Stellar.Resources.Effects.AccountFlagsUpdated.AccountFlagsUpdated"
            ]
          ],
          [
            "AccountHomeDomainUpdated",
            [
              "Stellar.Resources.Effects.AccountHomeDomainUpdated.AccountHomeDomainUpdated"
            ]
          ],
          [
            "AccountInflationDestinationUpdated",
            [
              "Stellar.Resources.Effects.AccountInflationDestinationUpdated.AccountInflationDestinationUpdated"
            ]
          ],
          [
            "AccountRemoved",
            [
              "Stellar.Resources.Effects.AccountRemoved.AccountRemoved"
            ]
          ],
          [
            "AccountThresholdsUpdated",
            [
              "Stellar.Resources.Effects.AccountThresholdsUpdated.AccountThresholdsUpdated"
            ]
          ],
          [
            "DataCreated",
            [
              "Stellar.Resources.Effects.DataCreated.DataCreated"
            ]
          ],
          [
            "DataRemoved",
            [
              "Stellar.Resources.Effects.DataRemoved.DataRemoved"
            ]
          ],
          [
            "DataUpdated",
            [
              "Stellar.Resources.Effects.DataUpdated.DataUpdated"
            ]
          ],
          [
            "OfferCreated",
            [
              "Stellar.Resources.Effects.OfferCreated.OfferCreated"
            ]
          ],
          [
            "OfferRemoved",
            [
              "Stellar.Resources.Effects.OfferRemoved.OfferRemoved"
            ]
          ],
          [
            "OfferUpdated",
            [
              "Stellar.Resources.Effects.OfferUpdated.OfferUpdated"
            ]
          ],
          [
            "SignerCreated",
            [
              "Stellar.Resources.Effects.SignerCreated.SignerCreated"
            ]
          ],
          [
            "SignerRemoved",
            [
              "Stellar.Resources.Effects.SignerRemoved.SignerRemoved"
            ]
          ],
          [
            "Trade",
            [
              "Stellar.Resources.Effects.Trade.Trade"
            ]
          ],
          [
            "TrustlineAuthorised",
            [
              "Stellar.Resources.Effects.TrustlineAuthorised.TrustlineAuthorised"
            ]
          ],
          [
            "TrustlineCreated",
            [
              "Stellar.Resources.Effects.TrustlineCreated.TrustlineCreated"
            ]
          ],
          [
            "TrustlineDeauthorised",
            [
              "Stellar.Resources.Effects.TrustlineDeauthorised.TrustlineDeauthorised"
            ]
          ],
          [
            "TrustlineRemoved",
            [
              "Stellar.Resources.Effects.TrustlineRemoved.TrustlineRemoved"
            ]
          ],
          [
            "TrustlineUpdated",
            [
              "Stellar.Resources.Effects.TrustlineUpdated.TrustlineUpdated"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effect.Effect"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.OffersForAccount",
    "comment": " Offers for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Offer.Offer"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OffersForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OffersForAccount.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AccountDetails",
    "comment": " Account Details Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Account.Account"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.AccountDetails.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AccountDetails.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AccountDetails.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllTransactions",
    "comment": " All Transactions Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Transaction.Transaction"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllTransactions.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllTransactions.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.TransactionDetails",
    "comment": " Transaction Details Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Transaction.Transaction"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> String -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionDetails.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.TransactionDetails.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionDetails.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.TransactionsForLedger",
    "comment": " Transaction for Ledger Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Transaction.Transaction"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.TransactionsForLedger.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForLedger.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.TransactionsForAccount",
    "comment": " Transaction for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Transaction.Transaction"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.TransactionsForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.TransactionsForAccount.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.PostTransaction",
    "comment": " Post Transaction Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Transaction.Transaction"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> String -> HttpBuilder.RequestBuilder Stellar.Endpoints.PostTransaction.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.PostTransaction.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.PostTransaction.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.ManageData",
    "comment": " Manage Data Operation\n\n# Type alias and decoder\n@docs ManageData, decoder\n\n",
    "aliases": [
      {
        "name": "ManageData",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , name : String , value : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.ManageData.ManageData"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.Payment",
    "comment": " Payment Operation\n\n# Type alias and decoder\n@docs Payment, decoder\n\n",
    "aliases": [
      {
        "name": "Payment",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , from : String , to : String , amount : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.Payment.Payment"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.ManageOffer",
    "comment": " Manage Offer Operation\n\n# Type alias and decoder\n@docs ManageOffer, decoder\n\n",
    "aliases": [
      {
        "name": "ManageOffer",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , offerId : Int , amount : String , price : String , priceR : String , buyingAssetType : Stellar.AssetType.AssetType , buyingAssetCode : String , buyingAssetIssuer : String , sellingAssetType : Stellar.AssetType.AssetType , sellingAssetCode : String , sellingAssetIssuer : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.ManageOffer.ManageOffer"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.SetOptions",
    "comment": " Set Options Operation\n\n# Type alias and decoder\n@docs SetOptions, decoder\n\n",
    "aliases": [
      {
        "name": "SetOptions",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , homeDomain : Maybe.Maybe String , inflationDestination : Maybe.Maybe String , masterKeyWeight : Maybe.Maybe Int , signerKey : Maybe.Maybe Stellar.PublicKey.PublicKey , signerWeight : Maybe.Maybe Int , setFlags : List Int , setFlagsS : List String , clearFlags : List Int , clearFlagsS : List String , lowThreshold : Maybe.Maybe Int , medThreshold : Maybe.Maybe Int , highThreshold : Maybe.Maybe Int , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.SetOptions.SetOptions"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.AllowTrust",
    "comment": " Allow Trust Operation\n\n# Type alias and decoder\n@docs AllowTrust, decoder\n\n",
    "aliases": [
      {
        "name": "AllowTrust",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , assetType : Stellar.AssetType.AssetType , assetCode : String , assetIssuer : String , trustee : String , trustor : String , authorize : Bool , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.AllowTrust.AllowTrust"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.Inflation",
    "comment": " Inflation Operation\n\n# Type alias and decoder\n@docs Inflation, decoder\n\n",
    "aliases": [
      {
        "name": "Inflation",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.Inflation.Inflation"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.CreatePassiveOffer",
    "comment": " Create Passive Offer Operation\n\n# Type alias and decoder\n@docs CreatePassiveOffer, decoder\n\n",
    "aliases": [
      {
        "name": "CreatePassiveOffer",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , offerId : Int , amount : String , price : String , priceR : String , buyingAssetType : Stellar.AssetType.AssetType , buyingAssetCode : String , buyingAssetIssuer : String , sellingAssetType : Stellar.AssetType.AssetType , sellingAssetCode : String , sellingAssetIssuer : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.CreatePassiveOffer.CreatePassiveOffer"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.ChangeTrust",
    "comment": " Change Trust Operation\n\n# Type alias and decoder\n@docs ChangeTrust, decoder\n\n",
    "aliases": [
      {
        "name": "ChangeTrust",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , assetType : Stellar.AssetType.AssetType , assetCode : String , assetIssuer : String , limit : String , trustee : String , trustor : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.ChangeTrust.ChangeTrust"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.PathPayment",
    "comment": " Path Payment Operation\n\n# Type alias and decoder\n@docs PathPayment, decoder\n\n",
    "aliases": [
      {
        "name": "PathPayment",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , from : String , to : String , amount : String , assetCode : String , assetIssuer : String , assetType : Stellar.AssetType.AssetType , sourceMax : String , sourceAssetType : Stellar.AssetType.AssetType , sourceAssetCode : String , sourceAssetIssuer : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.PathPayment.PathPayment"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.AccountMerge",
    "comment": " Account merge Operation\n\n# Type alias and decoder\n@docs AccountMerge, decoder\n\n",
    "aliases": [
      {
        "name": "AccountMerge",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , account : String , into : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.AccountMerge.AccountMerge"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.CreateAccount",
    "comment": " Create Account Operation\n\n# Type alias and decoder\n@docs CreateAccount, decoder\n\n",
    "aliases": [
      {
        "name": "CreateAccount",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , sourceAccount : String , type_ : String , typeI : Int , createdAt : Date.Date , transactionHash : String , startingBalance : String , funder : String , account : String , links : Stellar.Resources.Operations.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.CreateAccount.CreateAccount"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllLedgers",
    "comment": " All Ledgers Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Ledger.Ledger"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllLedgers.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllLedgers.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.AllAssets",
    "comment": " All Assets Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure optional fields\n@docs setAssetCode, setAssetIssuer\n\n# Configure pagination\n@docs setCursor, setLimit, setSorting\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Page.Page Stellar.Resources.Asset.Asset"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.AllAssets.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setAssetCode",
        "comment": " Set the Asset Code.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      },
      {
        "name": "setAssetIssuer",
        "comment": " Set the Asset Issuer.\n",
        "type": "Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      },
      {
        "name": "setCursor",
        "comment": " Set the pagination cursor for the Request.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      },
      {
        "name": "setSorting",
        "comment": " Set the pagination sorting for the Request.\n",
        "type": "Stellar.Sorting.Sorting -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.AllAssets.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.LedgerDetails",
    "comment": " Ledger Details Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Ledger.Ledger"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.LedgerDetails.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.LedgerDetails.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.LedgerDetails.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.TrustlineCreated",
    "comment": " Trustline created Effect\n\n# Type alias and decoder\n@docs TrustlineCreated, decoder\n\n",
    "aliases": [
      {
        "name": "TrustlineCreated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , assetType : Stellar.AssetType.AssetType , limit : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.TrustlineCreated.TrustlineCreated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.TrustlineRemoved",
    "comment": " Trustline removed Effect\n\n# Type alias and decoder\n@docs TrustlineRemoved, decoder\n\n",
    "aliases": [
      {
        "name": "TrustlineRemoved",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , assetType : Stellar.AssetType.AssetType , limit : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.TrustlineRemoved.TrustlineRemoved"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.TrustlineAuthorised",
    "comment": " Trustline authorised Effect\n\n# Type alias and decoder\n@docs TrustlineAuthorised, decoder\n\n",
    "aliases": [
      {
        "name": "TrustlineAuthorised",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , trustor : String , assetType : Stellar.AssetType.AssetType , assetCode : Maybe.Maybe String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.TrustlineAuthorised.TrustlineAuthorised"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.TrustlineUpdated",
    "comment": " Trustline updated Effect\n\n# Type alias and decoder\n@docs TrustlineUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "TrustlineUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , assetType : Stellar.AssetType.AssetType , limit : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.TrustlineUpdated.TrustlineUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.SignerUpdated",
    "comment": " Signer updated Effect\n\n# Type alias and decoder\n@docs SignerUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "SignerUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , weight : Int , publicKey : Stellar.PublicKey.PublicKey , key : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.SignerUpdated.SignerUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.TrustlineDeauthorised",
    "comment": " Trustline deauthorised Effect\n\n# Type alias and decoder\n@docs TrustlineDeauthorised, decoder\n\n",
    "aliases": [
      {
        "name": "TrustlineDeauthorised",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , trustor : String , assetType : Stellar.AssetType.AssetType , assetCode : Maybe.Maybe String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.TrustlineDeauthorised.TrustlineDeauthorised"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.Trade",
    "comment": " Trade Effect\n\n# Type alias and decoder\n@docs Trade, decoder\n\n",
    "aliases": [
      {
        "name": "Trade",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , seller : String , offerId : Int , soldAmount : String , soldAssetType : Stellar.AssetType.AssetType , soldAssetCode : Maybe.Maybe String , soldAssetIssuer : Maybe.Maybe String , boughtAmount : String , boughtAssetType : Stellar.AssetType.AssetType , boughtAssetCode : Maybe.Maybe String , boughtAssetIssuer : Maybe.Maybe String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.Trade.Trade"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.SignerCreated",
    "comment": " Signer created Effect\n\n# Type alias and decoder\n@docs SignerCreated, decoder\n\n",
    "aliases": [
      {
        "name": "SignerCreated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , weight : Int , publicKey : Stellar.PublicKey.PublicKey , key : String , createdAt : Date.Date , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.SignerCreated.SignerCreated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.SignerRemoved",
    "comment": " Signer removed Effect\n\n# Type alias and decoder\n@docs SignerRemoved, decoder\n\n",
    "aliases": [
      {
        "name": "SignerRemoved",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , weight : Int , publicKey : Stellar.PublicKey.PublicKey , key : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.SignerRemoved.SignerRemoved"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.OfferUpdated",
    "comment": " Offer updated Effect\n\n# Type alias and decoder\n@docs OfferUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "OfferUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.OfferUpdated.OfferUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.OfferCreated",
    "comment": " Offer created Effect\n\n# Type alias and decoder\n@docs OfferCreated, decoder\n\n",
    "aliases": [
      {
        "name": "OfferCreated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.OfferCreated.OfferCreated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountInflationDestinationUpdated",
    "comment": " Account Inflation Destination updated Effect\n\n# Type alias and decoder\n@docs AccountInflationDestinationUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "AccountInflationDestinationUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountInflationDestinationUpdated.AccountInflationDestinationUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.OfferRemoved",
    "comment": " Offer removed Effect\n\n# Type alias and decoder\n@docs OfferRemoved, decoder\n\n",
    "aliases": [
      {
        "name": "OfferRemoved",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.OfferRemoved.OfferRemoved"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.DataUpdated",
    "comment": " Data updates Effect\n\n# Type alias and decoder\n@docs DataUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "DataUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.DataUpdated.DataUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountRemoved",
    "comment": " Account removed Effect\n\n# Type alias and decoder\n@docs AccountRemoved, decoder\n\n",
    "aliases": [
      {
        "name": "AccountRemoved",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountRemoved.AccountRemoved"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountFlagsUpdated",
    "comment": " Account Flags updated Effect\n\n# Type alias and decoder\n@docs AccountFlagsUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "AccountFlagsUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , authRequired : Bool , authRevokable : Bool , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountFlagsUpdated.AccountFlagsUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountThresholdsUpdated",
    "comment": " Account Thresholds updated Effect\n\n# Type alias and decoder\n@docs AccountThresholdsUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "AccountThresholdsUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , lowThreshold : Int , medThreshold : Int , highThreshold : Int , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountThresholdsUpdated.AccountThresholdsUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountDebited",
    "comment": " Account Debited Effect\n\n# Type alias and decoder\n@docs AccountDebited, decoder\n\n",
    "aliases": [
      {
        "name": "AccountDebited",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , assetType : Stellar.AssetType.AssetType , amount : String , createdAt : Date.Date , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountDebited.AccountDebited"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountHomeDomainUpdated",
    "comment": " Account Home Domain updated Effect\n\n# Type alias and decoder\n@docs AccountHomeDomainUpdated, decoder\n\n",
    "aliases": [
      {
        "name": "AccountHomeDomainUpdated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , homeDomain : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountHomeDomainUpdated.AccountHomeDomainUpdated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.DataRemoved",
    "comment": " Data removed Effect\n\n# Type alias and decoder\n@docs DataRemoved, decoder\n\n",
    "aliases": [
      {
        "name": "DataRemoved",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.DataRemoved.DataRemoved"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.DataCreated",
    "comment": " Data created Effect\n\n# Type alias and decoder\n@docs DataCreated, decoder\n\n",
    "aliases": [
      {
        "name": "DataCreated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.DataCreated.DataCreated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountCreated",
    "comment": " Account Created Effect\n\n# Type alias and decoder\n@docs AccountCreated, decoder\n\n",
    "aliases": [
      {
        "name": "AccountCreated",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , startingBalance : String , createdAt : Date.Date , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountCreated.AccountCreated"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.AccountCredited",
    "comment": " Account Credited Effect\n\n# Type alias and decoder\n@docs AccountCredited, decoder\n\n",
    "aliases": [
      {
        "name": "AccountCredited",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , type_ : String , typeI : Int , account : String , assetType : Stellar.AssetType.AssetType , amount : String , createdAt : Date.Date , links : Stellar.Resources.Effects.Links.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.AccountCredited.AccountCredited"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.PaymentPath",
    "comment": " Payment Resource\n\n# Type alias and decoder\n@docs PaymentPath, decoder\n\n",
    "aliases": [
      {
        "name": "PaymentPath",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ path : List Stellar.Resources.Asset.Asset , sourceAmount : String , destinationAmount : String , destinationAssetType : String , destinationAssetCode : Maybe.Maybe String , destinationAssetIssuer : Maybe.Maybe String , sourceAssetType : String , sourceAssetCode : Maybe.Maybe String , sourceAssetIssuer : Maybe.Maybe String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.PaymentPath.PaymentPath"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Trade",
    "comment": " Trade Resource\n\n# Type alias and decoder\n@docs Trade, decoder, Links\n\n",
    "aliases": [
      {
        "name": "Links",
        "comment": " Links\n",
        "args": [],
        "type": "{ base : Stellar.Link.Link , counter : Stellar.Link.Link , operation : Stellar.Link.Link }"
      },
      {
        "name": "Trade",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , ledgerCloseTime : String , baseAccount : String , baseAmount : String , baseAssetType : String , baseAssetCode : String , baseAssetIssuer : String , counterAccount : String , counterAmount : String , counterAssetType : String , counterAssetCode : String , counterAssetIssuer : String , price : Stellar.RationalNumber.RationalNumber , baseIsSeller : Bool , links : Stellar.Resources.Trade.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Trade.Trade"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Offer",
    "comment": " Offer Resource\n\n# Type alias and decoder\n@docs Offer, decoder\n\n",
    "aliases": [
      {
        "name": "Offer",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : Int , pagingToken : String , seller : String , selling : Stellar.Resources.Asset.Asset , buying : Stellar.Resources.Asset.Asset , amount : String , priceR : String , price : String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Offer.Offer"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.OrderbookDetails",
    "comment": " Orderbook Details Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Configure optional fields\n@docs setSellingAssetCode, setSellingAssetIssuer, setBuyingAssetCode, setBuyingAssetIssuer\n\n# Configure pagination\n@docs setLimit\n\n# Send the Request & catch Response\n@docs send, Response\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Orderbook.Orderbook"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.AssetType.AssetType -> Stellar.AssetType.AssetType -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.OrderbookDetails.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "setBuyingAssetCode",
        "comment": " Set the buying Asset Code.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      },
      {
        "name": "setBuyingAssetIssuer",
        "comment": " Set the buying Asset Issuer.\n",
        "type": "Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      },
      {
        "name": "setLimit",
        "comment": " Set the pagination limit for the Request.\n",
        "type": "Int -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      },
      {
        "name": "setSellingAssetCode",
        "comment": " Set the selling Asset Code.\n",
        "type": "String -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      },
      {
        "name": "setSellingAssetIssuer",
        "comment": " Set the selling Asset Issuer.\n",
        "type": "Stellar.PublicKey.PublicKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response -> HttpBuilder.RequestBuilder Stellar.Endpoints.OrderbookDetails.Response"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Account",
    "comment": " Record to represent a Balance\n\n# Type alias and Decoder\n@docs Account, decoder\n\n",
    "aliases": [
      {
        "name": "Account",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : Stellar.PublicKey.PublicKey , accountId : Stellar.PublicKey.PublicKey , sequence : String , subentryCount : Int , balances : List Stellar.Balance.Balance , thresholds : Stellar.Thresholds.Thresholds , signers : List Stellar.Signer.Signer , data : Stellar.Resources.Data.Data , flags : Stellar.Flags.Flags , pagingToken : String , links : Stellar.Resources.Account.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Account.Account"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Transaction",
    "comment": " Transaction Resource\n\n# Type alias and decoder\n@docs Transaction, decoder, Links\n\n",
    "aliases": [
      {
        "name": "Links",
        "comment": " Links\n",
        "args": [],
        "type": "{ self : Stellar.Link.Link , account : Stellar.Link.Link , ledger : Stellar.Link.Link , operations : Stellar.Link.Link , effects : Stellar.Link.Link , precedes : Stellar.Link.Link , succeeds : Stellar.Link.Link }"
      },
      {
        "name": "Transaction",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , hash : String , ledger : Int , createdAt : Date.Date , sourceAccount : String , sourceAccountSequence : String , feePaid : Int , operationCount : Int , envelopeXdr : String , resultXdr : String , resultMetaXdr : String , feeMetaXdr : String , memoType : String , signatures : List String , links : Stellar.Resources.Transaction.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Transaction.Transaction"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Operations.Links",
    "comment": " Links common to all Operations\n\n# Type alias and decoder\n@docs Links, decoder\n\n",
    "aliases": [
      {
        "name": "Links",
        "comment": " Links\n",
        "args": [],
        "type": "{ self : Stellar.Link.Link , succeeds : Stellar.Link.Link , precedes : Stellar.Link.Link , effects : Stellar.Link.Link , transaction : Stellar.Link.Link }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Operations.Links.Links"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Page",
    "comment": " Page Resource\n\n# Type alias and decoder\n@docs Page, decoder, Embed, Links\n\n",
    "aliases": [
      {
        "name": "Embed",
        "comment": " Type alias\n",
        "args": [
          "a"
        ],
        "type": "{ records : List a }"
      },
      {
        "name": "Links",
        "comment": " Links\n",
        "args": [],
        "type": "{ self : Stellar.Link.Link , prev : Stellar.Link.Link , next : Stellar.Link.Link }"
      },
      {
        "name": "Page",
        "comment": " Type alias\n\nA Page can contain any embedded Resources and links for navigation.\n\n",
        "args": [
          "a"
        ],
        "type": "{ embedded_ : { records : List a } , links_ : Stellar.Resources.Page.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder record -> Json.Decode.Decoder (Stellar.Resources.Page.Page record)"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Ledger",
    "comment": " Ledger Resource\n\n# Type alias and decoder\n@docs Ledger, decoder\n\n",
    "aliases": [
      {
        "name": "Ledger",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ id : String , pagingToken : String , hash : String , prevHash : Maybe.Maybe String , sequence : Int , transactionCount : Int , operationCount : Int , closedAt : Date.Date , totalCoins : String , feePool : String , baseFee : Maybe.Maybe Int , baseReverse : Maybe.Maybe String , maxTxSetSize : Int , protocolVersion : Int , headerXdr : String , baseFeeInStroops : Int , baseReserveInStroops : Int , links_ : Stellar.Resources.Ledger.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Ledger.Ledger"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Effects.Links",
    "comment": " Links common to all Effects\n\n# Type alias and decoder\n@docs Links, decoder\n\n",
    "aliases": [
      {
        "name": "Links",
        "comment": " Links\n",
        "args": [],
        "type": "{ operation : Stellar.Link.Link , succeeds : Stellar.Link.Link , precedes : Stellar.Link.Link }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Effects.Links.Links"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Asset",
    "comment": " Record to represent an Asset Resource\n\n# Type alias and Decoder\n@docs Asset, decoder\n\n",
    "aliases": [
      {
        "name": "Asset",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ assetType : Stellar.Resources.Asset.AssetType , assetCode : String , assetIssuer : String , amount : String , numAccounts : Int , flags : Stellar.Flags.Flags , pagingToken : String , links_ : Stellar.Resources.Asset.Links }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Asset.Asset"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.TradeAggregation",
    "comment": " Trade Aggregation Resource\n\n# Type alias and decoder\n@docs TradeAggregation, decoder\n\n",
    "aliases": [
      {
        "name": "TradeAggregation",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ timestamp : String , tradeCount : Int , baseVolume : String , counterVolume : String , avg : String , high : String , highR : Stellar.RationalNumber.RationalNumber , low : String , lowR : Stellar.RationalNumber.RationalNumber , open : String , openR : Stellar.RationalNumber.RationalNumber , close : String , closeR : Stellar.RationalNumber.RationalNumber }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.TradeAggregation.TradeAggregation"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Orderbook",
    "comment": " Orderbook Resource\n\n# Type alias and decoder\n@docs Orderbook, decoder\n\n# Sub Type aliases\n@docs Listing, Offer\n\n",
    "aliases": [
      {
        "name": "Listing",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ price : String , priceR : Stellar.RationalNumber.RationalNumber , amount : String }"
      },
      {
        "name": "Offer",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ assetType : Stellar.AssetType.AssetType }"
      },
      {
        "name": "Orderbook",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ bids : List Stellar.Resources.Orderbook.Listing , asks : List Stellar.Resources.Orderbook.Listing , base : Stellar.Resources.Orderbook.Offer , counter : Stellar.Resources.Orderbook.Offer }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Orderbook.Orderbook"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoints.DataForAccount",
    "comment": " Data for Account Endpoint\n\n# Build the Request with required fields\n@docs requestBuilder\n\n# Send the Request & catch Response\n@docs send, Response\n\n# Available Data\n@docs DataKey, dataKeyList\n\n",
    "aliases": [],
    "types": [
      {
        "name": "DataKey",
        "comment": " Union type of available Data to request\n",
        "args": [],
        "cases": [
          [
            "UserId",
            []
          ]
        ]
      },
      {
        "name": "Response",
        "comment": " The Response coming back from the server.\n",
        "args": [],
        "cases": [
          [
            "Error",
            [
              "Stellar.Error.Error"
            ]
          ],
          [
            "Success",
            [
              "Stellar.Resources.Data.Data"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "dataKeyList",
        "comment": " List of available Data to request\n",
        "type": "List Stellar.Endpoints.DataForAccount.DataKey"
      },
      {
        "name": "requestBuilder",
        "comment": " Request Builder. Takes the mandatory fields as arguments, the optional fields can be piped using setters.\n",
        "type": "Stellar.Endpoint.Endpoint -> Stellar.PublicKey.PublicKey -> Stellar.Endpoints.DataForAccount.DataKey -> HttpBuilder.RequestBuilder Stellar.Endpoints.DataForAccount.Response"
      },
      {
        "name": "send",
        "comment": " Send the request once configured.\n",
        "type": "(Result.Result Http.Error Stellar.Endpoints.DataForAccount.Response -> msg) -> HttpBuilder.RequestBuilder Stellar.Endpoints.DataForAccount.Response -> Platform.Cmd.Cmd msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Balance",
    "comment": " Record to represent a Balance\n\n# Type alias and Decoder\n@docs Balance, decoder\n\n",
    "aliases": [
      {
        "name": "Balance",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ balance : String, assetType : Stellar.AssetType.AssetType }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Balance.Balance"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Signer",
    "comment": " Record to represent a Signer\n\n# Type alias and Decoder\n@docs Signer, decoder\n\n",
    "aliases": [
      {
        "name": "Signer",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ publicKey : Stellar.PublicKey.PublicKey , weight : Int , key : Stellar.PublicKey.PublicKey , type_ : String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Signer.Signer"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Link",
    "comment": " Record to represent a Link\n\n# Type alias and Decoder\n@docs Link, decoder\n\n",
    "aliases": [
      {
        "name": "Link",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ href : String, templated : Bool }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Link.Link"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.RationalNumber",
    "comment": " Record to represent Rational Numbers\n\n# Type alias and Decoder\n@docs RationalNumber, decoder\n\n",
    "aliases": [
      {
        "name": "RationalNumber",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ n : Int, d : Int }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.RationalNumber.RationalNumber"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Resources.Data",
    "comment": " Data Resource\n\n# Type alias and decoder\n@docs Data, decoder\n\n",
    "aliases": [
      {
        "name": "Data",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ value : Maybe.Maybe String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Resources.Data.Data"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Thresholds",
    "comment": " Record to represent Thresholds\n\n# Type alias and Decoder\n@docs Thresholds, decoder\n\n",
    "aliases": [
      {
        "name": "Thresholds",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ low : Int, med : Int, high : Int }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Thresholds.Thresholds"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.AssetType",
    "comment": " Union Type of Asset Types\n\n# Union Type and Decoder\n@docs AssetType, decoder\n\n# Helpers\n@docs asList, toString\n\n",
    "aliases": [],
    "types": [
      {
        "name": "AssetType",
        "comment": " Union Type of Asset Types\n",
        "args": [],
        "cases": [
          [
            "Native",
            []
          ],
          [
            "CreditAlphanum4",
            []
          ],
          [
            "CreditAlphanum12",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "asList",
        "comment": " List representation of the Union Type\n",
        "type": "List Stellar.AssetType.AssetType"
      },
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.AssetType.AssetType"
      },
      {
        "name": "toString",
        "comment": " String representation of the Union Type\n",
        "type": "Stellar.AssetType.AssetType -> String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Sorting",
    "comment": " Union Type that represents the available sorting methods in Stellar\n\n# Union Type and Decoder\n@docs Sorting, toString\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Sorting",
        "comment": " Union Type\n",
        "args": [],
        "cases": [
          [
            "Asc",
            []
          ],
          [
            "Desc",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "toString",
        "comment": " Helper function to print the sorting\n",
        "type": "Stellar.Sorting.Sorting -> String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Error",
    "comment": " Record representing possible Errors in Stellar\n\n# Type alias and Decoder\n@docs Error, decoder\n\n# Standard Errors\n@docs StandardError, standardErrorDecoder\n\n# Utility\n@docs flattenError\n\n",
    "aliases": [
      {
        "name": "Error",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ type_ : String , title : String , status : Int , detail : String , instance : Maybe.Maybe String }"
      }
    ],
    "types": [
      {
        "name": "StandardError",
        "comment": " Union Type representing the Standard Errors in Stellar\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Error.Error"
      },
      {
        "name": "flattenError",
        "comment": " Utility to flatten Errors. In Elm, Http requests return a `Result Http.Error response`.\nWhen Stellar throws an Error, Elm interprets it as `Err (Http.BadStatus response)`.\nWe then need to at the response body and check for status code to return the correct Err.\n",
        "type": "Http.Error -> (Stellar.Error.Error -> response) -> Result.Result Http.Error response"
      },
      {
        "name": "standardErrorDecoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Error.StandardError"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Flags",
    "comment": " Record to represent Flags\n\n# Type alias and Decoder\n@docs Flags, decoder\n\n",
    "aliases": [
      {
        "name": "Flags",
        "comment": " Type alias\n",
        "args": [],
        "type": "{ authRequired : Bool, authRevocable : Bool }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Flags.Flags"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.PublicKey",
    "comment": " String type alias for PublicKey, helping with the readability of type signatures\n\n# String Formatting Helpers\n@docs PublicKey, decoder\n\n",
    "aliases": [
      {
        "name": "PublicKey",
        "comment": " Type alias\n",
        "args": [],
        "type": "String"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.PublicKey.PublicKey"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Stellar.Endpoint",
    "comment": " String type alias for Endpoint, helping with the readability of type signatures\n\n# String Formatting Helpers\n@docs Endpoint, decoder\n\n",
    "aliases": [
      {
        "name": "Endpoint",
        "comment": " Type alias\n",
        "args": [],
        "type": "String"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "decoder",
        "comment": " Decoder\n",
        "type": "Json.Decode.Decoder Stellar.Endpoint.Endpoint"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]