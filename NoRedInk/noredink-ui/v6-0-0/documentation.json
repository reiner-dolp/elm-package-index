[
  {
    "name": "Nri.Ui.Page.V2",
    "comment": " A styled NRI issue page!\n\n@docs DefaultPage, broken, blocked, notFound, noPermission\n\n",
    "aliases": [
      {
        "name": "DefaultPage",
        "comment": " The default page information is for the button\nwhich will direct the user back to the main page of\nthe SPA. Specify it's name and the message which will\nnavigate to the page.\n",
        "args": [
          "msg"
        ],
        "type": "{ link : msg, name : String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "blocked",
        "comment": " For HTTP errors and other broken states, where link goes to \"/\".\n",
        "type": "String -> Html.Styled.Html msg"
      },
      {
        "name": "broken",
        "comment": " For HTTP errors and other broken states.\n",
        "type": "Nri.Ui.Page.V2.DefaultPage msg -> Html.Styled.Html msg"
      },
      {
        "name": "noPermission",
        "comment": " For pages the user does not have access to.\n",
        "type": "Nri.Ui.Page.V2.DefaultPage msg -> Html.Styled.Html msg"
      },
      {
        "name": "notFound",
        "comment": " For the not found page.\n",
        "type": "Nri.Ui.Page.V2.DefaultPage msg -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.TextInput.V3",
    "comment": "\n\n@docs Model\n@docs view, writing\n\n\n## Input types\n\n@docs number\n@docs text\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " ",
        "args": [
          "value",
          "msg"
        ],
        "type": "{ label : String , isInError : Bool , onInput : value -> msg , placeholder : String , value : value , autofocus : Bool , showLabel : Bool , type_ : Nri.Ui.TextInput.V3.InputType value }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "number",
        "comment": " An input that allows number entry\n",
        "type": "Nri.Ui.TextInput.V3.InputType (Maybe.Maybe Int)"
      },
      {
        "name": "text",
        "comment": " An input that allows text entry\n",
        "type": "Nri.Ui.TextInput.V3.InputType String"
      },
      {
        "name": "view",
        "comment": " ",
        "type": "Nri.Ui.TextInput.V3.Model value msg -> Html.Styled.Html msg"
      },
      {
        "name": "writing",
        "comment": " ",
        "type": "Nri.Ui.TextInput.V3.Model value msg -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.TextArea.V3",
    "comment": "\n\n\n## Upgrading to V3\n\n  - Do nothing! (This just uses new elm-css styles)\n\n\n## The Nri styleguide-specified textarea with overlapping label\n\n@docs view, writing, contentCreation, Height, HeightBehavior, Model, generateId\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " ",
        "args": [
          "msg"
        ],
        "type": "{ value : String , autofocus : Bool , onInput : String -> msg , isInError : Bool , height : Nri.Ui.TextArea.V3.HeightBehavior , placeholder : String , label : String , showLabel : Bool }"
      }
    ],
    "types": [
      {
        "name": "Height",
        "comment": " For specifying the actual height.\n",
        "args": [],
        "cases": [
          [
            "DefaultHeight",
            []
          ],
          [
            "SingleLine",
            []
          ]
        ]
      },
      {
        "name": "HeightBehavior",
        "comment": " Control whether to auto-expand the height.\n",
        "args": [],
        "cases": [
          [
            "Fixed",
            []
          ],
          [
            "AutoResize",
            [
              "Nri.Ui.TextArea.V3.Height"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "contentCreation",
        "comment": " Used for Content Creation\n",
        "type": "Nri.Ui.TextArea.V3.Model msg -> Html.Styled.Html msg"
      },
      {
        "name": "generateId",
        "comment": " ",
        "type": "String -> String"
      },
      {
        "name": "view",
        "comment": " ",
        "type": "Nri.Ui.TextArea.V3.Model msg -> Html.Styled.Html msg"
      },
      {
        "name": "writing",
        "comment": " Used for Writing Cycles\n",
        "type": "Nri.Ui.TextArea.V3.Model msg -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.SegmentedControl.V6",
    "comment": "\n\n@docs Config, Icon, Option, Width, view\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " ",
        "args": [
          "a",
          "msg"
        ],
        "type": "{ onClick : a -> msg , options : List (Nri.Ui.SegmentedControl.V6.Option a) , selected : a , width : Nri.Ui.SegmentedControl.V6.Width }"
      },
      {
        "name": "Icon",
        "comment": " ",
        "args": [],
        "type": "{ alt : String, icon : Nri.Ui.Icon.V3.IconType }"
      },
      {
        "name": "Option",
        "comment": " ",
        "args": [
          "a"
        ],
        "type": "{ value : a , icon : Maybe.Maybe Nri.Ui.SegmentedControl.V6.Icon , label : String , id : String }"
      }
    ],
    "types": [
      {
        "name": "Width",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "FitContent",
            []
          ],
          [
            "FillContainer",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "view",
        "comment": " ",
        "type": "Nri.Ui.SegmentedControl.V6.Config a msg -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Button.V3",
    "comment": "\n\n\n# Changes from V2:\n\n  - Uses Html.Styled\n  - Removes buttonDeprecated\n  - Removes Tiny size\n  - Removes one-off Active hack\n  - Removes \"submit\" button - we just used that for forms that were partially in Elm\n\n\n# About:\n\nCommon NoRedInk buttons. For accessibility purposes, buttons that perform an\naction on the current page should be HTML `<button>` elements and are created here\nwith `*Button` functions. Buttons that take the user to a new page should be\nHTML `<a>` elements and are created here with `*Link` functions. Both versions\nshould be able to use the same CSS class in all cases.\n\nThere will generally be a `*Button` and `*Link` version of each button style.\n(These will be created as they are needed.)\n\n\n## Common configs\n\n@docs ButtonSize, ButtonStyle, ButtonState, ButtonContent\n\n\n## `<button>` Buttons\n\n@docs ButtonConfig, button, customButton, delete, copyToClipboard, ToggleButtonConfig, toggleButton\n\n\n## `<a>` Buttons\n\n@docs LinkConfig, link, linkSpa, linkExternal, linkWithMethod, linkWithTracking, linkExternalWithTracking\n\n",
    "aliases": [
      {
        "name": "ButtonConfig",
        "comment": " The part of a button that remains constant through different button states\n",
        "args": [
          "msg"
        ],
        "type": "{ onClick : msg , size : Nri.Ui.Button.V3.ButtonSize , style : Nri.Ui.Button.V3.ButtonStyle , width : Maybe.Maybe Int }"
      },
      {
        "name": "ButtonContent",
        "comment": " ButtonContent, often changes based on ButtonState. For example, a button in the \"Success\"\nstate may have a different label than a button in the \"Error\" state\n",
        "args": [],
        "type": "{ label : String , state : Nri.Ui.Button.V3.ButtonState , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType }"
      },
      {
        "name": "LinkConfig",
        "comment": " Links are clickable things with a url.\n\nNOTE: Links do not support two-line labels.\n\n",
        "args": [],
        "type": "{ label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , url : String , size : Nri.Ui.Button.V3.ButtonSize , style : Nri.Ui.Button.V3.ButtonStyle , width : Maybe.Maybe Int }"
      },
      {
        "name": "ToggleButtonConfig",
        "comment": " Buttons can be toggled into a pressed state and back again.\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String, onSelect : msg, onDeselect : msg, pressed : Bool }"
      }
    ],
    "types": [
      {
        "name": "ButtonSize",
        "comment": " Sizes for buttons and links that have button classes\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ],
          [
            "Large",
            []
          ]
        ]
      },
      {
        "name": "ButtonState",
        "comment": " Describes the state of a button. Has consequences for appearance and disabled attribute.\n\n  - Enabled: An enabled button. Takes the appearance of ButtonStyle\n  - Unfulfilled: A button which appears with the InactiveColors palette but is not disabled.\n  - Disabled: A button which appears with the InactiveColors palette and is disabled.\n  - Error: A button which appears with the ErrorColors palette and is disabled.\n  - Loading: A button which appears with the LoadingColors palette and is disabled\n  - Success: A button which appears with the SuccessColors palette and is disabled\n\n",
        "args": [],
        "cases": [
          [
            "Enabled",
            []
          ],
          [
            "Unfulfilled",
            []
          ],
          [
            "Disabled",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Loading",
            []
          ],
          [
            "Success",
            []
          ]
        ]
      },
      {
        "name": "ButtonStyle",
        "comment": " Styleguide-approved styles for your buttons!\n\nNote on borderless buttons:\nA borderless button that performs an action on the current page\nThis button is intended to look like a link.\nOnly use a borderless button when the clickable text in question follows the same layout/margin/padding as a bordered button\n\n",
        "args": [],
        "cases": [
          [
            "Primary",
            []
          ],
          [
            "Secondary",
            []
          ],
          [
            "Borderless",
            []
          ],
          [
            "Danger",
            []
          ],
          [
            "Premium",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "button",
        "comment": " A delightful button which can trigger an effect when clicked!\n\nThis button will trigger the passed-in message if the button state is:\n\n  - Enabled\n  - Unfulfilled\n\nThis button will be Disabled if the button state is:\n\n  - Disabled\n  - Error\n  - Loading\n  - Success\n\n",
        "type": "Nri.Ui.Button.V3.ButtonConfig msg -> Nri.Ui.Button.V3.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "copyToClipboard",
        "comment": " See ui/src/Page/Teach/Courses/Assignments/index.coffee\nYou will need to hook this up to clipboard.js\n",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Button.V3.CopyToClipboardConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "customButton",
        "comment": " Exactly the same as button but you can pass in a list of attributes\n",
        "type": "List (Accessibility.Styled.Attribute msg) -> Nri.Ui.Button.V3.ButtonConfig msg -> Nri.Ui.Button.V3.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "delete",
        "comment": " A delete button (blue X)\n",
        "type": "{ r | x : String } -> Nri.Ui.Button.V3.DeleteButtonConfig msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "link",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url\n",
        "type": "Nri.Ui.Button.V3.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url and have it open to an external site\n",
        "type": "Nri.Ui.Button.V3.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternalWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url and have it open to an external site\n\nThis should only take in messages that result in tracking events. For buttons that trigger other effects on the page, please use Nri.Ui.Button.V2.button instead\n\n",
        "type": "msg -> Nri.Ui.Button.V3.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the Events.onClick behavior to avoid reloading the page.\n\nSee <https://github.com/elm-lang/html/issues/110> for details on this implementation.\n\n",
        "type": "(route -> String) -> (route -> msg) -> { label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , size : Nri.Ui.Button.V3.ButtonSize , style : Nri.Ui.Button.V3.ButtonStyle , width : Maybe.Maybe Int , route : route } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithMethod",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url, and it's an HTTP request (Rails includes JS to make this use the given HTTP method)\n",
        "type": "String -> Nri.Ui.Button.V3.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url.\nThis should only take in messages that result in a Msg that triggers Analytics.trackAndRedirect. For buttons that trigger other effects on the page, please use Nri.Button.button instead\n",
        "type": "msg -> Nri.Ui.Button.V3.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "toggleButton",
        "comment": " ",
        "type": "Nri.Ui.Button.V3.ToggleButtonConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Button.V4",
    "comment": "\n\n\n# Changes from V3:\n\n  - Adds `ButtonWidth`.\n  - Button now grows vertically to fit content.\n    To limit the height use attributes on its container or consider truncating content before rendering.\n\n\n# About:\n\nCommon NoRedInk buttons. For accessibility purposes, buttons that perform an\naction on the current page should be HTML `<button>` elements and are created here\nwith `*Button` functions. Buttons that take the user to a new page should be\nHTML `<a>` elements and are created here with `*Link` functions. Both versions\nshould be able to use the same CSS class in all cases.\n\nThere will generally be a `*Button` and `*Link` version of each button style.\n(These will be created as they are needed.)\n\nIn general a button should never truncate or obscure its contents. This could\nmake it difficult or impossible for a student or teacher to use the site, so in\ngeneral choose buttons that grow to fit their contents. It is better to risk\nweird layout than to block users. Might this be a golden rule? Of course there\nmay be exceptions, for example if button content is supplied by an end-user.\n\n\n## Common configs\n\n@docs ButtonSize, ButtonWidth, ButtonStyle, ButtonState, ButtonContent\n\n\n## `<button>` Buttons\n\n@docs ButtonConfig, button, customButton, delete, copyToClipboard, ToggleButtonConfig, toggleButton\n\n\n## `<a>` Buttons\n\n@docs LinkConfig, link, linkSpa, linkExternal, linkWithMethod, linkWithTracking, linkExternalWithTracking\n\n",
    "aliases": [
      {
        "name": "ButtonConfig",
        "comment": " The part of a button that remains constant through different button states\n",
        "args": [
          "msg"
        ],
        "type": "{ onClick : msg , size : Nri.Ui.Button.V4.ButtonSize , style : Nri.Ui.Button.V4.ButtonStyle , width : Nri.Ui.Button.V4.ButtonWidth }"
      },
      {
        "name": "ButtonContent",
        "comment": " ButtonContent, often changes based on ButtonState. For example, a button in the \"Success\"\nstate may have a different label than a button in the \"Error\" state\n",
        "args": [],
        "type": "{ label : String , state : Nri.Ui.Button.V4.ButtonState , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType }"
      },
      {
        "name": "LinkConfig",
        "comment": " Links are clickable things with a url.\n\nNOTE: Links do not support two-line labels.\n\n",
        "args": [],
        "type": "{ label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , url : String , size : Nri.Ui.Button.V4.ButtonSize , style : Nri.Ui.Button.V4.ButtonStyle , width : Nri.Ui.Button.V4.ButtonWidth }"
      },
      {
        "name": "ToggleButtonConfig",
        "comment": " Buttons can be toggled into a pressed state and back again.\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String, onSelect : msg, onDeselect : msg, pressed : Bool }"
      }
    ],
    "types": [
      {
        "name": "ButtonSize",
        "comment": " Sizes for buttons and links that have button classes\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ],
          [
            "Large",
            []
          ]
        ]
      },
      {
        "name": "ButtonState",
        "comment": " Describes the state of a button. Has consequences for appearance and disabled attribute.\n\n  - Enabled: An enabled button. Takes the appearance of ButtonStyle\n  - Unfulfilled: A button which appears with the InactiveColors palette but is not disabled.\n  - Disabled: A button which appears with the InactiveColors palette and is disabled.\n  - Error: A button which appears with the ErrorColors palette and is disabled.\n  - Loading: A button which appears with the LoadingColors palette and is disabled\n  - Success: A button which appears with the SuccessColors palette and is disabled\n\n",
        "args": [],
        "cases": [
          [
            "Enabled",
            []
          ],
          [
            "Unfulfilled",
            []
          ],
          [
            "Disabled",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Loading",
            []
          ],
          [
            "Success",
            []
          ]
        ]
      },
      {
        "name": "ButtonStyle",
        "comment": " Styleguide-approved styles for your buttons!\n\nNote on borderless buttons:\nA borderless button that performs an action on the current page\nThis button is intended to look like a link.\nOnly use a borderless button when the clickable text in question follows the same layout/margin/padding as a bordered button\n\n",
        "args": [],
        "cases": [
          [
            "Primary",
            []
          ],
          [
            "Secondary",
            []
          ],
          [
            "Borderless",
            []
          ],
          [
            "Danger",
            []
          ],
          [
            "Premium",
            []
          ]
        ]
      },
      {
        "name": "ButtonWidth",
        "comment": " Width sizing behavior for buttons.\n\n`WidthExact Int` defines a size in `px` for the button's total width, and\n`WidthUnbounded` leaves the maxiumum width unbounded (there is a minimum width).\n\n",
        "args": [],
        "cases": [
          [
            "WidthExact",
            [
              "Int"
            ]
          ],
          [
            "WidthUnbounded",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "button",
        "comment": " A delightful button which can trigger an effect when clicked!\n\nThis button will trigger the passed-in message if the button state is:\n\n  - Enabled\n  - Unfulfilled\n\nThis button will be Disabled if the button state is:\n\n  - Disabled\n  - Error\n  - Loading\n  - Success\n\n",
        "type": "Nri.Ui.Button.V4.ButtonConfig msg -> Nri.Ui.Button.V4.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "copyToClipboard",
        "comment": " See ui/src/Page/Teach/Courses/Assignments/index.coffee\nYou will need to hook this up to clipboard.js\n",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Button.V4.CopyToClipboardConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "customButton",
        "comment": " Exactly the same as button but you can pass in a list of attributes\n",
        "type": "List (Accessibility.Styled.Attribute msg) -> Nri.Ui.Button.V4.ButtonConfig msg -> Nri.Ui.Button.V4.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "delete",
        "comment": " A delete button (blue X)\n",
        "type": "{ r | x : String } -> Nri.Ui.Button.V4.DeleteButtonConfig msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "link",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url\n",
        "type": "Nri.Ui.Button.V4.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url and have it open to an external site\n",
        "type": "Nri.Ui.Button.V4.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternalWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url and have it open to an external site\n\nThis should only take in messages that result in tracking events. For buttons that trigger other effects on the page, please use Nri.Ui.Button.V2.button instead\n\n",
        "type": "msg -> Nri.Ui.Button.V4.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the Events.onClick behavior to avoid reloading the page.\n\nSee <https://github.com/elm-lang/html/issues/110> for details on this implementation.\n\n",
        "type": "(route -> String) -> (route -> msg) -> { label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , size : Nri.Ui.Button.V4.ButtonSize , style : Nri.Ui.Button.V4.ButtonStyle , width : Nri.Ui.Button.V4.ButtonWidth , route : route } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithMethod",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url, and it's an HTTP request (Rails includes JS to make this use the given HTTP method)\n",
        "type": "String -> Nri.Ui.Button.V4.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url.\nThis should only take in messages that result in a Msg that triggers Analytics.trackAndRedirect. For buttons that trigger other effects on the page, please use Nri.Button.button instead\n",
        "type": "msg -> Nri.Ui.Button.V4.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "toggleButton",
        "comment": " ",
        "type": "Nri.Ui.Button.V4.ToggleButtonConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Button.V5",
    "comment": "\n\n\n# Changes from V4:\n\n  - Allows links with words exceeding button-width to wrap\n  - Standardizes vertical text alignment between buttons and links\n  - Limit CSS transitions to a subset of properties to avoid unintended \"zoom\"\n    effects.\n\n\n# About:\n\nCommon NoRedInk buttons. For accessibility purposes, buttons that perform an\naction on the current page should be HTML `<button>` elements and are created here\nwith `*Button` functions. Buttons that take the user to a new page should be\nHTML `<a>` elements and are created here with `*Link` functions. Both versions\nshould be able to use the same CSS class in all cases.\n\nThere will generally be a `*Button` and `*Link` version of each button style.\n(These will be created as they are needed.)\n\nIn general a button should never truncate or obscure its contents. This could\nmake it difficult or impossible for a student or teacher to use the site, so in\ngeneral choose buttons that grow to fit their contents. It is better to risk\nweird layout than to block users. Might this be a golden rule? Of course there\nmay be exceptions, for example if button content is supplied by an end-user.\n\n\n## Common configs\n\n@docs ButtonSize, ButtonWidth, ButtonStyle, ButtonState, ButtonContent\n\n\n## `<button>` Buttons\n\n@docs ButtonConfig, button, customButton, delete, copyToClipboard, ToggleButtonConfig, toggleButton\n\n\n## `<a>` Buttons\n\n@docs LinkConfig, link, linkSpa, linkExternal, linkWithMethod, linkWithTracking, linkExternalWithTracking\n\n",
    "aliases": [
      {
        "name": "ButtonConfig",
        "comment": " The part of a button that remains constant through different button states\n",
        "args": [
          "msg"
        ],
        "type": "{ onClick : msg , size : Nri.Ui.Button.V5.ButtonSize , style : Nri.Ui.Button.V5.ButtonStyle , width : Nri.Ui.Button.V5.ButtonWidth }"
      },
      {
        "name": "ButtonContent",
        "comment": " ButtonContent, often changes based on ButtonState. For example, a button in the \"Success\"\nstate may have a different label than a button in the \"Error\" state\n",
        "args": [],
        "type": "{ label : String , state : Nri.Ui.Button.V5.ButtonState , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType }"
      },
      {
        "name": "LinkConfig",
        "comment": " Links are clickable things with a url.\n\nNOTE: Links do not support two-line labels.\n\n",
        "args": [],
        "type": "{ label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , url : String , size : Nri.Ui.Button.V5.ButtonSize , style : Nri.Ui.Button.V5.ButtonStyle , width : Nri.Ui.Button.V5.ButtonWidth }"
      },
      {
        "name": "ToggleButtonConfig",
        "comment": " Buttons can be toggled into a pressed state and back again.\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String, onSelect : msg, onDeselect : msg, pressed : Bool }"
      }
    ],
    "types": [
      {
        "name": "ButtonSize",
        "comment": " Sizes for buttons and links that have button classes\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ],
          [
            "Large",
            []
          ]
        ]
      },
      {
        "name": "ButtonState",
        "comment": " Describes the state of a button. Has consequences for appearance and disabled attribute.\n\n  - Enabled: An enabled button. Takes the appearance of ButtonStyle\n  - Unfulfilled: A button which appears with the InactiveColors palette but is not disabled.\n  - Disabled: A button which appears with the InactiveColors palette and is disabled.\n  - Error: A button which appears with the ErrorColors palette and is disabled.\n  - Loading: A button which appears with the LoadingColors palette and is disabled\n  - Success: A button which appears with the SuccessColors palette and is disabled\n\n",
        "args": [],
        "cases": [
          [
            "Enabled",
            []
          ],
          [
            "Unfulfilled",
            []
          ],
          [
            "Disabled",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Loading",
            []
          ],
          [
            "Success",
            []
          ]
        ]
      },
      {
        "name": "ButtonStyle",
        "comment": " Styleguide-approved styles for your buttons!\n\nNote on borderless buttons:\nA borderless button that performs an action on the current page\nThis button is intended to look like a link.\nOnly use a borderless button when the clickable text in question follows the same layout/margin/padding as a bordered button\n\n",
        "args": [],
        "cases": [
          [
            "Primary",
            []
          ],
          [
            "Secondary",
            []
          ],
          [
            "Borderless",
            []
          ],
          [
            "Danger",
            []
          ],
          [
            "Premium",
            []
          ]
        ]
      },
      {
        "name": "ButtonWidth",
        "comment": " Width sizing behavior for buttons.\n\n`WidthExact Int` defines a size in `px` for the button's total width, and\n`WidthUnbounded` leaves the maxiumum width unbounded (there is a minimum width).\n\n",
        "args": [],
        "cases": [
          [
            "WidthExact",
            [
              "Int"
            ]
          ],
          [
            "WidthUnbounded",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "button",
        "comment": " A delightful button which can trigger an effect when clicked!\n\nThis button will trigger the passed-in message if the button state is:\n\n  - Enabled\n  - Unfulfilled\n\nThis button will be Disabled if the button state is:\n\n  - Disabled\n  - Error\n  - Loading\n  - Success\n\n",
        "type": "Nri.Ui.Button.V5.ButtonConfig msg -> Nri.Ui.Button.V5.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "copyToClipboard",
        "comment": " See ui/src/Page/Teach/Courses/Assignments/index.coffee\nYou will need to hook this up to clipboard.js\n",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Button.V5.CopyToClipboardConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "customButton",
        "comment": " Exactly the same as button but you can pass in a list of attributes\n",
        "type": "List (Accessibility.Styled.Attribute msg) -> Nri.Ui.Button.V5.ButtonConfig msg -> Nri.Ui.Button.V5.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "delete",
        "comment": " A delete button (blue X)\n",
        "type": "{ r | x : String } -> Nri.Ui.Button.V5.DeleteButtonConfig msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "link",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url\n",
        "type": "Nri.Ui.Button.V5.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url and have it open to an external site\n",
        "type": "Nri.Ui.Button.V5.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternalWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url and have it open to an external site\n\nThis should only take in messages that result in tracking events. For buttons that trigger other effects on the page, please use Nri.Ui.Button.V2.button instead\n\n",
        "type": "msg -> Nri.Ui.Button.V5.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the Events.onClick behavior to avoid reloading the page.\n\nSee <https://github.com/elm-lang/html/issues/110> for details on this implementation.\n\n",
        "type": "(route -> String) -> (route -> msg) -> { label : String , icon : Maybe.Maybe Nri.Ui.Icon.V3.IconType , size : Nri.Ui.Button.V5.ButtonSize , style : Nri.Ui.Button.V5.ButtonStyle , width : Nri.Ui.Button.V5.ButtonWidth , route : route } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithMethod",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url, and it's an HTTP request (Rails includes JS to make this use the given HTTP method)\n",
        "type": "String -> Nri.Ui.Button.V5.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url.\nThis should only take in messages that result in a Msg that triggers Analytics.trackAndRedirect. For buttons that trigger other effects on the page, please use Nri.Button.button instead\n",
        "type": "msg -> Nri.Ui.Button.V5.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "toggleButton",
        "comment": " ",
        "type": "Nri.Ui.Button.V5.ToggleButtonConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Modal.V3",
    "comment": " Changes from V2:\n\n  - Add assets for close button\n\n@docs Model\n@docs info\n@docs warning\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": "\n\n  - `onDismiss`: If `Nothing`, the modal will not be dismissable\n  - `visibleTitle`: If `False`, the title will still be used for screen readers\n  - `content`: This will be placed in a `width:100%` div in the main area of the modal\n  - `footerContent`: The optional items here will be stacked below the main content area and center-aligned.\n    Commonly you will either give a list of Nri.Ui.Buttons,\n    or an empty list.\n\n",
        "args": [
          "msg"
        ],
        "type": "{ title : String , visibleTitle : Bool , content : Accessibility.Styled.Html msg , footerContent : List (Accessibility.Styled.Html msg) , onDismiss : Maybe.Maybe msg , width : Maybe.Maybe Int }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "info",
        "comment": " ",
        "type": "Nri.Ui.Modal.V3.Assets r -> Nri.Ui.Modal.V3.Model msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "warning",
        "comment": " ",
        "type": "Nri.Ui.Modal.V3.Assets r -> Nri.Ui.Modal.V3.Model msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Alert.V2",
    "comment": " UI components that highlight information to the user.\n\n@docs error\n@docs success\n@docs tip\n@docs warning\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "error",
        "comment": " ",
        "type": "{ r | exclamation : String } -> String -> Accessibility.Styled.Html msg"
      },
      {
        "name": "success",
        "comment": " ",
        "type": "{ r | checkmark : String } -> String -> Accessibility.Styled.Html msg"
      },
      {
        "name": "tip",
        "comment": " ",
        "type": "{ r | bulb : String } -> String -> Accessibility.Styled.Html msg"
      },
      {
        "name": "warning",
        "comment": " ",
        "type": "{ r | exclamation : String } -> String -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Button.V6",
    "comment": "\n\n\n# Changes from V5:\n\n  - Update version of Nri.Ui.Icon to V4\n\n\n# About:\n\nCommon NoRedInk buttons. For accessibility purposes, buttons that perform an\naction on the current page should be HTML `<button>` elements and are created here\nwith `*Button` functions. Buttons that take the user to a new page should be\nHTML `<a>` elements and are created here with `*Link` functions. Both versions\nshould be able to use the same CSS class in all cases.\n\nThere will generally be a `*Button` and `*Link` version of each button style.\n(These will be created as they are needed.)\n\nIn general a button should never truncate or obscure its contents. This could\nmake it difficult or impossible for a student or teacher to use the site, so in\ngeneral choose buttons that grow to fit their contents. It is better to risk\nweird layout than to block users. Might this be a golden rule? Of course there\nmay be exceptions, for example if button content is supplied by an end-user.\n\n\n## Common configs\n\n@docs ButtonSize, ButtonWidth, ButtonStyle, ButtonState, ButtonContent\n\n\n## `<button>` Buttons\n\n@docs ButtonConfig, button, customButton, delete, copyToClipboard, ToggleButtonConfig, toggleButton\n\n\n## `<a>` Buttons\n\n@docs LinkConfig, link, linkSpa, linkExternal, linkWithMethod, linkWithTracking, linkExternalWithTracking\n\n",
    "aliases": [
      {
        "name": "ButtonConfig",
        "comment": " The part of a button that remains constant through different button states\n",
        "args": [
          "msg"
        ],
        "type": "{ onClick : msg , size : Nri.Ui.Button.V6.ButtonSize , style : Nri.Ui.Button.V6.ButtonStyle , width : Nri.Ui.Button.V6.ButtonWidth }"
      },
      {
        "name": "ButtonContent",
        "comment": " ButtonContent, often changes based on ButtonState. For example, a button in the \"Success\"\nstate may have a different label than a button in the \"Error\" state\n",
        "args": [],
        "type": "{ label : String , state : Nri.Ui.Button.V6.ButtonState , icon : Maybe.Maybe Nri.Ui.Icon.V4.IconType }"
      },
      {
        "name": "LinkConfig",
        "comment": " Links are clickable things with a url.\n\nNOTE: Links do not support two-line labels.\n\n",
        "args": [],
        "type": "{ label : String , icon : Maybe.Maybe Nri.Ui.Icon.V4.IconType , url : String , size : Nri.Ui.Button.V6.ButtonSize , style : Nri.Ui.Button.V6.ButtonStyle , width : Nri.Ui.Button.V6.ButtonWidth }"
      },
      {
        "name": "ToggleButtonConfig",
        "comment": " Buttons can be toggled into a pressed state and back again.\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String, onSelect : msg, onDeselect : msg, pressed : Bool }"
      }
    ],
    "types": [
      {
        "name": "ButtonSize",
        "comment": " Sizes for buttons and links that have button classes\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ],
          [
            "Large",
            []
          ]
        ]
      },
      {
        "name": "ButtonState",
        "comment": " Describes the state of a button. Has consequences for appearance and disabled attribute.\n\n  - Enabled: An enabled button. Takes the appearance of ButtonStyle\n  - Unfulfilled: A button which appears with the InactiveColors palette but is not disabled.\n  - Disabled: A button which appears with the InactiveColors palette and is disabled.\n  - Error: A button which appears with the ErrorColors palette and is disabled.\n  - Loading: A button which appears with the LoadingColors palette and is disabled\n  - Success: A button which appears with the SuccessColors palette and is disabled\n\n",
        "args": [],
        "cases": [
          [
            "Enabled",
            []
          ],
          [
            "Unfulfilled",
            []
          ],
          [
            "Disabled",
            []
          ],
          [
            "Error",
            []
          ],
          [
            "Loading",
            []
          ],
          [
            "Success",
            []
          ]
        ]
      },
      {
        "name": "ButtonStyle",
        "comment": " Styleguide-approved styles for your buttons!\n\nNote on borderless buttons:\nA borderless button that performs an action on the current page\nThis button is intended to look like a link.\nOnly use a borderless button when the clickable text in question follows the same layout/margin/padding as a bordered button\n\n",
        "args": [],
        "cases": [
          [
            "Primary",
            []
          ],
          [
            "Secondary",
            []
          ],
          [
            "Borderless",
            []
          ],
          [
            "Danger",
            []
          ],
          [
            "Premium",
            []
          ]
        ]
      },
      {
        "name": "ButtonWidth",
        "comment": " Width sizing behavior for buttons.\n\n`WidthExact Int` defines a size in `px` for the button's total width, and\n`WidthUnbounded` leaves the maxiumum width unbounded (there is a minimum width).\n\n",
        "args": [],
        "cases": [
          [
            "WidthExact",
            [
              "Int"
            ]
          ],
          [
            "WidthUnbounded",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "button",
        "comment": " A delightful button which can trigger an effect when clicked!\n\nThis button will trigger the passed-in message if the button state is:\n\n  - Enabled\n  - Unfulfilled\n\nThis button will be Disabled if the button state is:\n\n  - Disabled\n  - Error\n  - Loading\n  - Success\n\n",
        "type": "Nri.Ui.Button.V6.ButtonConfig msg -> Nri.Ui.Button.V6.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "copyToClipboard",
        "comment": " See ui/src/Page/Teach/Courses/Assignments/index.coffee\nYou will need to hook this up to clipboard.js\n",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Button.V6.CopyToClipboardConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "customButton",
        "comment": " Exactly the same as button but you can pass in a list of attributes\n",
        "type": "List (Accessibility.Styled.Attribute msg) -> Nri.Ui.Button.V6.ButtonConfig msg -> Nri.Ui.Button.V6.ButtonContent -> Accessibility.Styled.Html msg"
      },
      {
        "name": "delete",
        "comment": " A delete button (blue X)\n",
        "type": "{ r | x : String } -> Nri.Ui.Button.V6.DeleteButtonConfig msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "link",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url\n",
        "type": "Nri.Ui.Button.V6.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url and have it open to an external site\n",
        "type": "Nri.Ui.Button.V6.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternalWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url and have it open to an external site\n\nThis should only take in messages that result in tracking events. For buttons that trigger other effects on the page, please use Nri.Ui.Button.V2.button instead\n\n",
        "type": "msg -> Nri.Ui.Button.V6.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the Events.onClick behavior to avoid reloading the page.\n\nSee <https://github.com/elm-lang/html/issues/110> for details on this implementation.\n\n",
        "type": "(route -> String) -> (route -> msg) -> { label : String , icon : Maybe.Maybe Nri.Ui.Icon.V4.IconType , size : Nri.Ui.Button.V6.ButtonSize , style : Nri.Ui.Button.V6.ButtonStyle , width : Nri.Ui.Button.V6.ButtonWidth , route : route } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithMethod",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to\nsome url, and it's an HTTP request (Rails includes JS to make this use the given HTTP method)\n",
        "type": "String -> Nri.Ui.Button.V6.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkWithTracking",
        "comment": " Wrap some text so it looks like a button, but actually is wrapped in an anchor to some url.\nThis should only take in messages that result in a Msg that triggers Analytics.trackAndRedirect. For buttons that trigger other effects on the page, please use Nri.Button.button instead\n",
        "type": "msg -> Nri.Ui.Button.V6.LinkConfig -> Accessibility.Styled.Html msg"
      },
      {
        "name": "toggleButton",
        "comment": " ",
        "type": "Nri.Ui.Button.V6.ToggleButtonConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Outline.V2",
    "comment": " A module for rendering outline layouts.\n\n@docs segment\n@docs node\n@docs NodeLayout\n@docs NodeConfig\n@docs config\n@docs html\n\n",
    "aliases": [
      {
        "name": "NodeConfig",
        "comment": " Defines how a node should look.\n",
        "args": [
          "msg"
        ],
        "type": "{ label : Html.Styled.Html msg , contents : Html.Styled.Html msg , children : List (Nri.Ui.Outline.V2.NodeLayout msg) , selected : Bool , ghosted : Bool , attrs : List (Html.Styled.Attribute msg) }"
      }
    ],
    "types": [
      {
        "name": "NodeLayout",
        "comment": " A wrapper for a node rendered into Html. This type exists to prevent us\nfrom accidentally wrapping a node in a container element before passing it as a\nchild to another node or segment. Such wrapping would break some of our\nstyling, which assumes nodes of the same level are sibblings in the Html tree.\n",
        "args": [
          "msg"
        ],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "config",
        "comment": " A default node configuration, allowing you to only set the properties you care about.\n\n    node { config | label = \"Claim\" }\n\n",
        "type": "Nri.Ui.Outline.V2.NodeConfig msg"
      },
      {
        "name": "html",
        "comment": " Wrap any html in a NodeLayout so you can use it as sibling content to nodes.\n\n    segment\n        [ node { config | label = \"This is a node\" }\n        , html (Html.text \"This is some random Html content!\")\n        ]\n\n",
        "type": "Html.Styled.Html msg -> Nri.Ui.Outline.V2.NodeLayout msg"
      },
      {
        "name": "node",
        "comment": " Draw a node of an outline structure. You can draw other nodes inside it and\nconnecting lines will appear.\n\n    node { config | label = \"Claim\" }\n\n",
        "type": "Nri.Ui.Outline.V2.NodeConfig msg -> Nri.Ui.Outline.V2.NodeLayout msg"
      },
      {
        "name": "segment",
        "comment": " A container to draw nodes in.\n\n    segment\n        [ node { config | label = \"First Node\" }\n        , node { config | label = \"Second Node\" }\n        ]\n\n",
        "type": "List (Nri.Ui.Outline.V2.NodeLayout msg) -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.PremiumCheckbox.V2",
    "comment": "\n\n@docs PremiumConfig, premium, Pennant\n\n",
    "aliases": [
      {
        "name": "PremiumConfig",
        "comment": "\n\n  - `onChange`: A message for when the user toggles the checkbox\n  - `onLockedClick`: A message for when the user clicks a checkbox they don't have PremiumLevel for.\n    If you get this message, you should show an `Nri.Ui.Premium.Model.view`\n\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String , id : String , selected : Nri.Ui.Checkbox.V3.IsSelected , disabled : Bool , isLocked : Bool , pennant : Maybe.Maybe Nri.Ui.PremiumCheckbox.V2.Pennant , onChange : Bool -> msg , onLockedClick : msg , noOpMsg : msg }"
      }
    ],
    "types": [
      {
        "name": "Pennant",
        "comment": " Premium is the yellow \"P\" pennant\nPremiumWithWriting is the yellow \"P+\" pennant\n",
        "args": [],
        "cases": [
          [
            "Premium",
            []
          ],
          [
            "PremiumWithWriting",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "premium",
        "comment": " A checkbox that should be used for premium content\n",
        "type": "Nri.Ui.PremiumCheckbox.V2.Assets a -> Nri.Ui.PremiumCheckbox.V2.PremiumConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.PremiumCheckbox.V1",
    "comment": "\n\n@docs PremiumConfig, premium\n\n",
    "aliases": [
      {
        "name": "PremiumConfig",
        "comment": "\n\n  - `onChange`: A message for when the user toggles the checkbox\n  - `onLockedClick`: A message for when the user clicks a checkbox they don't have PremiumLevel for.\n    If you get this message, you should show an `Nri.Ui.Premium.Model.view`\n\n",
        "args": [
          "msg"
        ],
        "type": "{ label : String , id : String , selected : Nri.Ui.Checkbox.V3.IsSelected , disabled : Bool , teacherPremiumLevel : Nri.Ui.Data.PremiumLevel.PremiumLevel , contentPremiumLevel : Nri.Ui.Data.PremiumLevel.PremiumLevel , showFlagWhenLocked : Bool , onChange : Bool -> msg , onLockedClick : msg , noOpMsg : msg }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "premium",
        "comment": " A checkbox that should be used for premium content\n\nThis checkbox is locked when the premium level of the content is greater than the premium level of the teacher\n\n",
        "type": "Nri.Ui.PremiumCheckbox.V1.Assets a -> Nri.Ui.PremiumCheckbox.V1.PremiumConfig msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Table.V3",
    "comment": " Upgrading from V1:\n\n  - All the `width` fields in column configurations now take an elm-css length\n    value rather than an Integer. Change `width = 100` to `width = px 100` to get\n    the same widths as before.\n  - Tables now by default take the full width of the container they are placed in.\n    If this is not what you want, wrap the table in an element with a fixed width.\n  - The table module now makes use of `Html.Styled` and no longer exposes a\n    separate `styles` value.\n    Check out the [elm-css](http://package.elm-lang.org/packages/rtfeldman/elm-css/14.0.0/Html-Styled)\n    documentation on Html.Styled to see how to work with it.\n  - The default cell padding has been removed and content is not vertically\n    centered in its cell. If you need to overwrite this, wrap your cells in\n    elements providing custom styling to the cell.\n\n@docs Column, custom, string\n\n@docs view, viewWithoutHeader\n\n@docs viewLoading, viewLoadingWithoutHeader\n\n@docs keyframes, keyframeStyles\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Column",
        "comment": " Closed representation of how to render the header and cells of a column\nin the table\n",
        "args": [
          "data",
          "msg"
        ],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "custom",
        "comment": " A column that renders however you want it to\n",
        "type": "{ header : Html.Styled.Html msg , view : data -> Html.Styled.Html msg , width : Css.LengthOrAuto compatible } -> Nri.Ui.Table.V3.Column data msg"
      },
      {
        "name": "keyframeStyles",
        "comment": " ",
        "type": "Html.Styled.Html msg"
      },
      {
        "name": "keyframes",
        "comment": " ",
        "type": "List DEPRECATED.Nri.Ui.Styles.V2.Keyframe"
      },
      {
        "name": "string",
        "comment": " A column that renders some aspect of a value as text\n",
        "type": "{ header : String , value : data -> String , width : Css.LengthOrAuto compatible } -> Nri.Ui.Table.V3.Column data msg"
      },
      {
        "name": "view",
        "comment": " Displays a table of data based on the provided column definitions\n",
        "type": "List (Nri.Ui.Table.V3.Column data msg) -> List data -> Html.Styled.Html msg"
      },
      {
        "name": "viewLoading",
        "comment": " Display a table with the given columns but instead of data, show blocked\nout text with an interesting animation. This view lets the user know that\ndata is on its way and what it will look like when it arrives.\n",
        "type": "List (Nri.Ui.Table.V3.Column data msg) -> Html.Styled.Html msg"
      },
      {
        "name": "viewLoadingWithoutHeader",
        "comment": " Display the loading table without a header row\n",
        "type": "List (Nri.Ui.Table.V3.Column data msg) -> Html.Styled.Html msg"
      },
      {
        "name": "viewWithoutHeader",
        "comment": " Displays a table of data without a header row\n",
        "type": "List (Nri.Ui.Table.V3.Column data msg) -> List data -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Text.V2",
    "comment": "\n\n\n## Semantic text types:\n\n@docs caption, heading, mediumBody, smallBody, smallBodyGray, subHeading, smallHeading, tagline\n\n\n## User-generated text styles:\n\n@docs ugMediumBody, ugSmallBody\n\n\n## Modifying strings to display nicely:\n\n@docs noWidow\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "caption",
        "comment": " This is a little note or caption.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "heading",
        "comment": " This is a Page Heading.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "mediumBody",
        "comment": " This is some medium body copy.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "noWidow",
        "comment": " Eliminate widows (single words on their own line caused by\nwrapping) by inserting a non-breaking space if there are at least two\nwords.\n",
        "type": "String -> String"
      },
      {
        "name": "smallBody",
        "comment": " This is some small body copy.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "smallBodyGray",
        "comment": " This is some small body copy but it's gray.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "smallHeading",
        "comment": " This is a small Page Heading.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "subHeading",
        "comment": " This is a subhead.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "tagline",
        "comment": " This is a tagline for a page heading.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "ugMediumBody",
        "comment": " User-generated text.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "ugSmallBody",
        "comment": " User-generated text.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Select.V5",
    "comment": " Build a select input.\n\n@docs Config, view\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configure a Select\n",
        "args": [
          "a"
        ],
        "type": "{ choices : List { label : String, value : a } , current : a , id : Maybe.Maybe String , valueToString : a -> String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "view",
        "comment": " A select dropdown\n",
        "type": "Nri.Ui.Select.V5.Config a -> Html.Styled.Html a"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Text.Writing.V1",
    "comment": " Text types for writing:\n\n@docs footnote\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "footnote",
        "comment": " This is a little note or footnote.\n",
        "type": "List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Dropdown.V2",
    "comment": "\n\n@docs ViewOptionEntry\n@docs view\n@docs viewWithoutLabel\n\n",
    "aliases": [
      {
        "name": "ViewOptionEntry",
        "comment": " This dropdown has atypical select tag behavior.\n\nThis dropdown, when closed, will display some default text, no matter\nwhat is actually selected.\n\nWhen the dropdown is opened, the first option will display that default text,\nbe selected, and disabled. The option the user has actually chosen's displayText\nwon't show up at all.\n\n",
        "args": [
          "a"
        ],
        "type": "{ isSelected : Bool, val : a, displayText : String }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "view",
        "comment": " ",
        "type": "String -> List (Nri.Ui.Dropdown.V2.ViewOptionEntry a) -> (a -> msg) -> Html.Styled.Html msg"
      },
      {
        "name": "viewWithoutLabel",
        "comment": " ",
        "type": "String -> List (Nri.Ui.Dropdown.V2.ViewOptionEntry a) -> (a -> msg) -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.InputStyles.V2",
    "comment": " InputStyles used by the TextInput and TextArea widgets.\n\n@docs label, Theme, input\n\n\n## Shared hardcoded values\n\n@docs inputPaddingVertical, inputLineHeight, textAreaHeight, writingLineHeight, writingPadding, writingPaddingTop, writingMinHeight\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Theme",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "ContentCreation",
            []
          ],
          [
            "Standard",
            []
          ],
          [
            "Writing",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "input",
        "comment": " In order to use these styles in an input module, you will need to add the class \"override-sass-styles\". This is because sass styles in the monolith have higher precendence than the class styles here.\n",
        "type": "Nri.Ui.InputStyles.V2.Theme -> Bool -> Css.Style"
      },
      {
        "name": "inputLineHeight",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "inputPaddingVertical",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "label",
        "comment": " ",
        "type": "Nri.Ui.InputStyles.V2.Theme -> Bool -> Css.Style"
      },
      {
        "name": "textAreaHeight",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "writingLineHeight",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "writingMinHeight",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "writingPadding",
        "comment": " ",
        "type": "Css.Px"
      },
      {
        "name": "writingPaddingTop",
        "comment": " ",
        "type": "Css.Px"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Icon.V3",
    "comment": "\n\n@docs icon, decorativeIcon, link, linkExternal, linkSpa, button\n@docs IconType, IconSize, IconLinkSpaModel\n@docs activity\n@docs add\n@docs arrowDown\n@docs arrowLeft\n@docs arrowRight\n@docs assignmentStartButtonPrimary\n@docs assignmentStartButtonSecondary\n@docs assignmentTypeDiagnostic\n@docs assignmentTypePeerReview\n@docs assignmentTypeSelfReview\n@docs assignmentTypePractice\n@docs assignmentTypeQuickWrite\n@docs assignmentTypeQuiz\n@docs assignmentTypeWritingCycle\n@docs attention\n@docs bang\n@docs bulb\n@docs calendar\n@docs caret\n@docs checkMark\n@docs checkMarkSquiggily\n@docs checkMarkSvg\n@docs class\n@docs clever\n@docs clock\n@docs close\n@docs compassSvg\n@docs copy\n@docs custom\n@docs darkBlueCheckMark\n@docs document\n@docs download\n@docs edit\n@docs editWriting\n@docs equalitySign\n@docs exclamation\n@docs facebook\n@docs flag\n@docs flipper\n@docs footsteps\n@docs gardening\n@docs gear\n@docs greenCheckMark\n@docs guidedWrite\n@docs hat\n@docs help\n@docs helpSvg\n@docs highFive\n@docs key\n@docs keychain\n@docs late\n@docs leaderboard\n@docs lightBulb\n@docs lock\n@docs lockDeprecated\n@docs logo\n@docs masteryBadge\n@docs newspaper\n@docs notStarred\n@docs okay\n@docs openClose\n@docs peerReview\n@docs pen\n@docs performance\n@docs personBlue\n@docs preview\n@docs quickWrite\n@docs seeMore\n@docs share\n@docs skip\n@docs sort\n@docs sortArrow\n@docs speedometer\n@docs starred\n@docs submitting, rating, revising\n@docs thumbsUp\n@docs twitter\n@docs unarchive\n@docs writingAssignment\n@docs x\n@docs xSvg\n\n",
    "aliases": [
      {
        "name": "IconLinkSpaModel",
        "comment": " ",
        "args": [
          "route"
        ],
        "type": "{ alt : String , icon : Nri.Ui.Icon.V3.IconType , disabled : Bool , size : Nri.Ui.Icon.V3.IconSize , route : route }"
      }
    ],
    "types": [
      {
        "name": "IconSize",
        "comment": " Used for determining sizes on Icon.buttons and Icon.links\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ]
        ]
      },
      {
        "name": "IconType",
        "comment": " An icon that can be rendered using the functions provided by this module.\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "activity",
        "comment": " ",
        "type": "{ r | activity : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "add",
        "comment": " ",
        "type": "{ r | icons_plusBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "arrowDown",
        "comment": " ",
        "type": "{ r | arrowDown : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "arrowLeft",
        "comment": " ",
        "type": "{ r | leftArrowBlue_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "arrowRight",
        "comment": " ",
        "type": "{ r | icons_arrowRightBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentStartButtonPrimary",
        "comment": " ",
        "type": "{ r | assignmentStartButtonPrimary_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentStartButtonSecondary",
        "comment": " ",
        "type": "{ r | assignmentStartButtonSecondary_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypeDiagnostic",
        "comment": " ",
        "type": "{ r | diagnostic : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypePeerReview",
        "comment": " ",
        "type": "{ r | icons_peerReviewWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypePractice",
        "comment": " ",
        "type": "{ r | practice : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypeQuickWrite",
        "comment": " ",
        "type": "{ r | icons_quickWriteWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypeQuiz",
        "comment": " ",
        "type": "{ r | quiz : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypeSelfReview",
        "comment": " ",
        "type": "{ r | icons_selfReviewWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "assignmentTypeWritingCycle",
        "comment": " ",
        "type": "{ r | writingcycle : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "attention",
        "comment": " ",
        "type": "{ r | attention_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "bang",
        "comment": " ",
        "type": "{ r | exclamationPoint_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "bulb",
        "comment": " ",
        "type": "{ r | bulb : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "button",
        "comment": " Create an accessible icon button with an onClick handler\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V3.IconButtonModel msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "calendar",
        "comment": " ",
        "type": "{ r | calendar : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "caret",
        "comment": " ",
        "type": "{ r | icons_arrowDownBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "checkMark",
        "comment": " ",
        "type": "{ r | iconCheck_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "checkMarkSquiggily",
        "comment": " ",
        "type": "{ r | squiggly_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "checkMarkSvg",
        "comment": " ",
        "type": "{ r | checkmark : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "class",
        "comment": " ",
        "type": "{ r | class : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "clever",
        "comment": " ",
        "type": "{ r | clever : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "clock",
        "comment": " ",
        "type": "{ r | clock : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "close",
        "comment": " ",
        "type": "{ r | icons_xBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "compassSvg",
        "comment": " ",
        "type": "{ r | compass : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "copy",
        "comment": " ",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "custom",
        "comment": " ",
        "type": "Nri.Ui.AssetPath.Asset -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "darkBlueCheckMark",
        "comment": " ",
        "type": "{ r | darkBlueCheckmark_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "decorativeIcon",
        "comment": " Use this icon for purely decorative content that would be distracting\nrather than helpful on a screenreader.\n",
        "type": "Nri.Ui.Icon.V3.IconType -> Accessibility.Styled.Html msg"
      },
      {
        "name": "document",
        "comment": " ",
        "type": "{ r | document : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "download",
        "comment": " ",
        "type": "{ r | download : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "edit",
        "comment": " ",
        "type": "{ r | edit : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "editWriting",
        "comment": " ",
        "type": "{ r | editWriting : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "equalitySign",
        "comment": " ",
        "type": "{ r | icons_equals_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "exclamation",
        "comment": " ",
        "type": "{ r | exclamation : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "facebook",
        "comment": " ",
        "type": "{ r | facebookBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "flag",
        "comment": " ",
        "type": "{ r | iconFlag_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "flipper",
        "comment": " ",
        "type": "{ r | flipper : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "footsteps",
        "comment": " ",
        "type": "{ r | footsteps : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "gardening",
        "comment": " ",
        "type": "{ r | startingOffBadge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "gear",
        "comment": " ",
        "type": "{ r | gear : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "greenCheckMark",
        "comment": " ",
        "type": "{ r | smallCheckmark_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "guidedWrite",
        "comment": " ",
        "type": "{ r | icons_guidedWrite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "hat",
        "comment": " ",
        "type": "{ r | hat : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "help",
        "comment": " ",
        "type": "{ r | icons_helpBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "helpSvg",
        "comment": " ",
        "type": "{ r | help : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "highFive",
        "comment": " ",
        "type": "{ r | level3Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "icon",
        "comment": " ",
        "type": "{ alt : String, icon : Nri.Ui.Icon.V3.IconType } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "key",
        "comment": " ",
        "type": "{ r | key : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "keychain",
        "comment": " ",
        "type": "{ r | keychain : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "late",
        "comment": " ",
        "type": "{ r | icons_clockRed_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "leaderboard",
        "comment": " ",
        "type": "{ r | leaderboard : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "lightBulb",
        "comment": " ",
        "type": "{ r | hint_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "link",
        "comment": " Create an icon that links to a part of NRI\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V3.IconLinkModel -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Create an icon that links to an external site\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V3.IconLinkModel -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the onClick behavior to avoid reloading the page.\n\n",
        "type": "(route -> String) -> (route -> msg) -> Nri.Ui.Icon.V3.IconLinkSpaModel route -> Accessibility.Styled.Html msg"
      },
      {
        "name": "lock",
        "comment": " ",
        "type": "{ r | lock : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "lockDeprecated",
        "comment": " ",
        "type": "{ r | premiumLock_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "logo",
        "comment": " ",
        "type": "{ r | logoRedBlack_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "masteryBadge",
        "comment": " ",
        "type": "{ r | masteryBadge : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "newspaper",
        "comment": " ",
        "type": "{ r | newspaper : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "notStarred",
        "comment": " ",
        "type": "{ r | commentNotStarred_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "okay",
        "comment": " ",
        "type": "{ r | level2Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "openClose",
        "comment": " ",
        "type": "{ r | openClose : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "peerReview",
        "comment": " ",
        "type": "{ r | icons_peerReview_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "pen",
        "comment": " ",
        "type": "{ r | pen : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "performance",
        "comment": " ",
        "type": "{ r | performance : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "personBlue",
        "comment": " ",
        "type": "{ r | personBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "preview",
        "comment": " ",
        "type": "{ r | preview : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "quickWrite",
        "comment": " ",
        "type": "{ r | icons_quickWrite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "rating",
        "comment": " ",
        "type": "{ r | rating : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "revising",
        "comment": " ",
        "type": "{ r | revising : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "seeMore",
        "comment": " ",
        "type": "{ r | seemore : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "share",
        "comment": " ",
        "type": "{ r | share : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "skip",
        "comment": " ",
        "type": "{ r | skip : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "sort",
        "comment": " ",
        "type": "{ r | sort : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "sortArrow",
        "comment": " ",
        "type": "{ r | sortArrow : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "speedometer",
        "comment": " ",
        "type": "{ r | speedometer : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "starred",
        "comment": " ",
        "type": "{ r | commentStarred_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "submitting",
        "comment": " ",
        "type": "{ r | submitting : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "thumbsUp",
        "comment": " ",
        "type": "{ r | level1Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "twitter",
        "comment": " ",
        "type": "{ r | twitterBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "unarchive",
        "comment": " ",
        "type": "{ r | unarchiveBlue2x_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "writingAssignment",
        "comment": " ",
        "type": "{ r | writingAssignment : String } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "x",
        "comment": " ",
        "type": "{ r | xWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V3.IconType"
      },
      {
        "name": "xSvg",
        "comment": " ",
        "type": "{ r | x : String } -> Nri.Ui.Icon.V3.IconType"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Divider.V2",
    "comment": " <https://staging.noredink.com/style_guide#ui/src/Nri/Divider.elm>\n\n@docs view\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "view",
        "comment": " ",
        "type": "String -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Tabs.V3",
    "comment": "\n\n@docs Alignment\n@docs Config\n@docs LinkConfig\n@docs Tab\n@docs TabLink\n@docs links\n@docs view\n@docs viewCustom\n\n\n## Defaults\n\n@docs viewTabDefault\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " ",
        "args": [
          "id",
          "msg"
        ],
        "type": "{ title : Maybe.Maybe String , onSelect : id -> msg , tabs : List.Zipper.Zipper (Nri.Ui.Tabs.V3.Tab id) , content : id -> Html.Styled.Html msg , alignment : Nri.Ui.Tabs.V3.Alignment }"
      },
      {
        "name": "LinkConfig",
        "comment": " Configure a set a tab links\n",
        "args": [
          "msg"
        ],
        "type": "{ title : Maybe.Maybe String , tabs : List.Zipper.Zipper Nri.Ui.Tabs.V3.TabLink , content : Html.Styled.Html msg , alignment : Nri.Ui.Tabs.V3.Alignment }"
      },
      {
        "name": "Tab",
        "comment": " ",
        "args": [
          "id"
        ],
        "type": "{ label : String, id : id }"
      },
      {
        "name": "TabLink",
        "comment": " Describe a tab that is meant to link to another page\n",
        "args": [],
        "type": "{ label : String, href : Maybe.Maybe String }"
      }
    ],
    "types": [
      {
        "name": "Alignment",
        "comment": " Determines whether tabs are centered or floating to the left or right.\n",
        "args": [],
        "cases": [
          [
            "Left",
            []
          ],
          [
            "Center",
            []
          ],
          [
            "Right",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "links",
        "comment": " View a set of tab links\n",
        "type": "Nri.Ui.Tabs.V3.LinkConfig msg -> Html.Styled.Html msg"
      },
      {
        "name": "view",
        "comment": " ",
        "type": "Nri.Ui.Tabs.V3.Config id msg -> Html.Styled.Html msg"
      },
      {
        "name": "viewCustom",
        "comment": " ",
        "type": "Nri.Ui.Tabs.V3.Config id msg -> (Nri.Ui.Tabs.V3.Tab id -> Html.Styled.Html msg) -> Html.Styled.Html msg"
      },
      {
        "name": "viewTabDefault",
        "comment": " ",
        "type": "Nri.Ui.Tabs.V3.Tab id -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Modal.V2",
    "comment": " Changes from V1:\n\n  - Use Styled Html\n\n@docs Model\n@docs info\n@docs warning\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": "\n\n  - `onDismiss`: If `Nothing`, the modal will not be dismissable\n  - `visibleTitle`: If `False`, the title will still be used for screen readers\n  - `content`: This will be placed in a `width:100%` div in the main area of the modal\n  - `footerContent`: The optional items here will be stacked below the main content area and center-aligned.\n    Commonly you will either give a list of Nri.Ui.Buttons,\n    or an empty list.\n\n",
        "args": [
          "msg"
        ],
        "type": "{ title : String , visibleTitle : Bool , content : Accessibility.Styled.Html msg , footerContent : List (Accessibility.Styled.Html msg) , onDismiss : Maybe.Maybe msg , width : Maybe.Maybe Int }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "info",
        "comment": " ",
        "type": "Nri.Ui.Modal.V2.Model msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "warning",
        "comment": " ",
        "type": "Nri.Ui.Modal.V2.Model msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Icon.V4",
    "comment": "\n\n@docs icon, decorativeIcon, link, linkExternal, linkSpa, button\n@docs IconType, IconSize, IconLinkSpaModel\n@docs activity\n@docs add\n@docs arrowDown\n@docs arrowLeft\n@docs arrowRight\n@docs assignmentStartButtonPrimary\n@docs assignmentStartButtonSecondary\n@docs assignmentTypeDiagnostic\n@docs assignmentTypeGuidedDraft\n@docs assignmentTypePeerReview\n@docs assignmentTypeSelfReview\n@docs assignmentTypePractice\n@docs assignmentTypeQuickWrite\n@docs assignmentTypeQuiz\n@docs assignmentTypeWritingCycle\n@docs attention\n@docs bang\n@docs bulb\n@docs calendar\n@docs caret\n@docs checkMark\n@docs checkMarkSquiggily\n@docs checkMarkSvg\n@docs class\n@docs clever\n@docs clock\n@docs close\n@docs copy\n@docs compassSvg\n@docs custom\n@docs darkBlueCheckMark\n@docs document\n@docs download\n@docs edit\n@docs editWriting\n@docs equalitySign\n@docs exclamation\n@docs facebook\n@docs flag\n@docs flipper\n@docs footsteps\n@docs gardening\n@docs gear\n@docs greenCheckMark\n@docs guidedWrite\n@docs hat\n@docs help\n@docs helpSvg\n@docs highFive\n@docs key\n@docs keychain\n@docs late\n@docs leaderboard\n@docs lightBulb\n@docs lock\n@docs lockDeprecated\n@docs logo\n@docs masteryBadge\n@docs newspaper\n@docs notStarred\n@docs okay\n@docs openClose\n@docs peerReview\n@docs pen\n@docs performance\n@docs personBlue\n@docs preview\n@docs quickWrite\n@docs seeMore\n@docs share\n@docs skip\n@docs sort\n@docs sortArrow\n@docs speedometer\n@docs starred\n@docs thumbsUp\n@docs twitter\n@docs unarchive\n@docs writingAssignment\n@docs x\n@docs xSvg\n@docs submitting, rating, revising\n\n",
    "aliases": [
      {
        "name": "IconLinkSpaModel",
        "comment": " ",
        "args": [
          "route"
        ],
        "type": "{ alt : String , icon : Nri.Ui.Icon.V4.IconType , disabled : Bool , size : Nri.Ui.Icon.V4.IconSize , route : route }"
      }
    ],
    "types": [
      {
        "name": "IconSize",
        "comment": " Used for determining sizes on Icon.buttons and Icon.links\n",
        "args": [],
        "cases": [
          [
            "Small",
            []
          ],
          [
            "Medium",
            []
          ]
        ]
      },
      {
        "name": "IconType",
        "comment": " An icon that can be rendered using the functions provided by this module.\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "activity",
        "comment": " ",
        "type": "{ r | activity : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "add",
        "comment": " ",
        "type": "{ r | icons_plusBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "arrowDown",
        "comment": " ",
        "type": "{ r | arrowDown : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "arrowLeft",
        "comment": " ",
        "type": "{ r | leftArrowBlue_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "arrowRight",
        "comment": " ",
        "type": "{ r | icons_arrowRightBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentStartButtonPrimary",
        "comment": " ",
        "type": "{ r | assignmentStartButtonPrimary_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentStartButtonSecondary",
        "comment": " ",
        "type": "{ r | assignmentStartButtonSecondary_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeDiagnostic",
        "comment": " ",
        "type": "{ r | diagnostic : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeGuidedDraft",
        "comment": " ",
        "type": "{ r | guidedDraft : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypePeerReview",
        "comment": " ",
        "type": "{ r | peerReview : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypePractice",
        "comment": " ",
        "type": "{ r | practice : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeQuickWrite",
        "comment": " ",
        "type": "{ r | quickWrite : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeQuiz",
        "comment": " ",
        "type": "{ r | quiz : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeSelfReview",
        "comment": " ",
        "type": "{ r | selfReview : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "assignmentTypeWritingCycle",
        "comment": " ",
        "type": "{ r | writingcycle : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "attention",
        "comment": " ",
        "type": "{ r | attention_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "bang",
        "comment": " ",
        "type": "{ r | exclamationPoint_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "bulb",
        "comment": " ",
        "type": "{ r | bulb : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "button",
        "comment": " Create an accessible icon button with an onClick handler\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V4.IconButtonModel msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "calendar",
        "comment": " ",
        "type": "{ r | calendar : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "caret",
        "comment": " ",
        "type": "{ r | icons_arrowDownBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "checkMark",
        "comment": " ",
        "type": "{ r | iconCheck_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "checkMarkSquiggily",
        "comment": " ",
        "type": "{ r | squiggly_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "checkMarkSvg",
        "comment": " ",
        "type": "{ r | checkmark : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "class",
        "comment": " ",
        "type": "{ r | class : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "clever",
        "comment": " ",
        "type": "{ r | clever : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "clock",
        "comment": " ",
        "type": "{ r | clock : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "close",
        "comment": " ",
        "type": "{ r | icons_xBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "compassSvg",
        "comment": " ",
        "type": "{ r | compass : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "copy",
        "comment": " ",
        "type": "{ r | teach_assignments_copyWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "custom",
        "comment": " ",
        "type": "Nri.Ui.AssetPath.Asset -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "darkBlueCheckMark",
        "comment": " ",
        "type": "{ r | darkBlueCheckmark_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "decorativeIcon",
        "comment": " Use this icon for purely decorative content that would be distracting\nrather than helpful on a screenreader.\n",
        "type": "Nri.Ui.Icon.V4.IconType -> Accessibility.Styled.Html msg"
      },
      {
        "name": "document",
        "comment": " ",
        "type": "{ r | document : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "download",
        "comment": " ",
        "type": "{ r | download : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "edit",
        "comment": " ",
        "type": "{ r | edit : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "editWriting",
        "comment": " ",
        "type": "{ r | editWriting : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "equalitySign",
        "comment": " ",
        "type": "{ r | icons_equals_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "exclamation",
        "comment": " ",
        "type": "{ r | exclamation : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "facebook",
        "comment": " ",
        "type": "{ r | facebookBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "flag",
        "comment": " ",
        "type": "{ r | iconFlag_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "flipper",
        "comment": " ",
        "type": "{ r | flipper : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "footsteps",
        "comment": " ",
        "type": "{ r | footsteps : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "gardening",
        "comment": " ",
        "type": "{ r | startingOffBadge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "gear",
        "comment": " ",
        "type": "{ r | gear : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "greenCheckMark",
        "comment": " ",
        "type": "{ r | smallCheckmark_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "guidedWrite",
        "comment": " ",
        "type": "{ r | icons_guidedWrite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "hat",
        "comment": " ",
        "type": "{ r | hat : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "help",
        "comment": " ",
        "type": "{ r | icons_helpBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "helpSvg",
        "comment": " ",
        "type": "{ r | help : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "highFive",
        "comment": " ",
        "type": "{ r | level3Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "icon",
        "comment": " ",
        "type": "{ alt : String, icon : Nri.Ui.Icon.V4.IconType } -> Accessibility.Styled.Html msg"
      },
      {
        "name": "key",
        "comment": " ",
        "type": "{ r | key : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "keychain",
        "comment": " ",
        "type": "{ r | keychain : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "late",
        "comment": " ",
        "type": "{ r | icons_clockRed_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "leaderboard",
        "comment": " ",
        "type": "{ r | leaderboard : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "lightBulb",
        "comment": " ",
        "type": "{ r | hint_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "link",
        "comment": " Create an icon that links to a part of NRI\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V4.IconLinkModel -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkExternal",
        "comment": " Create an icon that links to an external site\nUses our default icon styles (25 x 25 px, azure)\n",
        "type": "Nri.Ui.Icon.V4.IconLinkModel -> Accessibility.Styled.Html msg"
      },
      {
        "name": "linkSpa",
        "comment": " Use this link for routing within a single page app.\n\nThis will make a normal <a> tag, but change the onClick behavior to avoid reloading the page.\n\n",
        "type": "(route -> String) -> (route -> msg) -> Nri.Ui.Icon.V4.IconLinkSpaModel route -> Accessibility.Styled.Html msg"
      },
      {
        "name": "lock",
        "comment": " ",
        "type": "{ r | lock : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "lockDeprecated",
        "comment": " ",
        "type": "{ r | premiumLock_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "logo",
        "comment": " ",
        "type": "{ r | logoRedBlack_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "masteryBadge",
        "comment": " ",
        "type": "{ r | masteryBadge : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "newspaper",
        "comment": " ",
        "type": "{ r | newspaper : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "notStarred",
        "comment": " ",
        "type": "{ r | commentNotStarred_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "okay",
        "comment": " ",
        "type": "{ r | level2Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "openClose",
        "comment": " ",
        "type": "{ r | openClose : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "peerReview",
        "comment": " ",
        "type": "{ r | icons_peerReview_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "pen",
        "comment": " ",
        "type": "{ r | pen : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "performance",
        "comment": " ",
        "type": "{ r | performance : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "personBlue",
        "comment": " ",
        "type": "{ r | personBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "preview",
        "comment": " ",
        "type": "{ r | preview : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "quickWrite",
        "comment": " ",
        "type": "{ r | icons_quickWrite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "rating",
        "comment": " ",
        "type": "{ r | rating : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "revising",
        "comment": " ",
        "type": "{ r | revising : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "seeMore",
        "comment": " ",
        "type": "{ r | seemore : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "share",
        "comment": " ",
        "type": "{ r | share : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "skip",
        "comment": " ",
        "type": "{ r | skip : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "sort",
        "comment": " ",
        "type": "{ r | sort : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "sortArrow",
        "comment": " ",
        "type": "{ r | sortArrow : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "speedometer",
        "comment": " ",
        "type": "{ r | speedometer : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "starred",
        "comment": " ",
        "type": "{ r | commentStarred_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "submitting",
        "comment": " ",
        "type": "{ r | submitting : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "thumbsUp",
        "comment": " ",
        "type": "{ r | level1Badge_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "twitter",
        "comment": " ",
        "type": "{ r | twitterBlue_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "unarchive",
        "comment": " ",
        "type": "{ r | unarchiveBlue2x_png : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "writingAssignment",
        "comment": " ",
        "type": "{ r | writingAssignment : String } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "x",
        "comment": " ",
        "type": "{ r | xWhite_svg : Nri.Ui.AssetPath.Asset } -> Nri.Ui.Icon.V4.IconType"
      },
      {
        "name": "xSvg",
        "comment": " ",
        "type": "{ r | x : String } -> Nri.Ui.Icon.V4.IconType"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Palette.V1",
    "comment": " Predefined color palettes for use in configurable components\n\n@docs Palette, PaletteName\n@docs white, gray, darkGray, blue, darkBlue, purple, turquoise, green, red, aqua, cornflower\n\n",
    "aliases": [
      {
        "name": "Palette",
        "comment": " ",
        "args": [],
        "type": "{ border : Css.Color , background : Css.Color , primary : Css.Color , name : Nri.Ui.Palette.V1.PaletteName }"
      }
    ],
    "types": [
      {
        "name": "PaletteName",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "Gray",
            []
          ],
          [
            "DarkGray",
            []
          ],
          [
            "Blue",
            []
          ],
          [
            "DarkBlue",
            []
          ],
          [
            "Purple",
            []
          ],
          [
            "Turquoise",
            []
          ],
          [
            "Red",
            []
          ],
          [
            "Green",
            []
          ],
          [
            "White",
            []
          ],
          [
            "Cornflower",
            []
          ],
          [
            "Aqua",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "aqua",
        "comment": " Aqua palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "blue",
        "comment": " Blue palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "cornflower",
        "comment": " Cornflower palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "darkBlue",
        "comment": " Dark blue palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "darkGray",
        "comment": " Dark Gray palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "gray",
        "comment": " Gray palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "green",
        "comment": " Green palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "purple",
        "comment": " Purple palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "red",
        "comment": " Red palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "turquoise",
        "comment": " Turquoise palette\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      },
      {
        "name": "white",
        "comment": " White palette (borders are blue)\n",
        "type": "Nri.Ui.Palette.V1.Palette"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Effects.V1",
    "comment": " Css mixins reused across Nri modules.\n\n@docs selectionShadow\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "selectionShadow",
        "comment": " Draw a 2 px thick ochre border around the element to indicate it is\nselected.\n\nThis uses a CSS box shadow to draw what looks like a border. Box shadows are\nperfect for this because they don't affect the elements positioning in any way.\nThis means we can be sure switching the selection shadow on and off is not\ngoing to make the element jump.\n\n",
        "type": "List Css.Style"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.BannerAlert.V2",
    "comment": "\n\n@docs error\n@docs neutral\n@docs success\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "error",
        "comment": " A banner to show error alerts\n",
        "type": "String -> Html.Styled.Html msg"
      },
      {
        "name": "neutral",
        "comment": " A banner to show neutral alerts\n",
        "type": "String -> Html.Styled.Html msg"
      },
      {
        "name": "success",
        "comment": " A banner for success alerts\n",
        "type": "String -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Checkbox.V3",
    "comment": "\n\n@docs Model, Theme, IsSelected\n\n@docs view, viewWithLabel, Assets\n\n@docs selectedFromBool\n\n",
    "aliases": [
      {
        "name": "Assets",
        "comment": " The assets used in this module.\n",
        "args": [
          "r"
        ],
        "type": "{ r | checkboxUnchecked_svg : Nri.Ui.AssetPath.Asset, checkboxChecked_svg : Nri.Ui.AssetPath.Asset, checkboxCheckedPartially_svg : Nri.Ui.AssetPath.Asset, checkboxLockOnInside_svg : Nri.Ui.AssetPath.Asset }"
      },
      {
        "name": "Model",
        "comment": " ",
        "args": [
          "msg"
        ],
        "type": "{ identifier : String , label : String , setterMsg : Bool -> msg , selected : Nri.Ui.Checkbox.V3.IsSelected , disabled : Bool , theme : Nri.Ui.Checkbox.V3.Theme , noOpMsg : msg }"
      }
    ],
    "types": [
      {
        "name": "IsSelected",
        "comment": "\n\n    = Selected --  Checked (rendered with a checkmark)\n    | NotSelected -- Not Checked (rendered blank)\n    | PartiallySelected -- Indeterminate (rendered dash)\n\n",
        "args": [],
        "cases": [
          [
            "Selected",
            []
          ],
          [
            "NotSelected",
            []
          ],
          [
            "PartiallySelected",
            []
          ]
        ]
      },
      {
        "name": "Theme",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "Square",
            []
          ],
          [
            "Locked",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "selectedFromBool",
        "comment": " If your selectedness is always selected or not selected,\nyou will likely store that state as a `Bool` in your model.\n`selectedFromBool` lets you easily convert that into an `IsSelected` value\nfor use with `Nri.Ui.Checkbox`.\n",
        "type": "Bool -> Nri.Ui.Checkbox.V3.IsSelected"
      },
      {
        "name": "view",
        "comment": " Shows a checkbox (the label is only used for accessibility hints)\n",
        "type": "Nri.Ui.Checkbox.V3.Assets a -> Nri.Ui.Checkbox.V3.Model msg -> Accessibility.Styled.Html msg"
      },
      {
        "name": "viewWithLabel",
        "comment": " Shows a checkbox and its label text\n",
        "type": "Nri.Ui.Checkbox.V3.Assets a -> Nri.Ui.Checkbox.V3.Model msg -> Accessibility.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Colors.V1",
    "comment": " Comprehensive list of named colors.\n\nFor helpers & conversions, see Nri.Ui.Colors.Extra, or\nconsider [elm-color-extra](http://package.elm-lang.org/packages/eskimoblood/elm-color-extra/5.0.0/).\n\n@docs aqua, aquaDark, aquaLight, azure, azureDark\n@docs white\n@docs blue, blueDeep\n@docs cornflower, cornflowerDark, cornflowerLight, cyan\n@docs frost\n@docs gray20, gray45, gray75, gray92, gray96\n@docs glacier, grassland, green, greenDark, greenDarkest, greenLight, greenLightest\n@docs highlightLightBlue, highlightLightMagenta, highlightLightYellow, highlightBrown, highlightBrownDark\n@docs lichen\n@docs magenta\n@docs navy\n@docs orange, ochre\n@docs purple, purpleDark, purpleLight\n@docs red, redDark, redLight\n@docs sunshine\n@docs turquoise, turquoiseDark, turquoiseLight\n@docs yellow\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "aqua",
        "comment": "\n\n<p style=\"font-size:2em; color: #00cbeb\">#00cbeb</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "aquaDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #008da3\">#008da3</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "aquaLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #e6fcff\">#e6fcff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "azure",
        "comment": "\n\n<p style=\"font-size:2em; color: #146aff\">#146aff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "azureDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #004cc9\">#004cc9</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "blue",
        "comment": " TODO\n\n<p style=\"font-size:2em; color: #40a8e4\">#40a8e4</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "blueDeep",
        "comment": " TODO\n\n<p style=\"font-size:2em; color: #4a79a7\">#4a79a7</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "cornflower",
        "comment": "\n\n<p style=\"font-size:2em; color: #00aaff\">#00aaff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "cornflowerDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #0074ad\">#0074ad</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "cornflowerLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #e6f7ff\">#e6f7ff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "cyan",
        "comment": "\n\n<p style=\"font-size:2em; color: #43dcff\">#43dcff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "frost",
        "comment": "\n\n<p style=\"font-size:2em; color: #eef9ff\">#eef9ff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "glacier",
        "comment": "\n\n<p style=\"font-size:2em; color: #d4f0ff\">#d4f0ff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "grassland",
        "comment": "\n\n<p style=\"font-size:2em; color: #56bf74\">#56bf74</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "gray20",
        "comment": "\n\n<p style=\"font-size:2em; color: #333333\">#333333</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "gray45",
        "comment": "\n\n<p style=\"font-size:2em; color: #727272\">#727272</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "gray75",
        "comment": "\n\n<p style=\"font-size:2em; color: #bfbfbf\">#bfbfbf</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "gray92",
        "comment": "\n\n<p style=\"font-size:2em; color: #ebebeb\">#ebebeb</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "gray96",
        "comment": "\n\n<p style=\"font-size:2em; color: #f5f5f5\">#f5f5f5</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "green",
        "comment": "\n\n<p style=\"font-size:2em; color: #00d93e\">#00d93e</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "greenDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #26a300\">#26a300</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "greenDarkest",
        "comment": "\n\n<p style=\"font-size:2em; color: #228000\">#228000</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "greenLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #b3ffc9\">#b3ffc9</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "greenLightest",
        "comment": "\n\n<p style=\"font-size:2em; color: #e6ffed; background-color: black;\">#e6ffed</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightBrown",
        "comment": "\n\n<p style=\"font-size:2em; background-color: #ffc6a1\">#ffc6a1</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightBrownDark",
        "comment": "\n\n<p style=\"font-size:2em; background-color: #943b00\">#943b00</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightBlue",
        "comment": " cyan with alpha of 0.75\n\n<p style=\"font-size:2em; color: rgba(66, 219, 255, 0.75)\">rgba(66, 219, 255, 0.75)</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightMagenta",
        "comment": " magenta with alpha of 0.5\n\n<p style=\"font-size:2em; color: rgba(255, 0 ,189, 0.5)\">rgba(255, 0 ,189, 0.5)</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightYellow",
        "comment": " yellow with alpha of 0.75\n\n<p style=\"font-size:2em; color: rgba(254, 199 ,9, 0.75)\">rgba(254, 199 ,9, 0.75)</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "lichen",
        "comment": "\n\n<p style=\"font-size:2em; color: #99bfa4\">#99bfa4</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "magenta",
        "comment": "\n\n<p style=\"font-size:2em; color: #ff00bd\">#ff00bd</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "navy",
        "comment": "\n\n<p style=\"font-size:2em; color: #004e95\">#004e95</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "ochre",
        "comment": "\n\n<p style=\"font-size:2em; color: #e68800\">#e68800</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "orange",
        "comment": " -- TODO\n\n<p style=\"font-size:2em; color: #f5a623\">#f5a623</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "purple",
        "comment": "\n\n<p style=\"font-size:2em; color: #a839e7\">#a839e7</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "purpleDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #7721a7\">#7721a7</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "purpleLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #f7ebff\">#f7ebff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "red",
        "comment": "\n\n<p style=\"font-size:2em; color: #f3336c\">#f3336c</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "redDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #c2003a\">#c2003a</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "redLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #ffe0e6\">#ffe0e6</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "sunshine",
        "comment": "\n\n<p style=\"font-size:2em; color: #fffadc\">#fffadc</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoise",
        "comment": "\n\n<p style=\"font-size:2em; color: #00cfbe\">#00cfbe</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoiseDark",
        "comment": "\n\n<p style=\"font-size:2em; color: #00a39b\">#00a39b</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoiseLight",
        "comment": "\n\n<p style=\"font-size:2em; color: #e0fffe\">#e0fffe</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "white",
        "comment": "\n\n<p style=\"font-size:2em; color: #ffffff; background-color: black;\">#ffffff</p>\n\n",
        "type": "Css.Color"
      },
      {
        "name": "yellow",
        "comment": "\n\n<p style=\"font-size:2em; color: #fec709\">#fec709</p>\n\n",
        "type": "Css.Color"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.DisclosureIndicator.V1",
    "comment": " A caret that indicates that a section can expand. When the isOpen attribute is passed in as True, it will rotate. A \"disclosure indicator\" is a standard term for something that indicates that section can expand.\n\n@docs view, viewInline\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "view",
        "comment": " ",
        "type": "Nri.Ui.DisclosureIndicator.V1.Assets a -> Nri.Ui.DisclosureIndicator.V1.Config -> Html.Styled.Html msg"
      },
      {
        "name": "viewInline",
        "comment": " The inline variant of the indicator is smaller and occupies\nless vertical space so it can be inlined in lists or tables\nwithout breaking text flow. Also, it rotates from right to\ndown direction when expanding.\n",
        "type": "Nri.Ui.DisclosureIndicator.V1.Assets a -> Nri.Ui.DisclosureIndicator.V1.Config -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Colors.Extra",
    "comment": " Helpers for working with colors.\n\n\n# Conversions\n\n@docs toCoreColor, withAlpha\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "toCoreColor",
        "comment": " Convert a Css.Color into a Color.Color\ntoCoreColor (Css.hex \"#FFFFFF\") -- \"RGBA 255 255 255 1 : Color.Color\"\n",
        "type": "Css.Color -> Color.Color"
      },
      {
        "name": "withAlpha",
        "comment": " Add an alpha property to a Css.Color\ngrassland -- \"{ value = \"#56bf74\", color = Compatible, red = 86, green = 191, blue = 116, alpha = 1, warnings = [] } : Css.Color\"\nwithAlpha 0.5 grassland -- \"{ value = \"rgba(86, 191, 116, 0.5)\", color = Compatible, warnings = [], red = 86, green = 191, blue = 116, alpha = 0.5 } : Css.Color\"\n",
        "type": "Float -> Css.Color -> Css.Color"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Fonts.V1",
    "comment": " Fonts for NoRedInk projects\n\n@docs baseFont, quizFont, ugFont\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "baseFont",
        "comment": " Font for instructions, headers, and pretty much everything else\n",
        "type": "Css.Style"
      },
      {
        "name": "quizFont",
        "comment": " Font for question sentences, or most interactable or graded fields\n",
        "type": "Css.Style"
      },
      {
        "name": "ugFont",
        "comment": " Font for displaying user-generated content.\n",
        "type": "Css.Style"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.AssetPath",
    "comment": " Helpers for dealing with assets.\n\n@docs Asset, url\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Asset",
        "comment": " ",
        "args": [],
        "cases": [
          [
            "Asset",
            [
              "String"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "url",
        "comment": " ",
        "type": "Nri.Ui.AssetPath.Asset -> String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui",
    "comment": " A collection of helpers for working with NoRedInk projects\n\n@docs styled\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "styled",
        "comment": " Wrapper around [`Html.Styled.style`](http://package.elm-lang.org/packages/rtfeldman/elm-css/13.1.1/Html-Styled#styled) which adds a data-nri-description attribute to make it easier to tell from Inspect Element where in our code that element was defined.\n\nTakes a function that creates an element, and pre-applies styles and a `data-nri-description` attribution to it.\n\n    bigButton : List (Attribute msg) -> List (Html msg) -> Html msg\n    bigButton =\n        styled button\n            \"big button\"\n            [ padding (px 30)\n            , fontWeight bold\n            ]\n\n    view : Model -> Html msg\n    view model =\n        [ text \"These two buttons are identical:\"\n        , bigButton [] [ text \"Hi!\" ]\n        , button [ css [ padding (px 30), fontWeight bold ] ] [] [ text \"Hi!\" ]\n        ]\n\nHere, the bigButton function we've defined using styled button is identical to the normal button function, except that it has pre-applied the attribute of css [ padding (px 30), fontWeight bold ], as well as `(attribute \"data-nri-description\" \"big button\")`.\n\nYou can pass more attributes to bigButton as usual (including other css attributes). They will be applied after the pre-applied styles.\n\nNote: normally `attributeMsg` will be the same as `msg`, but we need them to be different types for special cases when `fn` needs to do tricky things. For example, some elements from the Accessibility.Styled package use the following type signature:\n\n    div : List (Attribute Never) -> List (Html msg) -> Html msg\n\n",
        "type": "(List (Html.Styled.Attribute attributeMsg) -> List (Html.Styled.Html msg) -> Html.Styled.Html msg) -> String -> List Css.Style -> List (Html.Styled.Attribute attributeMsg) -> List (Html.Styled.Html msg) -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Html.Attributes.V2",
    "comment": " Extras for working with Html.Attributes.\n\nThis is the new version of Nri.Ui.Html.Attributes.Extra.\n\n@docs none, includeIf\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "includeIf",
        "comment": " conditionally include an attribute. Useful for CSS classes generated with\n`UniqueClass`!\n",
        "type": "Bool -> Html.Styled.Attribute msg -> Html.Styled.Attribute msg"
      },
      {
        "name": "none",
        "comment": " Represents an attribute with no semantic meaning, useful for conditionals.\n\nThis is implemented such that whenever Html.Attributes.Extra.none is encountered\nby VirtualDom it will set a meaningless property on the element object itself to\nnull:\n\n    domNode['Html.Attributes.Extra.none'] = null\n\nIt's totally safe and lets us clean up conditional and maybe attributes\n\n",
        "type": "Html.Styled.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Ui.Html.V3",
    "comment": " For all utils involving HTML. New version of Nri.Ui.Html.Extra.\n\n@docs role\n\n@docs onEsc, onEnter, onKeyUp, onEnterAndSpace\n\n@docs textFromList, oxfordifyWithHtml, nbsp\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "nbsp",
        "comment": " Workaround for `Html.text \"&nbsp;\"` not working in elm.\n",
        "type": "Html.Styled.Html msg"
      },
      {
        "name": "onEnter",
        "comment": " ",
        "type": "a -> Html.Styled.Attribute a"
      },
      {
        "name": "onEnterAndSpace",
        "comment": " \"Buttons\" should trigger on Enter and on Space.\n",
        "type": "msg -> Html.Styled.Attribute msg"
      },
      {
        "name": "onEsc",
        "comment": " ",
        "type": "a -> a -> Html.Styled.Attribute a"
      },
      {
        "name": "onKeyUp",
        "comment": " Convert a keycode into a message on keyup\n",
        "type": "Html.Styled.Events.Options -> (Int -> Maybe.Maybe a) -> Html.Styled.Attribute a"
      },
      {
        "name": "oxfordifyWithHtml",
        "comment": " ",
        "type": "String -> String -> List (Html.Styled.Html msg) -> List (Html.Styled.Html msg)"
      },
      {
        "name": "role",
        "comment": " Convenience for defining role attributes, e.g. <div role=\"tabpanel\">\n",
        "type": "String -> Html.Styled.Attribute msg"
      },
      {
        "name": "textFromList",
        "comment": " Takes a list of strings, joins them with a space and returns it as a Html.text.\ntextFromList [\"Hello\", \"World\"] == text [ String.join \" \" [\"Hello\", \"World\" ] ]\n",
        "type": "List String -> Html.Styled.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "DEPRECATED.Nri.Ui.Styles.V2",
    "comment": " DEPRECATED. Once we are on elm-css 15.1.0 or later, we should use its\nbuilt-in keyframe functionality.\n\n\n### Keyframe animations\n\n@docs Keyframe, keyframes, toString\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Keyframe",
        "comment": " A CSS keyframe animation that will have vendor prefixes automatically added.\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "keyframes",
        "comment": " Create a CSS keyframe animation with appropriate vendor prefixes\n",
        "type": "String -> List ( String, String ) -> DEPRECATED.Nri.Ui.Styles.V2.Keyframe"
      },
      {
        "name": "toString",
        "comment": " Turn a [`Keyframe`](#Keyframe) into a string that can be included in a CSS stylesheet.\n",
        "type": "DEPRECATED.Nri.Ui.Styles.V2.Keyframe -> String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]