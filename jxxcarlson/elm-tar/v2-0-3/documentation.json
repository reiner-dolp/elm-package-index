[{"name":"Tar","comment":" Use\n\n       encodeFiles : List ( FileRecord, Data ) -> Encode.Encoder\n\nto tar an arbitrary set of files which may contain either text or binary\ndata. To tar a set of text files, you can use\n\n       encodeTextFiles : List (FileRecord, String) -> Encode.Encoder\n\nFor more details, see the README. See also the demo app `./examples/Main.elm`\n\n@docs Data, encodeFiles, encodeTextFiles, defaultFileRecord\n\n","unions":[{"name":"Data","comment":" Use `StringData String` for text data,\n`BinaryData Bytes` for binary data, e.g.,\n`StringData \"This is a test\"` or\n`BinaryData someBytes`\n","args":[],"cases":[["StringData",["String.String"]],["BinaryData",["Bytes.Bytes"]]]}],"aliases":[],"values":[{"name":"defaultFileRecord","comment":" defaultFileRecord is a dummy FileRecord that you modify\nto suit your needs. See `/examples/Main.elm`.\n\nencodeFileRecord defaultFileRecord |> Bytes.Encode.encode |> Hex.fromBytes\n\nencodeFileRecord defaultFileRecord |> Bytes.Encode.encode |> Bytes.width\n\n","type":"Tar.FileRecord"},{"name":"encodeFiles","comment":"\n\n      Example\n\n      fileRecord_ =\n          Tar.defaultFileRecord\n\n      fileRecord1 =\n          { fileRecord_ | filename = \"a.txt\" }\n\n      content1 =\n          \"One two three\\n\"\n\n      fileRecord2 =\n          { fileRecord_ | filename = \"c.binary\" }\n\n      content2 =\n          Hex.toBytes \"616263646566\" |> Maybe.withDefault (encode (Bytes.Encode.unsignedInt8 0))\n\n      Tar.encodeFiles\n          [ ( fileRecord1, StringData content1 )\n          , ( fileRecord2, BinaryData content2 )\n          ]\n          |> Bytes.Encode.encode\n\n      Note: `Hex` is found in `jxxcarlson/hex`\n","type":"List.List ( Tar.FileRecord, Tar.Data ) -> Bytes.Encode.Encoder"},{"name":"encodeTextFiles","comment":" Example\n\nencodeFiles [(defaultFileRecord, \"This is a test\"), (defaultFileRecord, \"Lah di dah do day!\")] |> Bytes.Encode.encode == <2594 bytes> : Bytes\n\n","type":"List.List ( Tar.FileRecord, String.String ) -> Bytes.Encode.Encoder"}],"binops":[]}]