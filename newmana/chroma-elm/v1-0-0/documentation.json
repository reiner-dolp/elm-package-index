[{"name":"Chroma.Chroma","comment":" The attempt here is to provide something similar to <https://gka.github.io/chroma.js/> but also idiomatic Elm.\n\nCurrently, incomplete - on Scale works.\n\n\n# Definition\n\n@docs chroma, scale, distance, distance255, distanceWithLab\n\n\n# Helpers\n\n@docs scaleDefault\n\n","unions":[],"aliases":[],"values":[{"name":"chroma","comment":" TBD\n","type":"String.String -> Result.Result String.String Chroma.Types.ExtColor"},{"name":"distance","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"distance255","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"distanceWithLab","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"scale","comment":" TBD\n","type":"Chroma.Scale.Data -> List.List Chroma.Types.ExtColor -> List.List (Basics.Float -> Chroma.Types.ExtColor)"},{"name":"scaleDefault","comment":" TBD\n","type":"List.List (Basics.Float -> Chroma.Types.ExtColor)"}],"binops":[]},{"name":"Chroma.Interpolator","comment":" Provides interpolation between two colours of the same colour space.\n\n\n# Definition\n\n@docs interpolate\n\n","unions":[],"aliases":[],"values":[{"name":"interpolate","comment":" Return a new colour based on interpolating on two colours and a weighting between them.\n\nCMYK may not work correctly. Will return black if the types are not the same.\n\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float -> Chroma.Types.ExtColor"}],"binops":[]},{"name":"Chroma.Scale","comment":" The attempt here is to provide something similar to <https://gka.github.io/chroma.js/> but also idiomatic Elm.\n\n\n# Definition\n\n@docs getColor, domain, correctLightness, Data, classes, createData, defaultData\n\n\n# Helpers\n\n@docs asRgba255, asRgba\n\n","unions":[],"aliases":[{"name":"Data","comment":" Configuration data used by most functions.\n","args":[],"type":"{ mode : Chroma.Types.Mode, nanColor : Color.Color, spread : Basics.Float, isFixed : Basics.Bool, domainValues : List.Nonempty.Nonempty Basics.Float, pos : List.Nonempty.Nonempty ( Basics.Float, Basics.Float ), paddingValues : List.Nonempty.Nonempty Basics.Float, useClasses : Basics.Bool, colors : List.Nonempty.Nonempty Chroma.Types.ExtColor, useOut : Basics.Bool, min : Basics.Float, max : Basics.Float, useCorrectLightness : Basics.Bool, gammaValue : Basics.Float }"}],"values":[{"name":"asRgba","comment":" Takes a result from getColor and returns Float (0-1) RGB values.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.RgbaColor"},{"name":"asRgba255","comment":" Takes a result from getColor and returns Integer (0-255) RGB values.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.Rgba255Color"},{"name":"classes","comment":" TBD\n","type":"List.List Color.Color -> Basics.Int -> List.List Color.Color"},{"name":"correctLightness","comment":" Given a data change the lightness value (need to be LAB).\n","type":"Chroma.Scale.Data -> Basics.Float -> Basics.Float"},{"name":"createData","comment":" Setup new configuration with the given colours.\n","type":"List.Nonempty.Nonempty Chroma.Types.ExtColor -> Chroma.Scale.Data -> Chroma.Scale.Data"},{"name":"defaultData","comment":" Sensible default configuration defaults: RGB, domain 0-1, pos 0, 1,and white and black colour range.\n","type":"Chroma.Scale.Data"},{"name":"domain","comment":" Set a new domain like [0,100] rather than the default [0,1]\n","type":"List.Nonempty.Nonempty Basics.Float -> Chroma.Scale.Data -> Chroma.Scale.Data"},{"name":"getColor","comment":" Finish <https://github.com/gka/chroma.js/blob/master/src/generator/scale.js#L119> >\nImplement classes <https://github.com/gka/chroma.js/blob/master/src/generator/scale.js#L156>\n","type":"Chroma.Scale.Data -> Basics.Float -> Chroma.Types.ExtColor"}],"binops":[]}]