[{"name":"Chroma.Chroma","comment":" The attempt here is to provide something similar to <https://gka.github.io/chroma.js/> but also idiomatic Elm.\n\n\n# Definition\n\n@docs chroma, scale, domain, distance, distance255, distanceWithLab\n\n\n# Helpers\n\n@docs scaleDefault, scaleWith, domainWith\n\n","unions":[],"aliases":[],"values":[{"name":"chroma","comment":" Given a valid hex string (6 or 3) produce an RGB Color.\n","type":"String.String -> Result.Result String.String Chroma.Types.ExtColor"},{"name":"distance","comment":" Calculate the distance in RGB color space.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"distance255","comment":" Calculate the distance in RGB 255 color space.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"distanceWithLab","comment":" Calculate the distance in LAB color space.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float"},{"name":"domain","comment":" Return a new configuration and a function from float to color based on default values, the given colors and domain.\n","type":"List.Nonempty.Nonempty Basics.Float -> List.Nonempty.Nonempty Chroma.Types.ExtColor -> ( Chroma.Scale.Data, Basics.Float -> Chroma.Types.ExtColor )"},{"name":"domainWith","comment":" Return a new configuration and a function from float to color based on the given configuration values, the given colors and domain.\n","type":"List.Nonempty.Nonempty Basics.Float -> Chroma.Scale.Data -> List.Nonempty.Nonempty Chroma.Types.ExtColor -> ( Chroma.Scale.Data, Basics.Float -> Chroma.Types.ExtColor )"},{"name":"scale","comment":" Return a new configuration and a function from float to color based on default values and the given colors.\n","type":"List.Nonempty.Nonempty Chroma.Types.ExtColor -> ( Chroma.Scale.Data, Basics.Float -> Chroma.Types.ExtColor )"},{"name":"scaleDefault","comment":" Return a new configuration and a function from float to color based on default values - colors White to Black, domain 0 - 1.\n","type":"( Chroma.Scale.Data, Basics.Float -> Chroma.Types.ExtColor )"},{"name":"scaleWith","comment":" Return a new configuration and a function from float to color based on the given configuration values and the given colors.\n","type":"Chroma.Scale.Data -> List.Nonempty.Nonempty Chroma.Types.ExtColor -> ( Chroma.Scale.Data, Basics.Float -> Chroma.Types.ExtColor )"}],"binops":[]},{"name":"Chroma.Colors.Brewer","comment":" All colorbrewer 2.0 colors <http://colorbrewer2.org/>\n\n\n# Sequential Colour Ramp\n\n@docs orRd, puBu, buPu, oranges, buGn, ylOrBr, ylGn, reds, rdPu, greens, ylGnBu, purples, gnBu, greys, ylOrRd, puRd, blues, puBuGn\n\n\n# Diverging Colour Ramp\n\n@docs brBG, pRGn, piYG, puOr, rdBu, rdGy, rdYlBu, rdYlGn, spectral\n\n\n# Qualitative Colour Ramp\n\n@docs set1, set2, accent, set3, dark2, paired, pastel2, pastel1\n\n","unions":[],"aliases":[],"values":[{"name":"accent","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"blues","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"brBG","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"buGn","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"buPu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"dark2","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"gnBu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"greens","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"greys","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"orRd","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"oranges","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"pRGn","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"paired","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"pastel1","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"pastel2","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"piYG","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"puBu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"puBuGn","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"puOr","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"puRd","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"purples","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"rdBu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"rdGy","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"rdPu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"rdYlBu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"rdYlGn","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"reds","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"set1","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"set2","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"set3","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"spectral","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"ylGn","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"ylGnBu","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"ylOrBr","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"},{"name":"ylOrRd","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"}],"binops":[]},{"name":"Chroma.Colors.Inferno","comment":" Inferno colour scale.\n\n![Inferno](https://raw.githubusercontent.com/newmana/chroma-elm/master/images/inferno4.png)\n\n\n# Colour Scale\n\n@docs inferno\n\n","unions":[],"aliases":[],"values":[{"name":"inferno","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"}],"binops":[]},{"name":"Chroma.Colors.Magma","comment":" Magma colour scale.\n\n![Magma](https://raw.githubusercontent.com/newmana/chroma-elm/master/images/magma4.png)\n\n\n# Colour Scale\n\n@docs magma\n\n","unions":[],"aliases":[],"values":[{"name":"magma","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"}],"binops":[]},{"name":"Chroma.Colors.Viridis","comment":" Viridis colour scale.\n\n[Somewhere Over the Rainbow: An Empirical Assessmentof Quantitative Colormaps](https://idl.cs.washington.edu/files/2018-QuantitativeColor-CHI.pdf).\n\n![Viridis](https://raw.githubusercontent.com/newmana/chroma-elm/master/images/viridis4.png)\n\n\n# Colour Scale\n\n@docs viridis\n\n","unions":[],"aliases":[],"values":[{"name":"viridis","comment":" TBD\n","type":"List.Nonempty.Nonempty Color.Color"}],"binops":[]},{"name":"Chroma.Colors.W3CX11","comment":" All of the X11 color names <https://en.wikipedia.org/wiki/X11_color_names>\n\n\n# Definition\n\n@docs named, w3cx11\n\n\n# Colours\n\n@docs aliceBlue, antiqueWhite, aqua, azure, aquamarine\n@docs beige, bisque, black, blanchedalmond, blue, blueviolet, brown, burlywood, cadetblue\n@docs chocolate, coral, cornflowerblue, cornsilk, crimson, cyan, chartreuse\n@docs darkolivegreen, darkseagreen, darkslategrey, dimgray, darkslategray, dodgerblue, darkgrey, darkturquoise, darkgreen, darkviolet, darkgray, darkslateblue, deeppink, darkmagenta, darkgoldenrod, dimgrey, darkblue, darkkhaki, darkcyan, darkorchid, deepskyblue, darkred, darkorange, darksalmon\n@docs firebrick\n@docs gainsboro, ghostwhite, gold, goldenrod, green, greenyellow, gray, grey\n@docs hotpink\n@docs indianred, indigo\n@docs lightgreen, lightgrey, lightslategrey, lightsteelblue\n@docs mediumaquamarine, mediumslateblue\n@docs oldlace\n@docs purple\n@docs red, rebeccapurple\n@docs sandybrown, salmon, seagreen, seashell, sienna, silver, skyblue, slateblue, slategray, slategrey, springgreen, steelblue\n@docs tan, teal, thistle, tomato, turquoise\n@docs wheat, white, whitesmoke\n@docs yellow, yellowgreen\n\n","unions":[],"aliases":[],"values":[{"name":"aliceBlue","comment":" TBD\n","type":"Color.Color"},{"name":"antiqueWhite","comment":" TBD\n","type":"Color.Color"},{"name":"aqua","comment":" TBD\n","type":"Color.Color"},{"name":"aquamarine","comment":" TBD\n","type":"Color.Color"},{"name":"azure","comment":" TBD\n","type":"Color.Color"},{"name":"beige","comment":" TBD\n","type":"Color.Color"},{"name":"bisque","comment":" TBD\n","type":"Color.Color"},{"name":"black","comment":" TBD\n","type":"Color.Color"},{"name":"blanchedalmond","comment":" TBD\n","type":"Color.Color"},{"name":"blue","comment":" TBD\n","type":"Color.Color"},{"name":"blueviolet","comment":" TBD\n","type":"Color.Color"},{"name":"brown","comment":" TBD\n","type":"Color.Color"},{"name":"burlywood","comment":" TBD\n","type":"Color.Color"},{"name":"cadetblue","comment":" TBD\n","type":"Color.Color"},{"name":"chartreuse","comment":" TBD\n","type":"Color.Color"},{"name":"chocolate","comment":" TBD\n","type":"Color.Color"},{"name":"coral","comment":" TBD\n","type":"Color.Color"},{"name":"cornflowerblue","comment":" TBD\n","type":"Color.Color"},{"name":"cornsilk","comment":" TBD\n","type":"Color.Color"},{"name":"crimson","comment":" TBD\n","type":"Color.Color"},{"name":"cyan","comment":" TBD\n","type":"Color.Color"},{"name":"darkblue","comment":" TBD\n","type":"Color.Color"},{"name":"darkcyan","comment":" TBD\n","type":"Color.Color"},{"name":"darkgoldenrod","comment":" TBD\n","type":"Color.Color"},{"name":"darkgray","comment":" TBD\n","type":"Color.Color"},{"name":"darkgreen","comment":" TBD\n","type":"Color.Color"},{"name":"darkgrey","comment":" TBD\n","type":"Color.Color"},{"name":"darkkhaki","comment":" TBD\n","type":"Color.Color"},{"name":"darkmagenta","comment":" TBD\n","type":"Color.Color"},{"name":"darkolivegreen","comment":" TBD\n","type":"Color.Color"},{"name":"darkorange","comment":" TBD\n","type":"Color.Color"},{"name":"darkorchid","comment":" TBD\n","type":"Color.Color"},{"name":"darkred","comment":" TBD\n","type":"Color.Color"},{"name":"darksalmon","comment":" TBD\n","type":"Color.Color"},{"name":"darkseagreen","comment":" TBD\n","type":"Color.Color"},{"name":"darkslateblue","comment":" TBD\n","type":"Color.Color"},{"name":"darkslategray","comment":" TBD\n","type":"Color.Color"},{"name":"darkslategrey","comment":" TBD\n","type":"Color.Color"},{"name":"darkturquoise","comment":" TBD\n","type":"Color.Color"},{"name":"darkviolet","comment":" TBD\n","type":"Color.Color"},{"name":"deeppink","comment":" TBD\n","type":"Color.Color"},{"name":"deepskyblue","comment":" TBD\n","type":"Color.Color"},{"name":"dimgray","comment":" TBD\n","type":"Color.Color"},{"name":"dimgrey","comment":" TBD\n","type":"Color.Color"},{"name":"dodgerblue","comment":" TBD\n","type":"Color.Color"},{"name":"firebrick","comment":" TBD\n","type":"Color.Color"},{"name":"gainsboro","comment":" TBD\n","type":"Color.Color"},{"name":"ghostwhite","comment":" TBD\n","type":"Color.Color"},{"name":"gold","comment":" TBD\n","type":"Color.Color"},{"name":"goldenrod","comment":" TBD\n","type":"Color.Color"},{"name":"gray","comment":" TBD\n","type":"Color.Color"},{"name":"green","comment":" TBD\n","type":"Color.Color"},{"name":"greenyellow","comment":" TBD\n","type":"Color.Color"},{"name":"grey","comment":" TBD\n","type":"Color.Color"},{"name":"hotpink","comment":" TBD\n","type":"Color.Color"},{"name":"indianred","comment":" TBD\n","type":"Color.Color"},{"name":"indigo","comment":" TBD\n","type":"Color.Color"},{"name":"lightgreen","comment":" TBD\n","type":"Color.Color"},{"name":"lightgrey","comment":" TBD\n","type":"Color.Color"},{"name":"lightslategrey","comment":" TBD\n","type":"Color.Color"},{"name":"lightsteelblue","comment":" TBD\n","type":"Color.Color"},{"name":"mediumaquamarine","comment":" TBD\n","type":"Color.Color"},{"name":"mediumslateblue","comment":" TBD\n","type":"Color.Color"},{"name":"named","comment":" Lookup a colour by name.\n\n    named \"red\"\n    --> Ok (RgbaSpace 1 0 0 1) : Result String Color.Color\n\n","type":"String.String -> Result.Result String.String Color.Color"},{"name":"oldlace","comment":" TBD\n","type":"Color.Color"},{"name":"purple","comment":" TBD\n","type":"Color.Color"},{"name":"rebeccapurple","comment":" TBD\n","type":"Color.Color"},{"name":"red","comment":" TBD\n","type":"Color.Color"},{"name":"salmon","comment":" TBD\n","type":"Color.Color"},{"name":"sandybrown","comment":" TBD\n","type":"Color.Color"},{"name":"seagreen","comment":" TBD\n","type":"Color.Color"},{"name":"seashell","comment":" TBD\n","type":"Color.Color"},{"name":"sienna","comment":" TBD\n","type":"Color.Color"},{"name":"silver","comment":" TBD\n","type":"Color.Color"},{"name":"skyblue","comment":" TBD\n","type":"Color.Color"},{"name":"slateblue","comment":" TBD\n","type":"Color.Color"},{"name":"slategray","comment":" TBD\n","type":"Color.Color"},{"name":"slategrey","comment":" TBD\n","type":"Color.Color"},{"name":"springgreen","comment":" TBD\n","type":"Color.Color"},{"name":"steelblue","comment":" TBD\n","type":"Color.Color"},{"name":"tan","comment":" TBD\n","type":"Color.Color"},{"name":"teal","comment":" TBD\n","type":"Color.Color"},{"name":"thistle","comment":" TBD\n","type":"Color.Color"},{"name":"tomato","comment":" TBD\n","type":"Color.Color"},{"name":"turquoise","comment":" TBD\n","type":"Color.Color"},{"name":"w3cx11","comment":" TBD\n","type":"Dict.Dict String.String Color.Color"},{"name":"wheat","comment":" TBD\n","type":"Color.Color"},{"name":"white","comment":" TBD\n","type":"Color.Color"},{"name":"whitesmoke","comment":" TBD\n","type":"Color.Color"},{"name":"yellow","comment":" TBD\n","type":"Color.Color"},{"name":"yellowgreen","comment":" TBD\n","type":"Color.Color"}],"binops":[]},{"name":"Chroma.Converter.In.Cmyk2Rgb","comment":" Convert CMYK to RGB (floats)\n\n\n# Definition\n\n@docs cmyk2rgb\n\n","unions":[],"aliases":[],"values":[{"name":"cmyk2rgb","comment":" TBD\n","type":"Chroma.Types.CymkColor -> Color.Color"}],"binops":[]},{"name":"Chroma.Converter.In.Hex2Rgb","comment":" Convert Hex String (like #ffffff and #fff) to RGB (floats)\n\n\n# Definition\n\n@docs hex2rgb\n\n","unions":[],"aliases":[],"values":[{"name":"hex2rgb","comment":" TBD\n","type":"String.String -> Result.Result String.String Color.Color"}],"binops":[]},{"name":"Chroma.Converter.In.Hsl2Rgb","comment":" Convert HSL to RGB\n\n\n# Definition\n\n@docs hsl2rgb, hslDegrees2rgb\n\n","unions":[],"aliases":[],"values":[{"name":"hsl2rgb","comment":" Hue, Saturation and Lightness are clamped 0..1.\n","type":"Chroma.Types.Hsla -> Color.Color"},{"name":"hslDegrees2rgb","comment":" Hue is measured in degrees and wrapped to the range 0..360. Saturation and Lightness are clamped 0..1.\n","type":"Chroma.Types.HslaDegrees -> Color.Color"}],"binops":[]},{"name":"Chroma.Converter.In.Lab2Rgb","comment":" Convert LAB to RGB (floats)\n\n\n# Definition\n\n@docs lab2rgb\n\n","unions":[],"aliases":[],"values":[{"name":"lab2rgb","comment":" TBD\n","type":"Chroma.Types.LabColor -> Color.Color"}],"binops":[]},{"name":"Chroma.Converter.Out.ToCmyk","comment":" Convert ExtColor to CMYK\n\n\n# Definition\n\n@docs toCmyk\n\n","unions":[],"aliases":[],"values":[{"name":"toCmyk","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.CymkColor"}],"binops":[]},{"name":"Chroma.Converter.Out.ToHex","comment":" Convert ExtColors to hex string (#RGB)\n\n\n# Definition\n\n@docs toHex\n\n","unions":[],"aliases":[],"values":[{"name":"toHex","comment":" Takes a result from getColor and returns Integer (0-255) RGB values.\n","type":"Chroma.Types.ExtColor -> String.String"}],"binops":[]},{"name":"Chroma.Converter.Out.ToHsl","comment":" Convert ExtColor to HSL\n\n\n# Definition\n\n@docs toHsl\n\n","unions":[],"aliases":[],"values":[{"name":"toHsl","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.Hsla"}],"binops":[]},{"name":"Chroma.Converter.Out.ToLab","comment":" Convert RgbColor to LAB\n\n\n# Definition\n\n@docs toLab\n\n\n# Helper\n\n@docs toLabExtColor\n\n","unions":[],"aliases":[],"values":[{"name":"toLab","comment":" TBD\n","type":"Chroma.Types.ExtColor -> Chroma.Types.LabColor"},{"name":"toLabExtColor","comment":" TBD\n","type":"Color.Color -> Chroma.Types.ExtColor"}],"binops":[]},{"name":"Chroma.Converter.Out.ToRgb","comment":" Convert ExtColors to RGB record types or array\n\n\n# Definition\n\n@docs toRgba, toRgba255, toNonEmptyList\n\n","unions":[],"aliases":[],"values":[{"name":"toNonEmptyList","comment":" TBD\n","type":"Chroma.Types.ExtColor -> List.Nonempty.Nonempty Basics.Float"},{"name":"toRgba","comment":" Takes a result from getColor and returns Float (0-1) RGB values.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.RgbaColor"},{"name":"toRgba255","comment":" Takes a result from getColor and returns Integer (0-255) RGB values.\n","type":"Chroma.Types.ExtColor -> Chroma.Types.Rgba255Color"}],"binops":[]},{"name":"Chroma.Interpolator","comment":" Provides interpolation between two colours of the same colour space.\n\n\n# Definition\n\n@docs interpolate\n\n","unions":[],"aliases":[],"values":[{"name":"interpolate","comment":" Return a new colour based on interpolating on two colours and a weighting between them.\n\nCMYK may not work correctly. Will return black if the types are not the same.\n\n","type":"Chroma.Types.ExtColor -> Chroma.Types.ExtColor -> Basics.Float -> Chroma.Types.ExtColor"}],"binops":[]},{"name":"Chroma.Scale","comment":" The attempt here is to provide something similar to <https://gka.github.io/chroma.js/> but also idiomatic Elm.\n\n\n# Definition\n\n@docs getColor, domain, correctLightness, Data, classes, createData, defaultData\n\n","unions":[],"aliases":[{"name":"Data","comment":" Configuration data used by most functions.\n","args":[],"type":"{ mode : Chroma.Types.Mode, nanColor : Color.Color, spread : Basics.Float, isFixed : Basics.Bool, domainValues : List.Nonempty.Nonempty Basics.Float, pos : List.Nonempty.Nonempty ( Basics.Float, Basics.Float ), paddingValues : List.Nonempty.Nonempty Basics.Float, useClasses : Basics.Bool, colors : List.Nonempty.Nonempty Chroma.Types.ExtColor, useOut : Basics.Bool, min : Basics.Float, max : Basics.Float, useCorrectLightness : Basics.Bool, gammaValue : Basics.Float }"}],"values":[{"name":"classes","comment":" TBD\n","type":"List.List Color.Color -> Basics.Int -> List.List Color.Color"},{"name":"correctLightness","comment":" Given a data change the lightness value (need to be LAB).\n","type":"Chroma.Scale.Data -> Basics.Float -> Basics.Float"},{"name":"createData","comment":" Setup new configuration with the given colours.\n","type":"List.Nonempty.Nonempty Chroma.Types.ExtColor -> Chroma.Scale.Data -> Chroma.Scale.Data"},{"name":"defaultData","comment":" Sensible default configuration defaults: RGB, domain 0-1, pos 0, 1,and white and black colour range.\n","type":"Chroma.Scale.Data"},{"name":"domain","comment":" Set a new domain like [0,100] rather than the default [0,1]\n","type":"List.Nonempty.Nonempty Basics.Float -> Chroma.Scale.Data -> Chroma.Scale.Data"},{"name":"getColor","comment":" Finish <https://github.com/gka/chroma.js/blob/master/src/generator/scale.js#L119> >\nImplement classes <https://github.com/gka/chroma.js/blob/master/src/generator/scale.js#L156>\n","type":"Chroma.Scale.Data -> Basics.Float -> Chroma.Types.ExtColor"}],"binops":[]},{"name":"Chroma.Types","comment":" Types\n\n\n# Definition\n\n@docs CymkColor, ExtColor, Hsla, HslaDegrees, LabColor, Mode, Rgba255Color, RgbaColor\n\n","unions":[{"name":"ExtColor","comment":" TBD\n","args":[],"cases":[["RGBColor",["Color.Color"]],["CMYKColor",["Chroma.Types.CymkColor"]],["LABColor",["Chroma.Types.LabColor"]]]},{"name":"Mode","comment":" TBD\n","args":[],"cases":[["CMYK",[]],["HSL",[]],["LAB",[]],["RGB",[]]]}],"aliases":[{"name":"CymkColor","comment":" TBD\n","args":[],"type":"{ cyan : Basics.Float, magenta : Basics.Float, yellow : Basics.Float, black : Basics.Float }"},{"name":"Hsla","comment":" HSLA where the Hue, Saturation, Lightness and Alpha 0..1.\n","args":[],"type":"{ hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float }"},{"name":"HslaDegrees","comment":" HSLA where the Hue is 0..360, Saturation, Lightness and Alpha 0..1.\n","args":[],"type":"{ hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float }"},{"name":"LabColor","comment":" TBD\n","args":[],"type":"{ lightness : Basics.Float, labA : Basics.Float, labB : Basics.Float }"},{"name":"Rgba255Color","comment":" TBD\n","args":[],"type":"{ red : Basics.Int, green : Basics.Int, blue : Basics.Int, alpha : Basics.Float }"},{"name":"RgbaColor","comment":" TBD\n","args":[],"type":"{ red : Basics.Float, green : Basics.Float, blue : Basics.Float, alpha : Basics.Float }"}],"values":[],"binops":[]}]