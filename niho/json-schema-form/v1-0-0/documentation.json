[{"name":"Json.Schema.Form","comment":" Generate validating forms from JSON schemas.\n\n\n# Types\n\n@docs Options, State, Msg\n\n\n# Init/update lifecycle\n\n@docs init, update\n\n\n# View\n\n@docs view, onSubmit\n\n","unions":[],"aliases":[{"name":"Msg","comment":" Form messages for `update`.\n","args":[],"type":"Form.Msg"},{"name":"Options","comment":" Customize the generated form.\n\n  - `errors` - A function that turns error values into user readable strings.\n  - `formats` - A list of custom formats (see `Json.Schema.Form.Format`).\n\n","args":[],"type":"{ errors : Json.Schema.Form.Error.Errors, formats : Json.Schema.Form.Format.Formats }"},{"name":"State","comment":" The form state.\n","args":[],"type":"{ options : Json.Schema.Form.Options, schema : Json.Schema.Definitions.Schema, form : Form.Form Json.Schema.Form.Error.ErrorValue Json.Schema.Form.Value.Value }"}],"values":[{"name":"init","comment":" Initialize a form state with options and a schema.\n","type":"Json.Schema.Form.Options -> Json.Schema.Definitions.Schema -> Json.Schema.Form.State"},{"name":"onSubmit","comment":" Triggers the form to be submitted for validation.\n\n    form [ Json.Schema.Form.onSubmit ]\n        [ Json.Schema.Form.view state\n        , button [] [ test \"Submit\" ]\n        ]\n\n","type":"Html.Attribute Json.Schema.Form.Msg"},{"name":"update","comment":" Update the form state.\n","type":"Json.Schema.Form.Msg -> Json.Schema.Form.State -> Json.Schema.Form.State"},{"name":"view","comment":" The form fields as HTML. Use together with `onSubmit` to submit the form.\n","type":"Json.Schema.Form.State -> Html.Html Json.Schema.Form.Msg"}],"binops":[]},{"name":"Json.Schema.Form.Encode","comment":" Encode form values as JSON.\n\n\n# Encode\n\n@docs encode\n\n","unions":[],"aliases":[],"values":[{"name":"encode","comment":" Encode a form value (the output of a valid form) as JSON.\n","type":"Json.Schema.Form.Value.Value -> Json.Encode.Value"}],"binops":[]},{"name":"Json.Schema.Form.Error","comment":" Validation errors.\n\n@docs ErrorValue, Errors\n\n","unions":[{"name":"ErrorValue","comment":" A validation error. See `etaque/elm-form` for more error types.\n","args":[],"cases":[["Invalid",[]],["InvalidSet",[]],["ShorterListThan",["Basics.Int"]],["LongerListThan",["Basics.Int"]],["InvalidCustomFormat",["String.String"]]]}],"aliases":[{"name":"Errors","comment":" A function that converts a field path and an `ErrorValue` into a user readable string.\n","args":[],"type":"String.String -> Form.Error.ErrorValue Json.Schema.Form.Error.ErrorValue -> String.String"}],"values":[],"binops":[]}]