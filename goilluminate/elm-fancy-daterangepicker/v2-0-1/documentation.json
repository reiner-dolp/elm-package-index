[{"name":"DatePicker","comment":" A customizable daterangepicker component.\n\n@docs Msg, DatePicker\n@docs init, update, subscriptions, isOpen, setOpen, view, getDate, setDate\n\n\n# Settings\n\n@docs Settings, defaultSettings, setSettings, setDateFormat, setPlaceholder, setInputName, setInputId, setInputIcon, setInputAttributes, setPresetOptions, setRestrictedDateRange\n\n\n## Presets\n\n@docs PresetOptions, PresetOption, Preset, PresetSetting, PresetInterval, PresetRelativeToToday, defaultPresetOptions, defaultPresets, mkPresetFromDate, getPresets\n\n","unions":[{"name":"DatePicker","comment":" The DatePicker model.\n","args":[],"cases":[]},{"name":"Msg","comment":" A type representing messages that are passed within the DatePicker.\n","args":[],"cases":[]},{"name":"PresetInterval","comment":" A type representing what the value in PresetSettings is measured in.\n\n  - Ex. value = 1 and PresetInterval = Days, this is interpretted as 1 Days.\n  - Ex. value = 4 and PresetI:nterval = Months, this is interpretted as 4 Months.\n\n","args":[],"cases":[["Days",[]],["Months",[]],["Years",[]]]},{"name":"PresetOption","comment":" A type representing which presets to use.\n\n  - _DefaultPresets_ = Use the default presets from defaultPresets only.\n  - _CustomPresetsFromSettings_ = Use only your custom built presets from a list of PresetSetting only.\n  - _CustomPresets_ = Use only your custom built Presets.\n  - _CustomOnly_ = Use only your custom build presets build from PresetSetting and your custom presets.\n  - _AllPresets_ = Use all presets (default, customFromSettings, custom).\n  - _NoPresets_ = Turn off Presets.\n\n","args":[],"cases":[["DefaultPresets",[]],["CustomPresetsFromSettings",[]],["CustomPresets",[]],["CustomOnly",[]],["AllPresets",[]],["NoPresets",[]]]},{"name":"PresetRelativeToToday","comment":" A type representing how the preset is relative to today.\n\n  - BeforeToday will subtract any value from today and use that date.\n  - AfterToday will add any value form today and use that date.\n  - Today will use today.\n  - Tomorrow will use tomorrow.\n  - Yesterday will use yesterday.\n\n","args":[],"cases":[["BeforeToday",[]],["AfterToday",[]],["Today",[]],["Tomorrow",[]],["Yesterday",[]]]}],"aliases":[{"name":"Preset","comment":" A type that represents a preset date.\n\n  - _name_ = Name of the preset. i.e. \"Past Month\"\n  - _date_ = The date that is selected when selecting the preset.\n\n","args":[],"type":"{ name : String.String, date : Date.Date }"},{"name":"PresetOptions","comment":" A type representing your preset options for your date range picker.\n","args":[],"type":"{ presetOption : DatePicker.PresetOption, presetSettings : List.List DatePicker.PresetSetting, presets : List.List DatePicker.Preset }"},{"name":"PresetSetting","comment":" A type used to generate preset dateranges.\n\n  - _name_ = The name that you want to give the preset. i.e. \"Past Month\"\n  - _interval_ = The interval in which you want to add/subtract the value from today.\n  - _presetRelativeToToday_ = whether it is a range from [past - present] (ToToday) or [present - future] (FromToday)\n  - _value_ = the number of your @interval that you are adding/subtracting.\n\n\n## Example\n\n    { name = \"1 Month Ago\"\n    , interval = Months\n    , presetRelativeToday = BeforeToday\n    , value = 1\n    }\n\n","args":[],"type":"{ name : String.String, interval : DatePicker.PresetInterval, presetRelativeToToday : DatePicker.PresetRelativeToToday, value : Basics.Int }"},{"name":"Settings","comment":" The settings that the DatePicker uses.\n","args":[],"type":"{ placeholder : String.String, inputName : Maybe.Maybe String.String, inputId : Maybe.Maybe String.String, inputIcon : Maybe.Maybe (Html.Html DatePicker.Msg), inputAttributes : List.List (Html.Attribute DatePicker.Msg), presetOptions : DatePicker.PresetOptions, restrictedDateRange : DateRangePicker.Common.RestrictedDateRange, formatDate : Date.Date -> String.String }"}],"values":[{"name":"defaultPresetOptions","comment":" A record of default preset options for the datepicker.\n","type":"DatePicker.PresetOptions"},{"name":"defaultPresets","comment":" An opaque function used to make the default presets\n","type":"Date.Date -> List.List DatePicker.Preset"},{"name":"defaultSettings","comment":" A record of default settings for the datepicker.\n","type":"DatePicker.Settings"},{"name":"getDate","comment":" Expose the current selected date.\n","type":"DatePicker.DatePicker -> Maybe.Maybe Date.Date"},{"name":"getPresets","comment":" Expose the current presets.\n","type":"DatePicker.DatePicker -> List.List DatePicker.Preset"},{"name":"init","comment":" The default initial state of the DatePicker. You must execute\nthe returned command in order to set the current date and for the\ndatepicker to behave correctly.\n","type":"( DatePicker.DatePicker, Platform.Cmd.Cmd DatePicker.Msg )"},{"name":"isOpen","comment":" Expose if the daterange picker is open\n","type":"DatePicker.DatePicker -> Basics.Bool"},{"name":"mkPresetFromDate","comment":" A function that creates a Preset from a name and a date\n","type":"String.String -> Date.Date -> DatePicker.Preset"},{"name":"setDate","comment":" Sets the current date for the datepicker.\n","type":"Maybe.Maybe Date.Date -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setDateFormat","comment":" Sets the date formatter for the datepicker.\n","type":"(Date.Date -> String.String) -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setInputAttributes","comment":" Sets the input attributes for the datepicker.\n","type":"List.List (Html.Attribute DatePicker.Msg) -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setInputIcon","comment":" Sets the input icon for the datepicker.\n","type":"Html.Html DatePicker.Msg -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setInputId","comment":" Sets the id for the datepicker.\n","type":"String.String -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setInputName","comment":" Sets the name for the datepicker.\n","type":"String.String -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setOpen","comment":" Sets the the open state of the DatePicker\n","type":"Basics.Bool -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setPlaceholder","comment":" Sets the placeholder for the datepicker.\n","type":"String.String -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setPresetOptions","comment":" Sets the preset options for the datepicker.\n","type":"DatePicker.PresetOptions -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setRestrictedDateRange","comment":" Sets the restricted date range for the datepicker.\n","type":"DateRangePicker.Common.RestrictedDateRange -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"setSettings","comment":" Sets the settings for the daterange picker\n","type":"DatePicker.Settings -> DatePicker.DatePicker -> DatePicker.DatePicker"},{"name":"subscriptions","comment":" Subscribes to a mouse click\n","type":"DatePicker.DatePicker -> Platform.Sub.Sub DatePicker.Msg"},{"name":"update","comment":" The datepicker update function.\n","type":"DatePicker.Msg -> DatePicker.DatePicker -> ( DatePicker.DatePicker, Platform.Cmd.Cmd DatePicker.Msg )"},{"name":"view","comment":" The daterange picker view. The date range passed is whatever date range it should treat as selected.\n","type":"DatePicker.DatePicker -> Html.Html DatePicker.Msg"}],"binops":[]},{"name":"DateRangePicker","comment":" A customizable daterangepicker component.\n\n@docs Msg, DateRangePicker\n@docs init, update, subscriptions, isOpen, setOpen, view, getDateRange, setDateRange\n\n\n# Settings\n\n@docs Settings, defaultSettings, setSettings, setPlaceholder, setInputName, setInputId, setInputIcon, setInputAttributes, setPresetOptions, setRestrictedDateRange, formatDateRange, getMinDate, getMaxDate\n\n\n## Presets\n\n@docs PresetOptions, PresetOption, Preset, PresetSetting, PresetInterval, PresetRelativeToToday, defaultPresetOptions, defaultPresets, mkPresetFromDateRange, mkPresetFromDates, getPresets\n\n","unions":[{"name":"DateRangePicker","comment":" The DateRangePicker model.\n","args":[],"cases":[]},{"name":"Msg","comment":" A type representing messages that are passed within the DateRangePicker.\n","args":[],"cases":[]},{"name":"PresetInterval","comment":" A type representing what the value in PresetSettings is measured in.\n\n  - Ex. value = 1 and PresetInterval = Days, this is interpretted as 1 Days.\n  - Ex. value = 4 and PresetI:nterval = Months, this is interpretted as 4 Months.\n\n","args":[],"cases":[["Days",[]],["Months",[]],["Years",[]]]},{"name":"PresetOption","comment":" A type representing which presets to use.\n\n  - _DefaultPresets_ = Use the default presets from defaultPresets only.\n  - _CustomPresetsFromSettings_ = Use only your custom built presets from a list of PresetSetting only.\n  - _CustomPresets_ = Use only your custom built Presets.\n  - _CustomOnly_ = Use only your custom build presets build from PresetSetting and your custom presets.\n  - _AllPresets_ = Use all presets (default, customFromSettings, custom).\n  - _NoPresets_ = Turn off Presets.\n\n","args":[],"cases":[["DefaultPresets",[]],["CustomPresetsFromSettings",[]],["CustomPresets",[]],["CustomOnly",[]],["AllPresets",[]],["NoPresets",[]]]},{"name":"PresetRelativeToToday","comment":" A type representing how the preset is relative to today.\n\n  - If using ToToday, the preset daterange would use today as the end date, and the date from your PresetSettings as the end date.\n  - If using FromToday, the preset daterange would use today as the start date and the date from your PresetSettings as the end date.\n\n","args":[],"cases":[["ToToday",[]],["FromToday",[]]]}],"aliases":[{"name":"Preset","comment":" A type that represents a preset daterange.\n\n  - _name_ = Name of the preset. i.e. \"Past Month\"\n  - _dateRange_ = The daterange that is selected when selecting the preset.\n\n","args":[],"type":"{ name : String.String, dateRange : DateRangePicker.Common.DateRange }"},{"name":"PresetOptions","comment":" A type representing your preset options for your date range picker.\n","args":[],"type":"{ presetOption : DateRangePicker.PresetOption, presetSettings : List.List DateRangePicker.PresetSetting, presets : List.List DateRangePicker.Preset }"},{"name":"PresetSetting","comment":" A type used to generate preset dateranges.\n\n  - _name_ = The name that you want to give the preset. i.e. \"Past Month\"\n  - _interval_ = The interval in which you want to add/subtract the value from today.\n  - _presetRelativeToToday_ = whether it is a range from [past - present] (ToToday) or [present - future] (FromToday)\n  - _value_ = the number of your @interval that you are adding/subtracting.\n\n\n## Example\n\n    { name = \"Past Month\"\n    , interval = Months\n    , presetRelativeToday = ToToday\n    , value = 1\n    }\n\n","args":[],"type":"{ name : String.String, interval : DateRangePicker.PresetInterval, presetRelativeToToday : DateRangePicker.PresetRelativeToToday, value : Basics.Int }"},{"name":"Settings","comment":" The settings that the DateRangePicker uses.\n","args":[],"type":"{ placeholder : String.String, inputName : Maybe.Maybe String.String, inputId : Maybe.Maybe String.String, inputIcon : Maybe.Maybe (Html.Html DateRangePicker.Msg), inputAttributes : List.List (Html.Attribute DateRangePicker.Msg), presetOptions : DateRangePicker.PresetOptions, restrictedDateRange : DateRangePicker.Common.RestrictedDateRange, formatDateRange : DateRangePicker.Common.DateRange -> String.String }"}],"values":[{"name":"defaultPresetOptions","comment":" A record of default preset options for the daterangepicker.\n","type":"DateRangePicker.PresetOptions"},{"name":"defaultPresets","comment":" An opaque function used to make the default presets\n","type":"Date.Date -> List.List DateRangePicker.Preset"},{"name":"defaultSettings","comment":" A record of default settings for the daterangepicker.\n","type":"DateRangePicker.Settings"},{"name":"formatDateRange","comment":" A function that formats a daterange to a string.\n","type":"DateRangePicker.Common.DateRange -> String.String"},{"name":"getDateRange","comment":" Expose the current selected daterange.\n","type":"DateRangePicker.DateRangePicker -> Maybe.Maybe DateRangePicker.Common.DateRange"},{"name":"getMaxDate","comment":" Expose the max date in the enabled date range.\n","type":"DateRangePicker.DateRangePicker -> Maybe.Maybe Date.Date"},{"name":"getMinDate","comment":" Expose the min date in the enabled date range.\n","type":"DateRangePicker.DateRangePicker -> Maybe.Maybe Date.Date"},{"name":"getPresets","comment":" Expose the current presets.\n","type":"DateRangePicker.DateRangePicker -> List.List DateRangePicker.Preset"},{"name":"init","comment":" The default initial state of the DateRangePicker. You must execute\nthe returned command in order to set the current date and for the\ndaterangepicker to behave correctly.\n","type":"( DateRangePicker.DateRangePicker, Platform.Cmd.Cmd DateRangePicker.Msg )"},{"name":"isOpen","comment":" Expose if the daterange picker is open\n","type":"DateRangePicker.DateRangePicker -> Basics.Bool"},{"name":"mkPresetFromDateRange","comment":" A function that creates a Preset from a name and a dateRange\n","type":"String.String -> DateRangePicker.Common.DateRange -> DateRangePicker.Preset"},{"name":"mkPresetFromDates","comment":" A function that creates a Preset from a name, startDate, and endDate\n","type":"String.String -> Date.Date -> Date.Date -> DateRangePicker.Preset"},{"name":"setDateRange","comment":" Sets the current daterange for the daterangepicker.\n","type":"Maybe.Maybe DateRangePicker.Common.DateRange -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setInputAttributes","comment":" Sets the input attributes for the daterangepicker.\n","type":"List.List (Html.Attribute DateRangePicker.Msg) -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setInputIcon","comment":" Sets the input icon for the daterangepicker.\n","type":"Html.Html DateRangePicker.Msg -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setInputId","comment":" Sets the id for the daterangepicker.\n","type":"String.String -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setInputName","comment":" Sets the name for the daterangepicker.\n","type":"String.String -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setOpen","comment":" Sets the the open state of the DateRangePicker\n","type":"Basics.Bool -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setPlaceholder","comment":" Sets the placeholder for the daterangepicker.\n","type":"String.String -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setPresetOptions","comment":" Sets the preset options for the daterangepicker.\n","type":"DateRangePicker.PresetOptions -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setRestrictedDateRange","comment":" Sets the restricted date range for the daterangepicker.\n","type":"DateRangePicker.Common.RestrictedDateRange -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"setSettings","comment":" Sets the settings for the daterange picker\n","type":"DateRangePicker.Settings -> DateRangePicker.DateRangePicker -> DateRangePicker.DateRangePicker"},{"name":"subscriptions","comment":" Subscribes to a mouse click\n","type":"DateRangePicker.DateRangePicker -> Platform.Sub.Sub DateRangePicker.Msg"},{"name":"update","comment":" The daterangepicker update function.\n","type":"DateRangePicker.Msg -> DateRangePicker.DateRangePicker -> ( DateRangePicker.DateRangePicker, Platform.Cmd.Cmd DateRangePicker.Msg )"},{"name":"view","comment":" The daterange picker view. The date range passed is whatever date range it should treat as selected.\n","type":"DateRangePicker.DateRangePicker -> Html.Html DateRangePicker.Msg"}],"binops":[]},{"name":"DateRangePicker.Common","comment":" A common library between DatePicker and DateRangePicker\n\n@docs DateRange, mkDateRange, inRange\n\n\n# Settings\n\n@docs RestrictedDateRange\n\n","unions":[{"name":"RestrictedDateRange","comment":" A type representing a restricted range for the datepicker. All dates not within the restricted date range will be disabled.\n\n  - _Off_ = no restrictions, any date to any date can be chosen.\n  - _ToPresent_ = from any date in the past up to today (including today)\n  - _FromPresent_ = from today to any date in the future\n  - _Past_ = from any date in the past up to yesterday (excluding today)\n  - _Future_ = from tomorrow up to any date in the future\n  - _Between_ date date = only between the two given dates [start - end] (inclusive)\n  - _To_ date = from any date in the past up to the given date (inclusive)\n  - _From_ date = from the given date up to any date in the future (inclusive)\n\n","args":[],"cases":[["Off",[]],["ToPresent",[]],["FromPresent",[]],["Past",[]],["Future",[]],["Between",["Date.Date","Date.Date"]],["To",["Date.Date"]],["From",["Date.Date"]]]}],"aliases":[{"name":"DateRange","comment":" A type representing a date range with a start date and end date.\n","args":[],"type":"{ start : Date.Date, end : Date.Date }"}],"values":[{"name":"inRange","comment":" A function to check if a given date is within a\ngiven dateRange.\n","type":"Date.Date -> DateRangePicker.Common.DateRange -> Basics.Bool"},{"name":"mkDateRange","comment":" A function that creates a DateRange by taking in two dates (start and end).\n\nThis function assumes that start <= end\n\n","type":"Date.Date -> Date.Date -> DateRangePicker.Common.DateRange"}],"binops":[]},{"name":"DateRangePicker.Date","comment":" A custom Date Helper Library.\n\n@docs initDate, dateTuple, formatDate, formatDay, formatMonth, dayToInt, monthToInt, daysInMonth, startOfMonth, endOfMonth\n@docs dateEqualTo, dateGreaterThan, dateLessThan, dateGreaterThanOrEqualTo, dateLessThanOrEqualTo\n\n","unions":[],"aliases":[],"values":[{"name":"dateEqualTo","comment":" A function that checks if date a is equal to date b\n","type":"Date.Date -> Date.Date -> Basics.Bool"},{"name":"dateGreaterThan","comment":" A function that checks if date a is greater than to date b\n","type":"Date.Date -> Date.Date -> Basics.Bool"},{"name":"dateGreaterThanOrEqualTo","comment":" A function that checks if date a is greater than or equal to date b\n","type":"Date.Date -> Date.Date -> Basics.Bool"},{"name":"dateLessThan","comment":" A function that checks if date a is less than to date b\n","type":"Date.Date -> Date.Date -> Basics.Bool"},{"name":"dateLessThanOrEqualTo","comment":" A function that checks if date a is less than or equal to date b\n","type":"Date.Date -> Date.Date -> Basics.Bool"},{"name":"dateTuple","comment":" A function that converts a Date into a tuple. (year, month, day)\n","type":"Date.Date -> ( Basics.Int, Basics.Int, Basics.Int )"},{"name":"dayToInt","comment":" A function that takes a Weekday and returns it as an integer.\n\n  - Sun - Sat\n  - 1 - 7\n\n","type":"Time.Weekday -> Basics.Int"},{"name":"daysInMonth","comment":" A function that returns the number of days in the given month for the given year.\n","type":"DateRangePicker.Date.Year -> Time.Month -> Basics.Int"},{"name":"endOfMonth","comment":" A function that takes a Date and returns the date representing the end of that month.\n","type":"Date.Date -> Date.Date"},{"name":"formatDate","comment":" A function to format a Date into a string.\n\n  - Ex. Feb 15, 2018\n\n","type":"Date.Date -> String.String"},{"name":"formatDay","comment":" A function that takes a Weekday and formats it into the abbreviated string.\n\n  - Ex. Mon -> \"Mo\"\n\n","type":"Time.Weekday -> String.String"},{"name":"formatMonth","comment":" A function that formats a Month into the full string.\n\n  - Ex. Jan -> \"January\"\n\n","type":"Time.Month -> String.String"},{"name":"initDate","comment":" A function that initializes a date.\n","type":"Date.Date"},{"name":"monthToInt","comment":" A function that takes a Month and returns it as an Int.\n\n  - Ex. Jan -> 1\n  - Ex. Dec -> 12\n\n","type":"Time.Month -> Basics.Int"},{"name":"startOfMonth","comment":" A function that takes a Date and returns the date representing the first of that month.\n","type":"Date.Date -> Date.Date"}],"binops":[]}]