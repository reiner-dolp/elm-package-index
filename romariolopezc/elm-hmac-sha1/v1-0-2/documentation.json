[{"name":"HmacSha1","comment":" Computes a Hash-based Message Authentication Code (HMAC) using the SHA-1 hash function\n\n@docs Digest, digest\n\n\n# Representation\n\n@docs toBytes, toIntList, toHex, toBase64\n\n","unions":[{"name":"Digest","comment":" A HMAC-SHA1 digest.\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"digest","comment":" Pass a Key and a Message to compute a Digest\n\n    digest \"key\" \"The quick brown fox jumps over the lazy dog\"\n        |> toHex\n    --> Ok \"DE7C9B85B8B78AA6BC8A7A36F70A90701C9DB4D9\"\n\n    digest \"key\" \"The quick brown fox jumps over the lazy dog\"\n        |> toBase64\n    --> Ok \"3nybhbi3iqa8ino29wqQcBydtNk=\"\n\n","type":"String.String -> String.String -> HmacSha1.Digest"},{"name":"toBase64","comment":" Convert a Digest into a base64 String Result\n\n    case toBase64 (digest \"key\" \"message\") of\n        Ok base64String ->\n            \"Base64 string: \" ++ base64String\n\n        Err err ->\n            \"Failed to convert the digest\"\n\n    --> Base64 string: IIjfdNXyFGtIFGyvSWU3fp0L46Q=\n\n","type":"HmacSha1.Digest -> Result.Result String.String String.String"},{"name":"toBytes","comment":" Convert a Digest into [elm/bytes](https://package.elm-lang.org/packages/elm/bytes/latest/) Bytes.\nYou can use this to map it to your own representations. I use it to convert it to\nBase16 and Base64 string representations.\n\n    toBytes (digest \"key\" \"message\")\n    --> Ok (<80 bytes>)\n\n","type":"HmacSha1.Digest -> Result.Result String.String Bytes.Bytes"},{"name":"toHex","comment":" Convert a Digest into a base16 String Result\n\n    case toHex (digest \"key\" \"message\") of\n        Ok base16String ->\n            \"Hex string: \" ++ base16String\n\n        Err err ->\n            \"Failed to convert the digest\"\n\n    --> Hex string: 2088DF74D5F2146B48146CAF4965377E9D0BE3A4\n\n","type":"HmacSha1.Digest -> Result.Result String.String String.String"},{"name":"toIntList","comment":" Convert a Digest into a List of Integers. Sometimes you will want to have the\nByte representation as a list of integers.\n\n    toIntList (digest \"key\" \"message\")\n        |> toIntList\n    --> Ok [32,136,223,116,213,242,20,107,72,20,108,175,73,101,55,126,157,11,227,164]\n\n","type":"HmacSha1.Digest -> Result.Result String.String (List.List Basics.Int)"}],"binops":[]}]