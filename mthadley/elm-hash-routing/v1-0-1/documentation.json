[{"name":"Browser.Hash","comment":" Check out the README for more a more in depth explanation of why\nthis package exists. Otherwise, skip down [`application`](#application) to\nget started.\n\n@docs application\n\n","unions":[],"aliases":[],"values":[{"name":"application","comment":" A replacement for [`Browser.application`][browser-application] that\nwill automatically process your hash-based Url's into ones that will work\nout of the box with the standard parsing logic of [`Url.Parser`][urlparser].\n\nIt's usage is the same as [`Browser.application`][browser-application]:\n\n    import Browser.Hash as Hash\n\n    main : Program () Model Msg\n    main =\n        Hash.application\n            { init = init\n            , view = view\n            , update = update\n            , subscriptions = subscriptions\n            , onUrlChange = App.RouteChange << Router.parse\n            , onUrlRequest = App.OnUrlRequest\n            }\n\n[browser-application]: https://package.elm-lang.org/packages/elm/browser/latest/Browser#application\n[urlparser]: https://package.elm-lang.org/packages/elm/url/latest/Url-Parser\n\n","type":"{ init : flags -> Url.Url -> Browser.Navigation.Key -> ( model, Platform.Cmd.Cmd msg ), view : model -> Browser.Document msg, update : msg -> model -> ( model, Platform.Cmd.Cmd msg ), subscriptions : model -> Platform.Sub.Sub msg, onUrlRequest : Browser.UrlRequest -> msg, onUrlChange : Url.Url -> msg } -> Platform.Program flags model msg"}],"binops":[]}]