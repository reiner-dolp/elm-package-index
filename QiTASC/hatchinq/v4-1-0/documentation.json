[{"name":"Examples","comment":" Exposed\n\n@docs main\n\n","unions":[],"aliases":[],"values":[{"name":"main","comment":" ","type":"Platform.Program {} Examples.Model Examples.Msg"}],"binops":[]},{"name":"Hatchinq.AppBar","comment":"\n\n\n# Exposed\n\n@docs Action, Config, Message, State, View, appBarHeight, configure, elevate, init, navigate, placeholder, update\n\n","unions":[{"name":"Message","comment":" ","args":[],"cases":[]},{"name":"State","comment":" ","args":[],"cases":[]}],"aliases":[{"name":"Action","comment":" ","args":["msg"],"type":"{ icon : String.String, message : msg }"},{"name":"Config","comment":" ","args":[],"type":"{ theme : Hatchinq.Theme.Theme }"},{"name":"View","comment":" ","args":["msg"],"type":"{ title : Element.Element msg, actions : List.List (Hatchinq.AppBar.Action msg) }"}],"values":[{"name":"appBarHeight","comment":" ","type":"Basics.Int"},{"name":"configure","comment":" ","type":"Hatchinq.AppBar.Config -> List.List (Hatchinq.Attribute.Attribute (Hatchinq.AppBar.InternalView msg)) -> Hatchinq.AppBar.View msg -> Element.Element msg"},{"name":"elevate","comment":" ","type":"Basics.Bool -> Hatchinq.Attribute.Attribute (Hatchinq.AppBar.InternalView msg)"},{"name":"init","comment":" ","type":"Hatchinq.AppBar.State"},{"name":"navigate","comment":" ","type":"msg -> Hatchinq.Attribute.Attribute (Hatchinq.AppBar.InternalView msg)"},{"name":"placeholder","comment":" ","type":"List.List (Hatchinq.Attribute.Attribute (Hatchinq.AppBar.InternalView msg)) -> Element.Element msg"},{"name":"update","comment":" ","type":"Hatchinq.AppBar.Message -> Hatchinq.AppBar.State -> Hatchinq.AppBar.State"}],"binops":[]},{"name":"Hatchinq.Attribute","comment":"\n\n\n# Exposed\n\n@docs Attribute, custom, height, none, toElement, toInternalView, toWidth, width, withAttributes\n\n","unions":[{"name":"Attribute","comment":" ","args":["v"],"cases":[]}],"aliases":[],"values":[{"name":"custom","comment":" ","type":"(v -> v) -> Hatchinq.Attribute.Attribute v"},{"name":"height","comment":" ","type":"Element.Length -> Hatchinq.Attribute.Attribute v"},{"name":"none","comment":" ","type":"Hatchinq.Attribute.Attribute v"},{"name":"toElement","comment":" ","type":"List.List (Hatchinq.Attribute.Attribute v) -> List.List (Element.Attribute msg)"},{"name":"toInternalView","comment":" ","type":"List.List (Hatchinq.Attribute.Attribute v) -> v -> v"},{"name":"toWidth","comment":" ","type":"List.List (Hatchinq.Attribute.Attribute v) -> Maybe.Maybe Element.Length"},{"name":"width","comment":" ","type":"Element.Length -> Hatchinq.Attribute.Attribute v"},{"name":"withAttributes","comment":" ","type":"List.List (Hatchinq.Attribute.Attribute internal) -> (List.List (Hatchinq.Attribute.Attribute internal) -> view -> Element.Element msg) -> List.List (Hatchinq.Attribute.Attribute internal) -> view -> Element.Element msg"}],"binops":[]},{"name":"Hatchinq.Button","comment":"\n\n\n# Exposed\n\n@docs Config, View, configure, contained, outlined, text\n\n","unions":[],"aliases":[{"name":"Config","comment":" ","args":[],"type":"{ theme : Hatchinq.Theme.Theme }"},{"name":"View","comment":" ","args":["msg"],"type":"{ label : String.String, onPress : Maybe.Maybe msg }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.Button.Config -> List.List (Hatchinq.Attribute.Attribute (Hatchinq.Button.InternalView msg)) -> Hatchinq.Button.View msg -> Element.Element msg"},{"name":"contained","comment":" ","type":"Hatchinq.Attribute.Attribute (Hatchinq.Button.InternalView msg)"},{"name":"outlined","comment":" ","type":"Hatchinq.Attribute.Attribute (Hatchinq.Button.InternalView msg)"},{"name":"text","comment":" ","type":"Hatchinq.Attribute.Attribute (Hatchinq.Button.InternalView msg)"}],"binops":[]},{"name":"Hatchinq.Checkbox","comment":"\n\n\n# Exposed\n\n@docs Config, configure, stopPropagation\n\n","unions":[],"aliases":[{"name":"Config","comment":" ","args":[],"type":"{ theme : Hatchinq.Theme.Theme }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.Checkbox.Config -> List.List (Hatchinq.Attribute.Attribute Hatchinq.Checkbox.InternalConfig) -> Hatchinq.Checkbox.View msg -> Element.Element msg"},{"name":"stopPropagation","comment":" ","type":"Hatchinq.Attribute.Attribute Hatchinq.Checkbox.InternalConfig"}],"binops":[]},{"name":"Hatchinq.Color","comment":"\n\n\n# Exposed\n\n@docs Color, alpha, blue, green, isBrighter, isDarker, red, rgba, toElement, withAlpha, textColor\n\n","unions":[{"name":"Color","comment":" ","args":[],"cases":[]}],"aliases":[],"values":[{"name":"alpha","comment":" ","type":"Hatchinq.Color.Color -> Basics.Float"},{"name":"blue","comment":" ","type":"Hatchinq.Color.Color -> Basics.Int"},{"name":"green","comment":" ","type":"Hatchinq.Color.Color -> Basics.Int"},{"name":"isBrighter","comment":" ","type":"Hatchinq.Color.Color -> Hatchinq.Color.Color -> Basics.Bool"},{"name":"isDarker","comment":" ","type":"Hatchinq.Color.Color -> Hatchinq.Color.Color -> Basics.Bool"},{"name":"red","comment":" ","type":"Hatchinq.Color.Color -> Basics.Int"},{"name":"rgba","comment":" ","type":"Basics.Int -> Basics.Int -> Basics.Int -> Basics.Float -> Hatchinq.Color.Color"},{"name":"textColor","comment":" ","type":"Hatchinq.Color.Color -> Hatchinq.Color.Color"},{"name":"toElement","comment":" ","type":"Hatchinq.Color.Color -> Element.Color"},{"name":"withAlpha","comment":" ","type":"Basics.Float -> Hatchinq.Color.Color -> Hatchinq.Color.Color"}],"binops":[]},{"name":"Hatchinq.DataTable","comment":"\n\n\n# Exposed\n\n@docs Config, Message, State, View\n@docs column, configure, expansion, infinite, init, plain, selection, sortableColumn, externalSortableColumn, update\n\n","unions":[{"name":"Message","comment":" ","args":["item","msg"],"cases":[]}],"aliases":[{"name":"Config","comment":" ","args":["item","msg"],"type":"{ theme : Hatchinq.Theme.Theme, lift : Hatchinq.DataTable.Message item msg -> msg }"},{"name":"State","comment":" ","args":["item"],"type":"{ hoveredHeader : Maybe.Maybe Basics.Int, sort : Hatchinq.DataTable.Sort item }"},{"name":"View","comment":" ","args":["item","msg"],"type":"{ columns : List.List (Hatchinq.DataTable.Column item msg), items : List.List item, state : Hatchinq.DataTable.State item }"}],"values":[{"name":"column","comment":" ","type":"Element.Element msg -> Element.Length -> (Basics.Int -> item -> Element.Element msg) -> Hatchinq.DataTable.Column item msg"},{"name":"configure","comment":" ","type":"Hatchinq.DataTable.Config item msg -> List.List (Hatchinq.Attribute.Attribute (Hatchinq.DataTable.InternalConfig item msg)) -> Hatchinq.DataTable.View item msg -> Element.Element msg"},{"name":"expansion","comment":" ","type":"(item -> Basics.Bool) -> (item -> Basics.Bool -> msg) -> (item -> Element.Element msg) -> Hatchinq.Attribute.Attribute (Hatchinq.DataTable.InternalConfig item msg)"},{"name":"externalSortableColumn","comment":" ","type":"Element.Element msg -> Element.Length -> (Basics.Int -> item -> Element.Element msg) -> (Basics.Int -> Maybe.Maybe Basics.Bool -> msg) -> Hatchinq.DataTable.Column item msg"},{"name":"infinite","comment":" ","type":"Hatchinq.Attribute.Attribute (Hatchinq.DataTable.InternalConfig item msg)"},{"name":"init","comment":" ","type":"Hatchinq.DataTable.State item"},{"name":"plain","comment":" ","type":"Hatchinq.Attribute.Attribute (Hatchinq.DataTable.InternalConfig item msg)"},{"name":"selection","comment":" ","type":"(item -> Basics.Bool) -> (item -> Basics.Bool -> msg) -> (Basics.Bool -> msg) -> Hatchinq.Attribute.Attribute (Hatchinq.DataTable.InternalConfig item msg)"},{"name":"sortableColumn","comment":" ","type":"Element.Element msg -> Element.Length -> (Basics.Int -> item -> Element.Element msg) -> (List.List item -> List.List item) -> Hatchinq.DataTable.Column item msg"},{"name":"update","comment":" ","type":"Hatchinq.DataTable.Message item msg -> Hatchinq.DataTable.State item -> ( Hatchinq.DataTable.State item, Platform.Cmd.Cmd msg )"}],"binops":[]},{"name":"Hatchinq.DropDown","comment":"\n\n\n# Exposed\n\n@docs Config, Message, State, configure, dropDownCount, filled, init, label, outlined, searchable, update\n\n","unions":[{"name":"Message","comment":" ","args":["item","msg"],"cases":[]}],"aliases":[{"name":"Config","comment":" ","args":["item","msg"],"type":"{ theme : Hatchinq.Theme.Theme, lift : Hatchinq.DropDown.Message item msg -> msg }"},{"name":"State","comment":" ","args":[],"type":"{ uiState : Hatchinq.DropDown.UiState }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.DropDown.Config item msg -> List.List (Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig) -> Hatchinq.DropDown.View item msg -> Element.Element msg"},{"name":"dropDownCount","comment":" ","type":"Basics.Int -> Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig"},{"name":"filled","comment":" ","type":"Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig"},{"name":"init","comment":" ","type":"Hatchinq.DropDown.State"},{"name":"label","comment":" ","type":"String.String -> Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig"},{"name":"outlined","comment":" ","type":"Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig"},{"name":"searchable","comment":" ","type":"Hatchinq.Attribute.Attribute Hatchinq.DropDown.InternalConfig"},{"name":"update","comment":" ","type":"Hatchinq.DropDown.Message item msg -> Hatchinq.DropDown.State -> ( Hatchinq.DropDown.State, Platform.Cmd.Cmd msg )"}],"binops":[]},{"name":"Hatchinq.IconButton","comment":"\n\n\n# Exposed\n\n@docs Config, View, configure, filled, withTextColor\n\n","unions":[],"aliases":[{"name":"Config","comment":" ","args":[],"type":"{ theme : Hatchinq.Theme.Theme }"},{"name":"View","comment":" ","args":["msg"],"type":"{ icon : String.String, onPress : Maybe.Maybe msg }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.IconButton.Config -> List.List (Hatchinq.Attribute.Attribute Hatchinq.IconButton.InternalConfig) -> Hatchinq.IconButton.View msg -> Element.Element msg"},{"name":"filled","comment":" ","type":"Hatchinq.Attribute.Attribute Hatchinq.IconButton.InternalConfig"},{"name":"withTextColor","comment":" ","type":"Element.Color -> Hatchinq.Attribute.Attribute Hatchinq.IconButton.InternalConfig"}],"binops":[]},{"name":"Hatchinq.List","comment":"\n\n\n# Exposed\n\n@docs Config, Message, State, View, configure, control, imageSrc, init, itemsCount, secondaryText, update\n\n","unions":[{"name":"Message","comment":" ","args":["item","msg"],"cases":[]}],"aliases":[{"name":"Config","comment":" ","args":["item","msg"],"type":"{ theme : Hatchinq.Theme.Theme, lift : Hatchinq.List.Message item msg -> msg }"},{"name":"State","comment":" ","args":["item"],"type":"{ id : Maybe.Maybe String.String, selected : Maybe.Maybe item }"},{"name":"View","comment":" ","args":["item","msg"],"type":"{ items : List.List item, toPrimaryText : item -> String.String, onSelect : Maybe.Maybe (item -> msg), activated : Maybe.Maybe item, state : Hatchinq.List.State item }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.List.Config item msg -> List.List (Hatchinq.Attribute.Attribute (Hatchinq.List.InternalConfig item msg)) -> Hatchinq.List.View item msg -> Element.Element msg"},{"name":"control","comment":" ","type":"(item -> Element.Element msg) -> Hatchinq.Attribute.Attribute (Hatchinq.List.InternalConfig item msg)"},{"name":"imageSrc","comment":" ","type":"(item -> String.String) -> Hatchinq.Attribute.Attribute (Hatchinq.List.InternalConfig item msg)"},{"name":"init","comment":" ","type":"Hatchinq.List.State item"},{"name":"itemsCount","comment":" ","type":"Basics.Int -> Hatchinq.Attribute.Attribute (Hatchinq.List.InternalConfig item msg)"},{"name":"secondaryText","comment":" ","type":"(item -> String.String) -> Hatchinq.Attribute.Attribute (Hatchinq.List.InternalConfig item msg)"},{"name":"update","comment":" ","type":"Hatchinq.List.Message item msg -> Hatchinq.List.State item -> ( Hatchinq.List.State item, Platform.Cmd.Cmd msg )"}],"binops":[]},{"name":"Hatchinq.Paginator","comment":"\n\n\n# Exposed\n\n@docs Config, View, configure\n\n","unions":[],"aliases":[{"name":"Config","comment":" ","args":[],"type":"{ theme : Hatchinq.Theme.Theme }"},{"name":"View","comment":" ","args":["msg"],"type":"{ rowsPerPage : Basics.Int, offset : Basics.Int, total : Basics.Int, nextPage : msg, previousPage : msg }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.Paginator.Config -> Hatchinq.Paginator.View msg -> Element.Element msg"}],"binops":[]},{"name":"Hatchinq.SidePanel","comment":"\n\n\n# Exposed\n\n@docs Config, SidePanelOrientation, State, View, configure, init, minWidth, subscriptions\n\n","unions":[{"name":"SidePanelOrientation","comment":" ","args":[],"cases":[["LeftHand",[]],["RightHand",[]]]}],"aliases":[{"name":"Config","comment":" ","args":["msg"],"type":"{ theme : Hatchinq.Theme.Theme, lift : Hatchinq.SidePanel.State -> msg, orientation : Hatchinq.SidePanel.SidePanelOrientation, maxWidthFraction : Basics.Float }"},{"name":"State","comment":" ","args":[],"type":"{ openedContainerId : Basics.Int, containerWidth : Basics.Int, containerWidths : Dict.Dict Basics.Int Basics.Int, beingDragged : Basics.Bool, windowSize : Hatchinq.SidePanel.WindowSize }"},{"name":"View","comment":" ","args":["msg"],"type":"{ buttons : List.List (Hatchinq.SidePanel.SidePanelButton msg), state : Hatchinq.SidePanel.State, topPageOffset : Basics.Int }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.SidePanel.Config msg -> List.List (Hatchinq.Attribute.Attribute Hatchinq.SidePanel.InternalConfig) -> Hatchinq.SidePanel.View msg -> Element.Element msg"},{"name":"init","comment":" ","type":"(Hatchinq.SidePanel.State -> msg) -> ( Hatchinq.SidePanel.State, Platform.Cmd.Cmd msg )"},{"name":"minWidth","comment":" ","type":"Basics.Int -> Hatchinq.Attribute.Attribute Hatchinq.SidePanel.InternalConfig"},{"name":"subscriptions","comment":" ","type":"Hatchinq.SidePanel.Config msg -> Hatchinq.SidePanel.State -> Platform.Sub.Sub msg"}],"binops":[]},{"name":"Hatchinq.TextField","comment":"\n\n\n# Exposed\n\n@docs Config, Message, State, View, configure, init, update\n\n","unions":[{"name":"Message","comment":" ","args":["id"],"cases":[]},{"name":"State","comment":" ","args":["id"],"cases":[]}],"aliases":[{"name":"Config","comment":" ","args":["id","msg"],"type":"{ theme : Hatchinq.Theme.Theme, lift : Hatchinq.TextField.Message id -> msg }"},{"name":"View","comment":" ","args":["id","msg"],"type":"{ id : id, label : String.String, value : String.String, state : Hatchinq.TextField.State id, onChange : Maybe.Maybe (String.String -> msg) }"}],"values":[{"name":"configure","comment":" ","type":"Hatchinq.TextField.Config id msg -> List.List (Hatchinq.Attribute.Attribute v) -> Hatchinq.TextField.View id msg -> Element.Element msg"},{"name":"init","comment":" ","type":"Hatchinq.TextField.State id"},{"name":"update","comment":" ","type":"Hatchinq.TextField.Message id -> Hatchinq.TextField.State id -> Hatchinq.TextField.State id"}],"binops":[]},{"name":"Hatchinq.Theme","comment":"\n\n\n# Exposed\n\n@docs ColorTheme, ColorType, FontTheme, Theme, arrowTransition, black, default, font, icon, stylesheet, textWithEllipsis, transition, transparent, white, withColors\n\n","unions":[],"aliases":[{"name":"ColorTheme","comment":" ","args":[],"type":"{ primary : Hatchinq.Theme.ColorType, secondary : Hatchinq.Theme.ColorType, gray : Hatchinq.Theme.ColorType }"},{"name":"ColorType","comment":" ","args":[],"type":"{ original : Hatchinq.Color.Color, color : Element.Color, textColor : Element.Color, lightest : Element.Color, lighter : Element.Color, light : Element.Color, dark : Element.Color, withAlpha : Basics.Float -> Element.Color }"},{"name":"FontTheme","comment":" ","args":[],"type":"{ main : Element.Font.Font, defaultSize : Basics.Int, smallSize : Basics.Int, smallerSize : Basics.Int, smallestSize : Basics.Int }"},{"name":"Theme","comment":" ","args":[],"type":"{ font : Hatchinq.Theme.FontTheme, colors : Hatchinq.Theme.ColorTheme, sizes : Hatchinq.Theme.Sizes }"}],"values":[{"name":"arrowTransition","comment":" ","type":"Html.Attribute msg"},{"name":"black","comment":" ","type":"Element.Color"},{"name":"default","comment":" ","type":"Hatchinq.Theme.Theme"},{"name":"font","comment":" ","type":"Element.Font.Font"},{"name":"icon","comment":" ","type":"String.String -> Element.Element msg"},{"name":"stylesheet","comment":" ","type":"Hatchinq.Theme.Theme -> Element.Element msg"},{"name":"textWithEllipsis","comment":" ","type":"String.String -> Element.Element msg"},{"name":"transition","comment":" ","type":"Html.Attribute msg"},{"name":"transparent","comment":" ","type":"Element.Color"},{"name":"white","comment":" ","type":"Element.Color"},{"name":"withColors","comment":" ","type":"Hatchinq.Color.Color -> Hatchinq.Color.Color -> Hatchinq.Theme.Theme -> Hatchinq.Theme.Theme"}],"binops":[]}]