[
  {
    "name": "ClarityUI.Grid",
    "comment": " Clarity UI Uses the Bootstrap Flex-grid. This module is borrowed from `elm-bootstrap`\n\nBootstrap includes a powerful mobile-first flexbox grid system for building layouts of all shapes and sizes. Itâ€™s based on a 12 column layout and has multiple tiers, one for each media query range.\nGrid.container\n[ Grid.row\n[ Row.topXs ][ Grid.col\n[ Col.xs4 ]\n[ text \"col1-row1\"]\n, Grid.col\n[ Col.xs8 ]\n[ text \"col2-row1\"]\n]\n, Grid.simpleRow\n[ Grid.col\n[ Col.xs4 ][ text \"col1-row2\"]\n, Grid.col\n[ Col.xs6 ][ text \"col2-row2\"]\n][ Grid.col\n[ Col.xs4 ]\n[ text \"col1-row2\"]\n, Grid.col\n[ Col.xs6 ]\n[ text \"col2-row2\"]\n]\n][ Grid.row\n[ Row.topXs ]\n[ Grid.col\n[ Col.xs4 ]\n[ text \"col1-row1\"]\n, Grid.col\n[ Col.xs8 ]\n[ text \"col2-row1\"]\n]\n, Grid.simpleRow\n[ Grid.col\n[ Col.xs4 ]\n[ text \"col1-row2\"]\n, Grid.col\n[ Col.xs6 ]\n[ text \"col2-row2\"]\n]\n]\n\n\n# Containers\n\n@docs container, containerFluid\n\n\n# Rows\n\n@docs row, simpleRow, keyedRow\n\n\n# Columns\n\n@docs col, colBreak, keyedCol, Column\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Column",
        "comment": " Opaque type representing a column element\n",
        "args": [
          "msg"
        ],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "col",
        "comment": " Create a column\n\n  - `options` List of column options\n  - `children` List of child elments\n\n",
        "type": "List (ClarityUI.Grid.Col.Option msg) -> List (Html.Html msg) -> ClarityUI.Grid.Column msg"
      },
      {
        "name": "colBreak",
        "comment": " Creates a full width column with no content. Handy for creating equal width multi-row columns.\n",
        "type": "List (Html.Attribute msg) -> ClarityUI.Grid.Column msg"
      },
      {
        "name": "container",
        "comment": " Responsive fixed width container, which changes its max-width at breakpoint\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "containerFluid",
        "comment": " Full width container spanning the entire viewport\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "keyedCol",
        "comment": " Create a column with keyed children\n\n  - `options` List of column options\n  - `keyedChildren` List of key,element child element tuples\n\n",
        "type": "List (ClarityUI.Grid.Col.Option msg) -> List ( String, Html.Html msg ) -> ClarityUI.Grid.Column msg"
      },
      {
        "name": "keyedRow",
        "comment": " Create a row with keyed columns. Handy when you need to move columns around without getting massive rerenders.\n\n  - `options` List of row options\n  - `keydCols` List of key, column tuples\n\n",
        "type": "List (ClarityUI.Grid.Row.Option msg) -> List ( String, ClarityUI.Grid.Column msg ) -> Html.Html msg"
      },
      {
        "name": "row",
        "comment": " Create a row\n\n  - `options` List of row options\n  - `cols` List of columns\n\n",
        "type": "List (ClarityUI.Grid.Row.Option msg) -> List (ClarityUI.Grid.Column msg) -> Html.Html msg"
      },
      {
        "name": "simpleRow",
        "comment": " Create a row with no configuration options\n",
        "type": "List (ClarityUI.Grid.Column msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.Header",
    "comment": " Clarity Header.\n\nHelper function for producing the header of the application.\n\nFor mor documentation on Clarity Header: <https://vmware.github.io/clarity/documentation/header>\n\n\n# Usage\n\n@docs header\n\n\n# Options\n\n@docs HeaderSections, Branding, HeaderColor\n\n",
    "aliases": [
      {
        "name": "Branding",
        "comment": " Branding Section of the header.\n",
        "args": [],
        "type": "{ icon : String, title : String }"
      },
      {
        "name": "HeaderSections",
        "comment": " Determines the structure of the header\n",
        "args": [
          "m"
        ],
        "type": "{ branding : ClarityUI.Header.Branding , nav : List (Html.Html m) , search : List (Html.Html m) , actions : List (Html.Html m) }"
      }
    ],
    "types": [
      {
        "name": "HeaderColor",
        "comment": " Sets the Color Pallette of the header\n",
        "args": [],
        "cases": [
          [
            "HC1",
            []
          ],
          [
            "HC2",
            []
          ],
          [
            "HC3",
            []
          ],
          [
            "HC4",
            []
          ],
          [
            "HC5",
            []
          ],
          [
            "HC6",
            []
          ],
          [
            "HC7",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "header",
        "comment": " Main entry point for header.\n\nTakes a HeaderSections object and returns a clarity header.\n\n    import ClarityUI.Header as Header\n\n",
        "type": "ClarityUI.Header.HeaderColor -> ClarityUI.Header.HeaderSections msg -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.Icon",
    "comment": " Wrapper around Clarity Icons Custom Element.\n\nFor the full Icon Font, see <https://vmware.github.io/clarity/documentation/iconography>\n\n\n# Use\n\n@docs baseIcon, icon, iconMd\n\n\n# Options\n\n@docs IconColor, IconSize\n\n",
    "aliases": [],
    "types": [
      {
        "name": "IconColor",
        "comment": " Icon Color.\n\nSets the icon color class\n\n",
        "args": [],
        "cases": []
      },
      {
        "name": "IconSize",
        "comment": " Icon Size.\n\nSets the Icon Size:\n\nS1 = 12px\nS2 = 16px\nS3 = 36px\nS4 = 48px\nS5 = 64px\nS6 = 72px\n\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "baseIcon",
        "comment": " Base Icon Function.\nExposes a lot of the clarity icon capabilities\n\nDocumentation on Clarity Icons : <https://vmware.github.io/clarity/documentation/iconography>\n\n",
        "type": "ClarityUI.Icon.IconColor -> ClarityUI.Icon.IconSize -> String -> Html.Html msg"
      },
      {
        "name": "icon",
        "comment": " Curried Shortcut Function.\n\nCreates a default size and color Icon.\n\n",
        "type": "String -> Html.Html msg"
      },
      {
        "name": "iconMd",
        "comment": " Curried Shortcut Function.\n\nCreates a medium size and default color Icon.\n\n",
        "type": "String -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.Alert",
    "comment": " Clarity UI's Alerts.\n\nFor more documentation on clarity alerts: <https://vmware.github.io/clarity/documentation/alerts>\n\n\n# Alerts\n\n@docs alert\n\n\n# Shorthand Inline Alerts\n\n@docs alertDanger, alertWarning, alertInfo, alertSuccess\n\n\n# App Alerts\n\n@docs alertAppDanger, alertAppWarning, alertAppInfo, alertAppSuccess\n\n\n# Options\n\n@docs AlertType\n\n\n# Data\n\n@docs AlertItem, AlertAction\n\n",
    "aliases": [
      {
        "name": "AlertAction",
        "comment": " Actions for an alert\n",
        "args": [],
        "type": "{ text : String, link : String }"
      },
      {
        "name": "AlertItem",
        "comment": " Item to pass to an alert\n",
        "args": [],
        "type": "{ text : String, actions : List ClarityUI.Alert.AlertAction }"
      }
    ],
    "types": [
      {
        "name": "AlertType",
        "comment": " Alert Type. Either Danger, Warning, Info or Success\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "alert",
        "comment": " Main Alert Entry Point. Creates a clarity alert.\n\nDocumentation about Clarity Alerts: <https://vmware.github.io/clarity/documentation/alerts#top>\n\n",
        "type": "ClarityUI.Alert.AlertType -> Bool -> Bool -> Bool -> ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertAppDanger",
        "comment": " Alert App Danger.\nCurried Shortcut for a dismissible danger app alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertAppInfo",
        "comment": " Alert App Info.\nCurried Shortcut for a dismissible Info app alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertAppSuccess",
        "comment": " Alert App Success.\nCurried Shortcut for a dismissible Success app alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertAppWarning",
        "comment": " Alert App Warning.\nCurried Shortcut for a dismissible warning app alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertDanger",
        "comment": " Alert Danger.\nCurried Shortcut for a dismissible danger alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertInfo",
        "comment": " Alert Info.\nCurried Shortcut for a dismissible Info alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertSuccess",
        "comment": " Alert Success.\nCurried Shortcut for a dismissible Success alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      },
      {
        "name": "alertWarning",
        "comment": " Alert Warning.\nCurried Shortcut for a dismissible warning alert.\n",
        "type": "ClarityUI.Alert.AlertItem -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.Layout",
    "comment": " Clarity Application Layout.\n\nDefines the Page Layout and basic structure.\n\nFor more on Clarity Application Layout: <https://vmware.github.io/clarity/documentation/app-layout>\n\n\n# Usage\n\n@docs layout\n\n\n# Options\n\n@docs LayoutComponents\n\n",
    "aliases": [
      {
        "name": "LayoutComponents",
        "comment": " Layout Component Options.\n\nPass the body of each section to its property. Recommend calling functions that return them\ninside of each of the.\n\n",
        "args": [
          "m"
        ],
        "type": "{ alerts : List (Html.Html m) , header : Html.Html m , subnav : List (Html.Html m) , sidenav : List (Html.Html m) , main : List (Html.Html m) }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "layout",
        "comment": " Main Layout Entry Point.\n\nPass a LayoutComponents Record to it to layout the bas application.\n\n\n## Use\n\n        import Html exposing (Html, div)\n        import ClarityUI.Layout as Layout\n        import ClarityUI.Header as Header\n\n        view : Model -> Html msg\n        view model =\n            Layout.layout\n                { alerts = []\n                , header = viewHeader model\n                , subnav = viewSubnav model\n                , sidenav = viewSidenav model\n                , main = mainContent model\n                }\n\n",
        "type": "ClarityUI.Layout.LayoutComponents msg -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.CDN",
    "comment": " CDN module.\nIncludes the clarity assets from a CDN for easy use with Elm Reactor.\n\n@docs styles, icons, iconsJS\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "icons",
        "comment": " Adds a link to an [unpkg](https://unpkg.com/#/) mirror of the clarify-icons css\n",
        "type": "Html.Html msg"
      },
      {
        "name": "iconsJS",
        "comment": " Adds a script to an unpkg](<https://unpkg.com/#/>) mirror of the clarify-icons js\n",
        "type": "Html.Html msg"
      },
      {
        "name": "styles",
        "comment": " Adds a link to an [unpkg](https://unpkg.com/#/) mirror of the clarify-ui css\n\n    import ClarityUI.CDN\n\n    view : Model -> Html Msg\n    view model =\n        div []\n            [ CDN.styles -- css embedded inline\n            ]\n\n",
        "type": "Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "ClarityUI.Card",
    "comment": " Wrapper around Clarity Cards\n\nfor More on clarity cards: <https://vmware.github.io/clarity/documentation/cards>\n\n\n# Methods\n\n@docs baseCard, card, clickableCard\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "baseCard",
        "comment": " Base Card Function.\nImplements clarity card.\n\nDocumentation about clarity card : <https://vmware.github.io/clarity/documentation/cards>\n\n",
        "type": "Maybe.Maybe String -> List (List (Html.Html msg)) -> List (Html.Html msg) -> Bool -> Html.Html msg"
      },
      {
        "name": "card",
        "comment": " Card Function\nCurried Base Card Function.\n",
        "type": "Maybe.Maybe String -> List (List (Html.Html msg)) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "clickableCard",
        "comment": " Clickable Card Function\nCurried Base Card Function for a clickable card.\n",
        "type": "Maybe.Maybe String -> List (List (Html.Html msg)) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]