[
  {
    "name": "DoubleSlider",
    "comment": " A single slider built natively in Elm\n\n\n# Model\n\n@docs Model, defaultModel\n\n\n# Update\n\n@docs Msg, update, subscriptions\n\n\n# View\n\n@docs view, fallbackView, formatCurrentRange\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " The base model for the slider\n",
        "args": [],
        "type": "{ min : Float , max : Float , step : Int , lowValue : Float , highValue : Float , dragging : Bool , draggedValueType : DoubleSlider.SliderValueType , rangeStartValue : Float , thumbStartingPosition : Float , dragStartPosition : Float , thumbParentWidth : Float , overlapThreshold : Float , minFormatter : Float -> String , maxFormatter : Float -> String , currentRangeFormatter : Float -> Float -> Float -> Float -> String }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " The basic type accepted by the update\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "defaultModel",
        "comment": " Returns a default range slider\n",
        "type": "DoubleSlider.Model"
      },
      {
        "name": "fallbackView",
        "comment": " Displays the slider using two inputs\n",
        "type": "DoubleSlider.Model -> Html.Html DoubleSlider.Msg"
      },
      {
        "name": "formatCurrentRange",
        "comment": " Renders the current values using the formatter\n",
        "type": "DoubleSlider.Model -> String"
      },
      {
        "name": "subscriptions",
        "comment": " Returns the subscriptions necessary to run\n",
        "type": "DoubleSlider.Model -> Platform.Sub.Sub DoubleSlider.Msg"
      },
      {
        "name": "update",
        "comment": " takes a model and a message and applies it to create an updated model\n",
        "type": "DoubleSlider.Msg -> DoubleSlider.Model -> ( DoubleSlider.Model, Platform.Cmd.Cmd DoubleSlider.Msg, Bool )"
      },
      {
        "name": "view",
        "comment": " Displays the slider\n",
        "type": "DoubleSlider.Model -> Html.Html DoubleSlider.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "SingleSlider",
    "comment": " A single slider built natively in Elm\n\n\n# Model\n\n@docs Model, defaultModel\n\n\n# Update\n\n@docs Msg, update, subscriptions\n\n\n# View\n\n@docs view\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " The base model for the slider\n",
        "args": [],
        "type": "{ min : Float , max : Float , step : Float , value : Float , minFormatter : Float -> String , maxFormatter : Float -> String , currentValueFormatter : Float -> Float -> String }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " The basic type accepted by the update\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "defaultModel",
        "comment": " Default model\n",
        "type": "SingleSlider.Model"
      },
      {
        "name": "subscriptions",
        "comment": " Returns the subscriptions necessary to run\n",
        "type": "SingleSlider.Model -> Platform.Sub.Sub SingleSlider.Msg"
      },
      {
        "name": "update",
        "comment": " takes a model and a message and applies it to create an updated model\n",
        "type": "SingleSlider.Msg -> SingleSlider.Model -> ( SingleSlider.Model, Platform.Cmd.Cmd SingleSlider.Msg, Bool )"
      },
      {
        "name": "view",
        "comment": " Displays the slider\n",
        "type": "SingleSlider.Model -> Html.Html SingleSlider.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]