[
  {
    "name": "Core.NotificationMenu",
    "comment": " Displays notification alerts\n\n\n# Exported\n\n@docs view, Model, update, Msg, init\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " Placeholder\n",
        "args": [],
        "type": "{ unseenCount : Maybe.Maybe Int }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Placeholder\n",
        "args": [],
        "cases": [
          [
            "UpdateBadge",
            [
              "Json.Decode.Value"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "init",
        "comment": " Placeholder\n",
        "type": "( Core.NotificationMenu.Model , Platform.Cmd.Cmd Core.NotificationMenu.Msg )"
      },
      {
        "name": "update",
        "comment": " Placeholder\n",
        "type": "Core.NotificationMenu.Msg -> Core.NotificationMenu.Model -> ( Core.NotificationMenu.Model , Platform.Cmd.Cmd Core.NotificationMenu.Msg )"
      },
      {
        "name": "view",
        "comment": " Placeholder\n",
        "type": "Core.NotificationMenu.Model -> Html.Html Core.NotificationMenu.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Core.NotificationDrawer",
    "comment": " Displays latest notifications\n\n\n# Exported\n\n@docs Msg, Model, Flags, subscriptions, view, update, init, isDrawerOpen\n\n",
    "aliases": [
      {
        "name": "Flags",
        "comment": " A flag to represent the API endpoint to retreive notifications\n",
        "args": [],
        "type": "{ notifierApiEndpoint : String }"
      },
      {
        "name": "Model",
        "comment": " A representation of the NotificationDrawer\n",
        "args": [],
        "type": "{ flags : Core.NotificationDrawer.Flags , notifications : Core.NotificationDrawer.PaginatedResponse , currentPage : Int , drawer : CarwowTheme.Drawer.Model , loadMoreDisabled : Bool }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " The different messages the Notification Drawer accepts\n\nNewNotification — A new notification has occured\nNotificationsResponse — A response has been received from the external notifications API\nDrawerMsg — An action has occured on the drawer element\nLoadMoreNotifications — The user has requested more notifications\n\n",
        "args": [],
        "cases": [
          [
            "NewNotification",
            [
              "String"
            ]
          ],
          [
            "DrawerMsg",
            [
              "CarwowTheme.Drawer.Msg"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "init",
        "comment": " Initialise the model\n",
        "type": "Core.NotificationDrawer.Flags -> ( Core.NotificationDrawer.Model , Platform.Cmd.Cmd Core.NotificationDrawer.Msg )"
      },
      {
        "name": "isDrawerOpen",
        "comment": " The current state of the drawer.\n\nReturns true if the drawer is opened, false if it isn't\n\n",
        "type": "Core.NotificationDrawer.Model -> Bool"
      },
      {
        "name": "subscriptions",
        "comment": " Placeholder\n",
        "type": "Core.NotificationDrawer.Model -> Platform.Sub.Sub Core.NotificationDrawer.Msg"
      },
      {
        "name": "update",
        "comment": " Update the model based on the message received\n",
        "type": "Core.NotificationDrawer.Msg -> Core.NotificationDrawer.Model -> ( Core.NotificationDrawer.Model , Platform.Cmd.Cmd Core.NotificationDrawer.Msg )"
      },
      {
        "name": "view",
        "comment": " The view for the notification drawer component\n",
        "type": "Core.NotificationDrawer.Model -> Html.Html Core.NotificationDrawer.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]